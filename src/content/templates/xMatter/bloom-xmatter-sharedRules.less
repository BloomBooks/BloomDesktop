// Styles that are shared by both the regular book front matter css and the more minimalist epub front matter css.

@MarginBetweenBlocks: 2em;
@DefaultCoverTitle1FontSize: 22pt;
@DefaultCoverTitle2FontSize: 12pt;
// Same as our ordinary default, but we have to set it explicitly because of a trick that
// copies the DefaultCoverTitle1FontSize to the translationGroup.
@DefaultCoverTitle3FontSize: 10pt;

.frontCover {
    @MarginBetweenMinorItems: 5px;
    .bloom-translationGroup.bookTitle {
        .bloom-editable {
            //NB: THe order here is important. bloom-content1 should be last so that if a box is
            // *both* bloom-contentNational1 and bloom-content1 (as is the default case for source collections),
            // we want the bloom-content1 rule to win.
            font-weight: bold;
            // 1.4em is the minimum to show ทไปทั่วพื้ without clipping.
            // Until Bloom 4.4, that was the default, but it was ugly
            // for everyone else. 1.0 looks great for a simple latin
            // alphabet without descenders, and 1.1 is safe with descenders. See BL-6402
            line-height: 1.1;
            min-height: auto; // elsewhere there is a min-height, that may or may not be a good idea, but for sure we don't want it here.
            // This group is tricky. Because it's in xmatter, and we don't have distinct xmatter rules for legacy, it needs
            // to produce the expected behavior for both legacy and modern themes (where cover title visibility is controlled by
            // the appearance system). The first three rules are the legacy behavior, the second three are the modern behavior.
            // When a modern theme applies and the field is controlled by it, we still get the old classes, but also, any visible bloom-editable
            // whose visibility is controlled by the appearance system (like cover title here) gets bloom-contentFirst/Second/Third.
            // The rules below for bloom-contentFirst/Second/Third will override the legacy rules if they apply, since they come later
            // and have the same specificity and in most cases set the same properties. Unfortunately, some of the legacy rules set
            // bottom-margin, but the bloom-contentNational2 rule and its modern replacement for bloom-contentThird do not. So for example a
            // cover title bloom-editable that has both bloom-contentThird (because it is the third collection language and all titles are turned on)
            // and bloom-content1 (because it is the only language turned on for content pages) is in danger of getting unwanted margin.
            // So the two legacy rules that set bottom-margin have a where clause to prevent them from applying if the element also
            // has bloom-contentThird. (The where clause prevents them from being more specific than the bloom-contentFirst/Second
            // rules that come after them and need to override them.)
            // I considered a few alternatives:
            // 1. Put three :not clauses on the first three rules to prevent them applying if the element has any of the new classes.
            // This would work but feels even uglier. It might be easier to understand, though.
            // 2. Put another class on every element to mark it as being controlled by the appearance system. Then we just need one :not,
            // but everything gets that much more cluttered.
            // 3. Rename the new classes so we can match any of them with a wild card :not. But I don't like any such names I've come up with.
            // 4. Make the code that inserts all these classes not insert the legacy ones if the appearance system is in control. This would work
            // for the rules here, but I'm worried about breaking other stuff that depends on the old classes.
            // 5. Replace @MarginBetweenMinorItems with an appearance-system CSS variable and make it apply to all three cover titles
            // when in a modern theme. Then we can get rid of the :not's. This is the best idea, but it's a bigger change than I feel authorized to make.
            &.bloom-contentNational1:where(:not(.bloom-contentThird)) {
                //NB: we show the national language even if this is a monolingual book
                font-size: @DefaultCoverTitle2FontSize;
                //I don't know why the line-height here has to be bigger than for
                // the larger font of the content1. I am using "ÊȘ ȭ,dấu huyềnทไปทั่วพื้ ช้ต่างปู" as a test.
                //no: big line-heights make normal scripts ugly. See BL-6402 : line-height: 1.7em;
                margin-bottom: @MarginBetweenMinorItems;
            }
            &.bloom-contentNational2 {
                font-size: @DefaultCoverTitle3FontSize;
            }
            &.bloom-content1:where(:not(.bloom-contentThird)) {
                //main title
                font-size: @DefaultCoverTitle1FontSize;
                margin-bottom: @MarginBetweenMinorItems;
            }
            // These make the above obsolete, except in legacy mode, where we need them since there is no
            // separate legacy CSS for xmatter. When relevant the new rules win by coming later.
            &.bloom-contentFirst {
                //main title
                font-size: @DefaultCoverTitle1FontSize;

                margin-bottom: @MarginBetweenMinorItems;
            }
            &.bloom-contentSecond {
                font-size: @DefaultCoverTitle2FontSize;
                //I don't know why the line-height here has to be bigger than for
                // the larger font of the content1. I am using "ÊȘ ȭ,dấu huyềnทไปทั่วพื้ ช้ต่างปู" as a test.
                //no: big line-heights make normal scripts ugly. See BL-6402 : line-height: 1.7em;
                margin-bottom: @MarginBetweenMinorItems;
            }
            &.bloom-contentThird {
                font-size: @DefaultCoverTitle3FontSize;
            }
        }
    }
}

.Title-On-Cover-style {
    text-align: center;
}
.credits {
    .licenseAndCopyrightBlock {
        .copyright {
            margin-bottom: @MarginBetweenBlocks;
        }
        .licenseBlock {
            margin-bottom: @MarginBetweenBlocks;
        }
        img {
            // creative commons license image

            //note, if this is 93 or less, then FF29 (used to at least bloom 3.3) cuts off the right edge.
            //It was fine if you zoomed in, fine in a more modern FF, fine in PDF, etc.
            //I have tried changing a dozen different properties, including the image-rendering, and the
            // only thing that helped was to make it a bit larger
            width: 94px;
        }
    }
}
