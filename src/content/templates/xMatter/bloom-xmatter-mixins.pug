include ../bloom-foundation-mixins

//- -------------------------------------------------------------------------------
//-	This first group of mixins should be used to construct the factory as well
//- as custom xmatter templates.
//- -------------------------------------------------------------------------------

mixin image-common(key)
	+image(data-book=key)&attributes(attributes)
		block
//- in xmatter, everything must be keyed

mixin image-xmatter(key)
	+image-common(key)&attributes(attributes)

mixin page-xmatter(label)
	+page(label)(data-page="required singleton")&attributes(attributes)
		block

mixin page-cover(label)
	- requireOneArgument('page-cover',arguments)
	+page-xmatter(label).cover.coverColor.bloom-frontMatter&attributes(attributes)
		block

mixin chooser-topic
	.coverBottomBookTopic.bloom-userCannotModifyStyles.bloom-alwaysShowBubble.Cover-Default-style(data-derived="topic", data-functiononhintclick="showTopicChooser", data-hint = "Click to choose topic")

mixin field-ISBN
	.ISBNContainer(data-hint="International Standard Book Number. Leave blank if you don't have one of these.")&attributes(attributes)
		span.bloom-doNotPublishIfParentOtherwiseEmpty.Credits-Page-style
			| ISBN
		div.bloom-translationGroup.bloom-recording-optional(data-default-languages="*")
			div.bloom-editable(data-book="ISBN", lang="*").Credits-Page-style

mixin field-acknowledgments-localizedVersion(lang="N1", hint="Acknowledgments for this version, in {lang}. For example, give credit to the translator for this version.")
	//- readOnlyInAuthorMode: we want to leave this blank for if/when someone takes this doc and is translating it.
	//- Why both versionAcknowledgments && inside-cover-version-Credits-Page-style?
	//-   versionAcknowledgments governs placement on the page, inside-cover-version-Credits-Page-style is a
	//-   holding place for user style adjustments (like font-size)
	//- removed .bloom-readOnlyInAuthorMode because when you're putting together a shell book, you often have to put in the name of the translator
	+field-prototypeDeclaredExplicity(lang).versionAcknowledgments
		//- TODO: I want to change this to "Credit people involved in this translation, in {lang}", but many localizations
		//- will then not be used at all, even their old versions which are better than nothing. How to upgrade the English
		//- without losing all the rest?
		block versionAcknowledgmentsLabel
			label.bubble
				| #{hint}
		+editable(lang).versionAcknowledgments.Credits-Page-style(data-book="versionAcknowledgments")&attributes(attributes)

mixin field-acknowledgments-originalVersion(lang="N1", hint="Original (or Shell) Acknowledgments in {lang}")
	+field-prototypeDeclaredExplicity(lang).originalAcknowledgments
		label.bubble
			| #{hint}
		+editable(kLanguageForPrototypeOnly).bloom-copyFromOtherLanguageIfNecessary.Credits-Page-style(data-book='originalAcknowledgments')&attributes(attributes)
			| {Original Acknowledgments}

mixin cover-bottom-first-row-branding
	div(data-book='cover-bottom-first-row-branding-html' lang="*")

//- This was special for Afghanistan, isn't currently available in standard page
mixin cover-branding-bottom-left
	div(data-book='cover-branding-left-html' lang="*")

mixin cover-branding-top
	div(data-book='cover-branding-top-html' lang="*")

mixin cover-branding-bottom
	div(data-book='cover-branding-bottom-html' lang="*")

mixin credits-page-branding-top
	block credits-page-branding-top
		div(data-book='credits-page-branding-top-html' lang="*")

//- Note that inclusion of Credits-Page-style makes it responsive to user changing other text on the page.
//- This is a late (Dec 2020) change, which might cause older xmatters/branding problems if they don't
//- already override this block. If so, we'll fix those to lock down the size if that's actually
//- appropriate for them... copying the rest of the text should normally be the right thing to do.
mixin credits-page-branding-bottom
	block credits-page-branding-bottom
		div.Credits-Page-style(data-book='credits-page-branding-bottom-html' lang="*")

mixin title-page-branding-bottom
	block title-page-branding-bottom
		div(data-book='title-page-branding-bottom-html' lang="*")

mixin outside-back-cover-branding-top
	block outside-back-cover-branding-top-block
		div(data-book='outside-back-cover-branding-top-html' lang="*")

mixin outside-back-cover-branding-bottom
	//- we want to force any page that contains this to be published, because
	//- when working with a new branding, we generate placeholder text for this
	//- element in a CSS before: rule, and so it looks as though the element
	//- is empty, which can lead to the page being omitted in various contexts.
	//- This has no content by default, but it can be controlled by a data-book
	//- value in the branding.json for any particular branding.
	div.bloom-force-publish(data-book='outside-back-cover-branding-bottom-html' lang="*")

//- -------------------------------------------------------------------------------
//-	Unless every page of your xmatter pack needs to be different than the "factory"
//-	one that comes with Bloom, use the following mixins to reuse the pages that
//-	don't have to be customized.
//-	HOWEVER: at this point you'd still have to copy the CSS from factory-xmatter.css
//-	for them to be useful. In the future, Bloom may make it easier to just borrow
//-	pages along with the stylesheets that are needed.
//- -------------------------------------------------------------------------------

//- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//- If you copy any of these and paste them into your own custom xmatter template,
//- be sure to change the ids to your own unique ones!
//- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

mixin standard-cover-contents
	//- enhance: could we 1) adjust stylesheet and 2) preserve bookTitle value to simplify this to
	//- 	+field-matter('bookTitle').Title-On-Cover-style
	//- 		label.bubble Book title in {lang}
	//- This current pattern is born of pre-pug days when it didn't matter much, but now in the
	//- light of pug it is overly complicated.

	block cover-above-title
		+cover-branding-top

	block cover-title
		+field-prototypeDeclaredExplicitly-appearance("V,N1", "cover-title-LN-show").bookTitle
			label.bubble Book title in {lang}
			+editable(kLanguageForPrototypeOnly).bloom-nodefaultstylerule.Title-On-Cover-style.bloom-padForOverflow(data-book='bookTitle')

	block front-cover-image
		+standard-cover-image

	// 2 columns: first for an optional logo, then text content
	.bottomBlock
		+cover-bottom-first-row-branding.coverBottomFirstRowBranding
		+cover-branding-bottom-left.bottom-left-branding

		// 2 rows
		.bottomTextContent
			block cover-bottom-credits
				//NB: don't convert this to an inline label; that interferes with the bloom-copyFromOtherLanguageIfNecessary,
				// because it is never empty
				.creditsRow(data-hint='You may use this space for author/illustrator, or anything else.')
					+field-prototypeDeclaredExplicity("[CoverCreditsLanguage] DEFAULT:V")
						+editable(kLanguageForPrototypeOnly).smallCoverCredits.Cover-Default-style(data-book='smallCoverCredits')

			block cover-bottom-row-before-branding
				.bottomRow
					.coverBottomLangName.Cover-Default-style(data-derived='languagesOfBook')
					+chooser-topic.coverBottomBookTopic
			+cover-branding-bottom
			block cover-bottom-row-after-branding

//- Standard cover image has a (normally hidden) image description field.
//- The usual code for creating image description on demand is not satisfactory,
//- because the cover image description needs to have a data-book attribute
//- so that the contents will survive changes to xmatter (and updates in bringBookUpToDate)
mixin standard-cover-image
	.bloom-imageContainer
		img(data-book="coverImage", src="placeHolder.png")
		+field-cover-image("auto").bloom-imageDescription.bloom-trailingElement

mixin field-cover-image(languages)
	-requireOneArgument('field', arguments);
	.bloom-translationGroup(data-default-languages=languages)&attributes(attributes)
		+editable-cover-image(kLanguageForPrototypeOnly)

mixin editable-cover-image(language)
	- requireOneArgument('editable', arguments)
	.bloom-editable.ImageDescriptionEdit-style(lang=language, contenteditable="true", data-book="coverImageDescription")&attributes(attributes)


mixin factoryStandard-outsideFrontCover
	// FRONT COVER
	+page-cover('Front Cover')(data-export='front-matter-cover', data-xmatter-page='frontCover')&attributes(attributes).frontCover.outsideFrontCover#74731b2d-18b0-420f-ac96-6de20f659810
		+standard-cover-contents
		block front-cover-footer

mixin factoryStandard-creditsInsideFrontCover
	// Inside Front Cover CREDITS PAGE
	+page-cover("Credits Page").credits(data-export='front-matter-credits', data-xmatter-page='credits')&attributes(attributes)#B7DB9AC7-5DCC-4D55-86B5-6DD2A5303AA9
		+credits-contents

mixin factoryStandard-credits-interiorPage
	// CREDITS PAGE
	+page-xmatter("Credits Page").bloom-frontMatter.credits(data-export='front-matter-credits', data-xmatter-page='credits')&attributes(attributes)#2CCC8F26-A797-4A5B-9BA7-E29823D2CB24
		+credits-contents

mixin block-licenseAndCopyright
	.bloom-metaData.licenseAndCopyrightBlock(data-functiononhintclick="showCopyrightAndLicenseDialog",data-hint="Click to Edit Copyright & License",lang="V")
		.copyright(data-derived="copyright", lang="*").Credits-Page-style
			| {copyright}
		block copyrightHolderAddress
			// no default content
		.licenseBlock
			img.licenseImage(src="license.png" data-derived="licenseImage")
			.licenseUrl(data-derived="licenseUrl", lang="en") http://creativecommons.org/licenses/by/4.0/
			.licenseDescription(data-derived="licenseDescription",lang="en").Credits-Page-style You are free to make commercial use of this work. You may adapt and add to this work. You must keep the copyright and credits for authors, illustrators, etc.
			.licenseNotes(data-derived="licenseNotes", lang="en").Credits-Page-style
				| {License Notes}

mixin credits-contents(includeIsbn = true)
	block creditsContent
		+credits-page-branding-top
		+block-licenseAndCopyright
		+field-acknowledgments-localizedVersion
		//- Here code puts in something like "From the original Copyright Pratham Books 2016. CC-BY. Any license notes here."
		.copyright(data-derived="originalCopyrightAndLicense").Credits-Page-style
		+field-acknowledgments-originalVersion

		if(includeIsbn)
			+field-ISBN
		+credits-page-branding-bottom

mixin factoryStandard-titlePage
	+page-xmatter('Title Page').titlePage.bloom-frontMatter(data-export='front-matter-title-page', data-xmatter-page='titlePage')&attributes(attributes)#5dcd48df-e9ab-4a07-afd4-6a24d0398381
		+title-page-contents

mixin standard-titlePage-inside-front-cover
	+page-xmatter('Inside Front Cover').cover.coverColor.titlePage.bloom-frontMatter(data-export='front-matter-title-page', data-xmatter-page='titlePage')&attributes(attributes)#aacd48aa-aaab-4a07-afd4-6a24d03983aa
		+title-page-contents

mixin standard-creditsPage-back-cover
	//re data-export: if we export this, we still want to export it as front matter
	+page-xmatter('Inside Back Cover').cover.coverColor.credits.bloom-backMatter(data-export='front-matter-credits-page', data-xmatter-page='credits')&attributes(attributes)#bbcd48aa-bbab-4a07-afd4-6a24d03983bb
		+credits-contents

mixin standard-originalContributions
	block originalContributions
		+field-prototypeDeclaredExplicity("N1")#originalContributions
			block originalContributionsLabel
				//- if you modify this next line, modify it also in the SIL PNG custom xmatter,
				//- and probably the MXB custom Xmatter
				label.bubble(data-link-text='Paste Image Credits' data-link-target='PasteImageCredits()')
					| The contributions made by writers, illustrators, editors, etc., in {lang}
			+editable(kLanguageForPrototypeOnly).credits.bloom-copyFromOtherLanguageIfNecessary.Content-On-Title-Page-style(data-book='originalContributions')


mixin title-page-contents
	block titlePageContents
		// TITLE PAGE
		+field-prototypeDeclaredExplicity("V,N1")#titlePageTitleBlock
			label.bubble Book title in {lang}
			+editable(kLanguageForPrototypeOnly).bloom-nodefaultstylerule.Title-On-Title-Page-style.bloom-padForOverflow(data-book='bookTitle')
		div.largeFlexGap
		+standard-originalContributions
		div.smallFlexGap
		+field-prototypeDeclaredExplicity("N1")#funding
			label.bubble Use this to acknowledge any funding agencies.
			+editable(kLanguageForPrototypeOnly).funding.Content-On-Title-Page-style.bloom-copyFromOtherLanguageIfNecessary(data-book='funding')
		div.largeFlexGap
		#languageInformation.Content-On-Title-Page-style
		.languagesOfBook(data-derived='languagesOfBook')
		//- review: can we get rid of these "langName" classes?
		.langName('data-library'='dialect')
		.langName(data-library='languageLocation').bloom-writeOnly
		div.fillPageFlexGap.
		+title-page-branding-bottom

mixin back-cover-inner-contents
	block insideBackCoverContents
		div(data-book='inside-back-cover-branding-top-html' lang="*")
		+field-mono-meta("N1","insideBackCover").Inside-Back-Cover-style
			label.bubble If you need somewhere to put more information about the book, you can use this page, which is the inside of the back cover.

mixin front-cover-inner-contents
	block insideFrontCoverContents
		+field-mono-meta("N1","insideFontCover").Inside-Front-Cover-style
			label.bubble If you need somewhere to put more information about the book, you can use this page, which is the inside of the front cover.

mixin factory-insideFrontCover
	+page-cover('Inside Front Cover').cover.coverColor.insideFrontCover.bloom-frontMatter(data-export='front-matter-inside-front-cover', data-xmatter-page='insideFrontCover')#BA00DE13-734C-4036-9901-7040275B9000
		+front-cover-inner-contents

mixin factoryStandard-insideBackCover
	// Inside Back Cover
	+page-xmatter('Inside Back Cover').cover.coverColor.insideBackCover.bloom-backMatter(data-export='back-matter-inside-back-cover', data-xmatter-page='insideBackCover')&attributes(attributes)#502BE62F-A4D0-4225-A598-1A203FA73239
		+back-cover-inner-contents

mixin back-cover-outer-contents
	block outsideBackCover
		+outside-back-cover-branding-top
		//- +field-mono-version1("N1","If you need somewhere to put more information about the book, you can use this page, which is the outside of the back cover.").outside-back-cover-style(data-book='outsideBackCover')
		block outsideBackCoverContentsTop
			+field-mono-meta("N1","outsideBackCover").Outside-Back-Cover-style
				label.bubble If you need somewhere to put more information about the book, you can use this page, which is the outside of the back cover.
		//- this isn't used, normally, but the block is here so you can insert something
		block outsideBackCoverContentsBottom
		+outside-back-cover-branding-bottom
		block back-cover-footer

mixin factoryStandard-outsideBackCover
	// Outside Back Cover
	+page-xmatter('Outside Back Cover').cover.coverColor.outsideBackCover.bloom-backMatter(data-export='back-matter-back-cover', data-xmatter-page='outsideBackCover')&attributes(attributes)#6AB1D898-9E35-498E-99D4-132B46FAFDA4
		+back-cover-outer-contents

mixin standard-ISOLanguageCode
	.iso693Code
		// TODO we need this to be localizable, so we can have "ISO 639-3 Language Code" or "Code langue ISO 639-3"
		| ISO 639 Language Code:
		DIV(data-collection='iso639Code')

mixin standard-endExtra1PageForDevice
	//- In paper book, this is the inside front cover
	//- When making a .bloompub, Bloom will remove this if it is empty.
	+page-xmatter("End Extra 1").cover.coverColor.insideFrontCover.bloom-backMatter(data-export='front-matter-inside-front-cover', data-xmatter-page="insideFrontCover")#898b6622-837b-49cd-9938-2de76f6d4b19
		+front-cover-inner-contents

mixin standard-endExtra2PageForDevice
	//- In paper books, this is the inside back cover
	//- When making a .bloompub, Bloom will remove this if it is empty.
	+page-xmatter("End Extra 2").cover.coverColor.insideBackCover.bloom-backMatter(data-export='back-matter-inside-back-cover', data-xmatter-page="insideBackCover")#898b6622-837b-49cd-9938-2de76f6d4b20
		+back-cover-inner-contents

mixin standard-endExtra3PageForDevice
	//- In paper books, this is the outside back cover
	//- When making a .bloompub, Bloom will remove this if it is empty.
	+page-xmatter("End Extra 3").cover.coverColor.outsideBackCover.bloom-backMatter(data-export='back-matter-back-cover', data-xmatter-page='outsideBackCover')&attributes(attributes)#6AB1D898-9E35-498E-99D4-132B46FAFDA4
		+back-cover-outer-contents
