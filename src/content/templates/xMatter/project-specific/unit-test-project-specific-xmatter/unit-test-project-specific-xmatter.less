// the contents here mostly don't matter.
// The main unit test is just trying to find this file.

// But there is one other test which is reading xmatter.json in this directory.
// And to make sure the test uses this xmatter instead of falling back to Device,
// we have to include the string ".Device16x9" in the content of this file.
// Silly, right?

@XMatterPackName: "unit-test-project-specific";

/* .Device16x9Landscape { } */

@circleDiameter: 60px;
@creditsLineSpacing: 14px;
@halfLetterPageWidth: 5.5in;
@halfLetterPageHeight: 8.5in;
@outerBackCoverSpacing: 10px;

body,
div.bloomPlayer-page {
    // the bloomPlayer line above allows the same rules to work in the Device xmatter.
    &.leveled-reader {
        .numberLabel::before {
            content: "Level";
        }
        .numberCircle {
            background-color: #ba0c2f;
        }
    }
    &.decodable-reader {
        .numberLabel::before {
            content: "Level"; // Yes, this is now 'Level' as well.
        }
        .numberCircle {
            background-color: rgb(0, 47, 108);
        }
    }
    &:not(.decodable-reader) {
        .decodableStageLettersRow {
            display: none !important; // for decodable only
        }
        &:not(.leveled-reader) {
            .numberCircle {
                display: none !important;
            }
        }
    }
    .marginBox .spacer {
        flex: 3; // Create space at the right place
    }
    .outsideBackCover .marginBox {
        img {
            max-width: 100% !important;
        }
        .abcTopic2,
        .curricularTheme,
        .decodableStageLettersRow,
        .levelOrStageAndNumberRow {
            margin-top: @outerBackCoverSpacing;
            flex-direction: row;
            display: flex;
            .label {
                flex: 1;
                &.numberLabel::before {
                    content: "Level:"; // back cover needs a colon
                }
            }
            .bloom-translationGroup {
                min-height: unset;
                flex: 2.5;
                .bloom-editable {
                    text-align: start;
                }
            }
            [data-book] {
                flex: 2.5;
            }
        }
    }
}

body {
    // this template is meant for half-letter portrait pages
    .HalfLetterPortrait {
        .marginBox {
            top: 0.5in !important;
            left: 0.5in !important;
            width: (@halfLetterPageWidth - 1in) !important;
            height: (@halfLetterPageHeight - 0.9in) !important;
            img {
                // Override a rather persistent base rule that wanted to take into account gutter
                // margins that we aren't using. This would have made the image skinnier and left-justified,
                // instead of full width and centered, like we want.
                max-width: unset;
            }
        }
        &.frontCover .marginBox {
            top: 0.4in !important; // leave room for inevitable font space above title
        }
    }
}

.cover {
    .titleAndNumberCircle {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        .bookTitle {
            flex: unset; // Unhelpful value inherited from Traditional xmatter
            min-width: 75%;
            min-height: 1.3em;
            .bloom-editable {
                // Ideally the customer would like the title left-justified (as here) if there is a number
                // circle display, but centered if there is no circle (neither Decodable or Leveled reader).
                // Unfortunately, I haven't figured out how to change 'text-align' based on another element's
                // css display value.
                text-align: start;
            }
            // It took some doing to figure out the specificity to overrule Bloom "normal" title font-size rule
            // and yet still allow the user-adjustable inline style to work. This should set titles
            // to default to 26pt unless overridden by the user. But actually, there is code somewhere that
            // makes reader template styles unchangeable.
            .Title-On-Cover-style[data-book="bookTitle"] {
                font-size: 26pt;
            }
        }
    }

    // level or stage
    .numberCircle {
        margin-top: 0.08in; // align with top of Title text
        width: @circleDiameter;
        height: @circleDiameter;

        border-radius: 50%;
        color: white;
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-transform: uppercase;
        span {
            font-weight: bold;
        }

        [data-book="levelOrStageNumber"] {
            width: @circleDiameter;
            font-size: 22pt;
            font-weight: bold;
            min-height: 1em;
            line-height: 30px;
        }
        p {
            margin-bottom: 0;
        }
    }
    .descriptionAndTopicRow {
        font-weight: bold;
    }
    [data-book="cover-branding-bottom-html"] {
        margin-top: 1em;
        img {
            margin-right: 0;
        }
    }
}

.originalAcknowledgments .bloom-editable p {
    text-align: center;
    font-weight: bold;
    font-size: 14pt;
}

.levelOrStageAndNumberRow {
    display: flex;
    flex-direction: row;
    justify-content: start;
    margin-top: @outerBackCoverSpacing;
}

.outsideBackCover .levelOrStageAndNumberRow div[data-book]:empty:after {
    content: "Kindergarten";
}

.titlePage {
    [data-book="bookTitle"] {
        font-size: 26pt;
    }
    .levelOrStageAndNumberRow {
        justify-content: center;
    }
    .descriptionAndTopicRow {
        margin-top: auto; // push to bottom
        margin-bottom: 1em;
    }
}

.readerDescription {
    text-align: center; // if alone on line (e.g. Title Page)
}

.descriptionAndTopicRow {
    display: flex;
    flex-direction: row;
    flex: 0 0 auto;
    justify-content: space-between;
    .readerDescription {
        min-width: 50%;
        text-align: start;
        font-size: 14pt;
    }
}

.abcTopic {
    position: absolute;
    right: 0;
    top: 70px;
    width: 25%;
    text-align: end;
    font-size: 10pt;
    z-index: 10;
}

.credits {
    .marginBox {
        display: flex;
        flex-direction: column;
        [data-book="bookTitle"] {
            font-size: 12pt;
            font-weight: bold;
        }
        .levelOrStageAndNumberRow {
            display: flex;
            flex-direction: row;
            margin-bottom: @creditsLineSpacing;
        }
        .bloom-translationGroup {
            margin-bottom: @creditsLineSpacing;
        }
        [data-book="credits-branding-approval-and-copyright-html"] {
            margin-bottom: @creditsLineSpacing;
        }

        .bottomCredits {
            margin-top: auto;
        }
        .originalAcknowledgments .bloom-editable {
            margin-bottom: 0;
            p {
                text-align: start;
                font-size: 12pt;
            }
        }
    }
}

.licenseDetails {
    font-size: 8pt;
}

.licenseImage {
    width: 80px;
    margin-bottom: @creditsLineSpacing;
}
