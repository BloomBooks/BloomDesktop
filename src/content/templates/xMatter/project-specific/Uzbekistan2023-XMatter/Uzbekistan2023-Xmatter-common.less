@import (reference) "../../bloom-xmatter-common.less";
@import (reference) "../../../../bookLayout/basePage.less";

:root {
    --bleed-tolerance: 3mm;
}

// These rule are common to regular Uzbekistan2023-Xmatter and the epub version.
// Some of these rules, especially for the front cover, may not work on all readers,
// but by experiment they seem to produce reasonable results. They were originally
// part of the main Uzbekistan2023-Xmatter, developed to produce exactly the result
// we want in Bloom Player.

// we need a lot of classes here to overcome the unfortunately "!important" class put in by Bloom at runtime
div.bloom-page.outsideFrontCover.coverColor,
div.bloom-page.outsideBackCover.coverColor {
    color: white;
    // this will get overwritten if they choose a background color
    background-color: gray !important;
}

//NB: these can't be only on <body> because they are also used in page thumbnails and in epubs
*[data-bookshelfurlkey*="Grade1"] {

    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #143A63 !important;
    }
}

*[data-bookshelfurlkey*="Grade2"] {

    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #702A2D !important;
    }
}

*[data-bookshelfurlkey*="Grade3"] {

    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #776A5A !important;
    }
}

*[data-bookshelfurlkey*="Grade4"] {

    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #ADC4D8 !important;
    }
}

.outsideFrontCover .marginBox {
    top: 0;
    left: 0 !important;
    height: 100% !important;
    width: 100% !important;
}

.frontCover .placeholder,
.frontCover .bloom-imageContainer {
    margin: 0;
    margin-bottom: 15px;

    img[data-book="coverImage"] {
        margin-bottom: auto; // If the image is too short, align from the top. I don't know for certain that they want this
    }
}

/* needs more work
.bloom-mediaBox {

    &:before,
    &:after {
        position: absolute;
        content: url('crop.svg') !important;
        z-index: 10000;
        border: unset;
    }

    &:before {

        top: -3mm !important;
        left: -3mm !important;
    }

    &:after {
        height: fit-content;
        right: 0 !important;
        left: unset !important;
        transform: rotate(90deg);
        top: 0 !important;
        right: 0 !important;
    }

}
*/

// don't show second language on cover
.frontCover .bloom-translationGroup.bookTitle .bloom-editable.bloom-contentNational1:not(.bloom-content1) {
    display: none;
}

.frontCover .gradeBadgeRow {
    display: flex;
    justify-content: center;
    height: 100px;
    margin-bottom: 13px;
}


.creditsRow {
    border-top: solid rgba(255, 255, 255, 0.3);
    height: 16mm;
}

.frontCover .bloom-translationGroup {
    // constrain text to within the safe area
    margin-left: calc(2 * var(--bleed-tolerance));
    margin-right: calc(2 * var(--bleed-tolerance));
}

// This much of the translation group will be trimmed off if the printer
// achieves the ideal trim cut: the bleed area plus the amount of the original
// A5 page that is cut off when we scale the width to RA4 which makes the height
// a bit more than RA5. And similarly for other sizes.
.frontCover.A5Portrait .bloom-translationGroup.bookTitle {
    padding-top: @bleed + (@A5Portrait-Height-Excess / 2);
}

.frontCover.USComicPortrait .bloom-translationGroup.bookTitle {
    padding-top: @bleed + (@USComicPortrait-Height-Excess / 2);
}

.outsideBackCover {
    .Outside-Back-Cover-style {
        margin-top: 8mm; // 15mm wasn't enough room for text 15mm;  In Landscape mode, we remove this
        font-size: var(--OutsideBackCoverCreditsFontSize);
    }
}


/* Element | http://localhost:8089/bloom/C%3A/Users/hatto/Documents/Bloom/Kyrgyz%20Branding%20Test/Book/8444a5b9-4b6a-476a-90da-cc003fbc1fea-memsim-Preview.html */

//.frontCover div.bloom-imageContainer:nth-child(2) > img:nth-child(1) {
.frontCover div.bloom-imageContainer>img {
    // We use "contain" instead of "unset" so that when previewing a book
    // that has not been edited yet, we don't get a distorted picture. Instead,
    // we get a white border that doesn't tightly fit the image. Then in
    // bloomImage.SetImageDisplaySizeIfCalledFor(), we overwrite this to become object-fit:cover.
    // object-fit: contain;
    // margin-left: auto;
    // margin-right: auto;
    // margin-top: auto;
    // margin-bottom: auto;
    // box-sizing: border-box; // keep it within the image-container, not 6px beyond it because of the border
}


.Device16x9Portrait,
.Device16x9Landscape {
    &.frontCover {
        .bloom-translationGroup.bookTitle {
            padding-top: 0;
            padding-bottom: 0;
        }
    }
}