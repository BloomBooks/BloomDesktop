@import "../../bloom-xmatter-common.less";
@import (reference) "../../../../bookLayout/basePage.less";
@import "./Uzbekistan2023-Xmatter-common.less";

@XMatterPackName: "Uzbekistan2023";
@bleed: 3mm;

// :root {
//   Normally, we would put the defaults in a :root psuedo-element like this.
//   But something about the way scoped styles work in bloom-player causes this not to work.
//   So instead, we set the defaults on the .bloom-page class and override on the specific
//   layouts as necessary.
// }
.bloom-page {
    --OutsideBackCoverLogoHeight: 15mm;
    --OutsideBackCoverCreditsFontSize: 9pt;

    &.A3Portrait {
        --OutsideBackCoverLogoHeight: 30mm;
        --DividerDiamondsFontSize: 20pt;
        --OutsideBackCoverCreditsFontSize: 14pt;
    }

    &.A5Landscape {
        --OutsideBackCoverLogoHeight: 14mm;
    }

    &.Device16x9Portrait {
        --OutsideBackCoverLogoHeight: 10mm;
    }

    &.Device16x9Landscape {
        --OutsideBackCoverLogoHeight: 10mm;
    }
}

@A5Landscape-column2-left: 11.5mm;

// Landscape has a VERY different layout. We use CSS Grid display to move the items around.
.A5Landscape,
.A4Landscape,
.A3Landscape {
    [data-book="outside-back-cover-branding-top-right-html"] img {
        //     position: absolute;
        //     left: @A5Landscape-column2-left;
        //     top: 4mm;
        margin-left: 75px; // Note: this must cause the left edge of the logo to align with the text below
    }

    &.outsideBackCover {
        .bottomHalfGrid {
            height: 100%;
            display: grid;
            grid-template-columns: 310px auto;
            grid-template-rows: auto 3em;
            margin-top: 1cm;

            .bloom-translationGroup {
                margin-top: unset;
                grid-row: 1;
                grid-column: 1 / span 1;
            }

            [data-book="level-image-html"] {
                grid-row: 1;
                grid-column: 2 / span 1;
                margin-left: auto;
                margin-right: auto;
                margin-top: auto;
                margin-bottom: auto;
            }
        }
    }
}

.A5Portrait,
.A4Portrait,
.A3Portrait {
    .bottomHalfGrid {
        height: 600px;
        display: grid;
        grid-template-columns: auto;
        grid-template-rows: 290px 30px auto;

        .bloom-translationGroup {
            grid-row: 1;
        }
    }
}

.A3Portrait {
    // The font is larger, so we need it to be taller to support the same amount of
    // text.
    .bottomHalfGrid {
        grid-template-rows: 435px 30px auto;
    }
}

.A5Portrait,
.A5Landscape,
.A4Portrait,
.A4Landscape,
.A3Portrait,
.A3Landscape,
.Device16x9Portrait,
.Device16x9Landscape {
    .outside-back-cover-branding-top-block {
        justify-content: space-between;
    }
}

// the subtraction here makes up for the padding-top
@headerHeightMinusBleed: calc(var(--HeaderHeight) - @bleed);

.bloom-mediaBox {
    // :not(.Device16x9Portrait):not(.Device16x9Landscape)&::before {
    //     // we're not expecting an edge-to-edge images, so no need to show the transparent bleed area. Just make it black.
    //     border-color: black !important;
    // }

    // &::after {
    //     // don't show the trim area at all.
    //     border: none !important;
    // }
}

/*
.outside-back-cover-branding-top-block {
    img {
        height: var(--OutsideBackCoverLogoHeight);
    }
}

.A5Landscape {
    .Outside-Back-Cover-style {
        margin-top: unset; // In portrait, there is a margin mode, we remove this
    }
}

// NOTE. The existence of this selector tells XMatterHelper that we can handle device layout, so don't revert to a specialized one.
.Device16x9Portrait,
.Device16x9Landscape {
    &.outsideBackCover {
        .marginBox {
            left: 19px !important;
            height: calc(100% - 8mm) !important;

            .outside-back-cover-branding-top-block {
                height: var(--HeaderHeight);
                padding-top: unset;
            }

            [data-book="outside-back-cover-branding-top-right-html"] img {
                margin-left: 75px;
            }
        }

        .bottomHalfGrid {
            display: grid;
            grid-template-columns: auto;

            [data-book="level-image-html"] {
                padding-top: 20px;
                margin: 0;
                height: 200px !important;
            }
        }

        .divider {
            bottom: 0px !important;
        }
    }
}

.Device16x9Portrait {
    &.outsideBackCover {
        .marginBox {
            width: 89mm;
        }

        .bottomHalfGrid {
            height: 600px;
            grid-template-rows: 250px 30px auto;

            .bloom-translationGroup {
                grid-row: 1;
            }

            [data-book="level-image-html"] {
                grid-row: 2;
            }
        }
    }
}

.Device16x9Landscape {
    &.outsideBackCover {
        .marginBox {
            width: calc(100% - 11mm);
        }

        .bottomHalfGrid {
            grid-template-columns: 310px auto;

            .bloom-translationGroup {
                grid-column: 1;
            }

            [data-book="level-image-html"] {
                grid-column: 2;
            }
        }
    }
}

*/

// Andrew created these rules in order to do this: https://i.imgur.com/dFWj0CK.png
.position-bottom > .split-pane-component-inner,
.position-bottom
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-bottom
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-bottom
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-bottom
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-bottom
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner {
    padding-top: 5mm;
}

.position-right > .split-pane-component-inner,
.position-right
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-right
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-right
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-right
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner,
.position-right
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > :not(.split-pane-component-inner)
    > .split-pane-component-inner {
    padding-left: 5mm;
}
