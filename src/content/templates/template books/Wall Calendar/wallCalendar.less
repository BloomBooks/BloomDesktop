/*These tell Bloom what choices to give the user as far as Page, Orientation, & Layout options:
STARTLAYOUTS
{"layouts":     ["A5Landscape"]  }
ENDLAYOUTS
*/
/*Top with Picture and a little text*/
@base-image-height: 365px;
@A5PageHeight: 14.8cm;
@A5PageWidth: 21cm;

.calendarMonthTop .bloom-imageContainer {
    height: @base-image-height;
}

.bloom-translationGroup.calendarBelowBigPictureText {
    /*+placement:anchor-bottom-left 0 0;*/
    position: absolute;
    left: 0;
    text-align: center;
    width: 100%;
    padding-top: 20px; // fudge since without display: table + table-cell we can't get vertical-alignment: bottom
}

/*Bottom with day grid*/
.month table {
    padding: 1cm;
}

.month thead td {
    font-weight: bold;
    font-size: 14pt;
}

.month thead th {
    width: 3em;
    text-align: center;
}

.month td {
    text-align: center;
}

.calendarMonthBottom table {
    border-collapse: collapse;
}

.calendarMonthBottom th {
    text-align: center;
    font-weight: bold;
    display: table-cell;
    width: 107px;
}

.calendarMonthBottom td {
    border: 1px solid black;
    padding-left: 3px;
    padding-right: 3px;
    position: relative;
    font-size: inherit; //override the (later to be removed) "143%" we get from basePage.css
    line-height: inherit; //override the (later to be removed) rule we get from basePage.css
    display: table-cell;
    width: 101px; //103 is good during editing

    vertical-align: top;
    height: 69px;
}

.calendarMonthBottom td textarea {
    overflow: hidden;
    font-size: 9pt;
    line-height: 1.3em;
    text-indent: 2.3em;
    margin-top: 4px;
    height: calc(100% - 8px); // leave room for 6 rows, not 5!!!
}

.calendarMonthBottom td p {
    font-style: italic;
    z-index: 5; // keeps day number in play when textarea overflows
    font-size: 14pt;
    position: absolute;

    //top:0;  //<--- NO. For some reason in Bloom 3.1, will put all the numbers at the top (but not in later Firefox, so maybe in the future this will be fine)
    //so we do this instead
    margin-top: -4px;
}

.calendarBottomPageHeader {
    text-align: center;
    font-size: 30pt;
    width: 100%;
    height: 32px;
    margin-bottom: 5mm;
}

@Border: 5mm;
@DayTableWidth: @A5PageWidth - (2 * @Border);

/*Since this will be calendarFold (when Publishing), we want to defeat the left page vs. right page margin shifting.
	BL-2310 does this in basePage.css, but we need a smaller margin for these particular pages
	which makes the 'left' rule here need the '!important' tag (since it is less 'specific';
    we want it to apply to Edit mode too.)
*/
.A5Landscape {

    &.calendarMonthBottom,
    &.calendarMonthTop {
        .marginBox {
            top: @Border;
            left: @Border !important;
            margin-left: 0;
            width: @DayTableWidth;
            height: @A5PageHeight - (2 * @Border);
        }

        .bloom-imageContainer img {
            max-width: 100% !important;
        }
    }
}

/* bilingual */
.calendarMonthTop.bloom-bilingual .bloom-imageContainer {
    height: @base-image-height - 45;
}

/* trilingual */
.calendarMonthTop.bloom-trilingual .bloom-imageContainer {
    height: @base-image-height - 85;
}