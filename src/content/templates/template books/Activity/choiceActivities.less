// scope everything so we don't accidentally mess with other pages
[data-activity="multiple-choice"].bloom-interactive-page {
    .marginBox {
        display: flex;
        flex-direction: column;
        .Prompt-style {
            margin-bottom: 10px;
        }
        .player-button {
            display: block;
            border: none;
            margin-bottom: 15px;
            margin-right: 7px; // need room to show any button shadows
            .bloom-translationGroup {
                &.childOverflowingThis {
                    border-bottom: unset !important; // ENHANCE: instead, we shouldn't set this flag. We need a way to tell the JS that sets it not to.
                }

                .bloom-editable {
                    border: none; // don't show the grey box
                    min-height: unset;
                }
            }
        }
    }

    // -----------------------
    // Layouts for Image with Word Buttons
    .imageThenChoices {
        display: flex;
        flex-grow: 1;
        // NB: without this overflow:hidden, the .choices div grows larger than necessary whe either we give it a margin-block-start:auto or tell
        // imageThenChoices to justify-content:space-between.
        overflow: hidden;

        .choices {
            // stack the buttons over each other
            display: flex;
            flex-direction: column;
        }
    }

    // image on left, with a column of buttons on the right side
    &[class*="Landscape"] {
        .imageThenChoices {
            flex-direction: row;
            align-items: center; // nb: messes up the img size unless the image container has a explicit height
            div.bloom-imageContainer {
                margin-right: 10px;
                width: 50%;
                height: 80%; // undesirable but see note above about align-items:center on the parent, imageAndChoices
            }
            .choices {
                width: 50%;
            }
        }
    }

    // image on top, with a column of buttons below it
    &[class*="Portrait"] {
        .imageThenChoices {
            flex-direction: column;
            div.bloom-imageContainer {
                height: 40% !important;
                margin-bottom: 10px;
            }
        }
    }

    // image on top, with a row of buttons below it
    &.Cm13Landscape {
        .imageThenChoices {
            flex-direction: column;
            div.bloom-imageContainer {
                height: 70% !important;
                margin-bottom: 10px;
            }
            .choices {
                flex-direction: row;
                justify-content: space-between;
                width: 100%;
                .player-button {
                    padding: 10px;
                }
            }
        }
    }

    // -----------------------
    // Layouts for Word with Image Buttons

    .wordThenChoices {
        display: flex;
        flex-grow: 1;
        // NB: without this overflow:hidden, the .choices div grows larger than necessary whe either we give it a margin-block-start:auto or tell
        // imageThenChoices to justify-content:space-between.
        overflow: hidden;
        .choices {
            // stack the buttons over each other
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            overflow: hidden; // TODO Boost up?
            .player-button {
                .bloom-imageContainer {
                    // NB: a transparent background is fine in edit, where there is an <img>, but in bloomPUB (for some reason?) the image is places as a background-image
                    // on the bloom-imageContainer, and so a transparent background actually makes it disappear.
                    // background: transparent;
                    height: 100%;
                    margin-left: auto;
                    margin-right: auto;
                }
                // This padding on the button is required to keep the image from covering the corners of the button and to leave
                // room to see the color (e.g. green for right answer) if the image has no transparency.
                padding: 5px;
            }
        }
    }

    &[class*="Landscape"] {
        .marginBox .wordThenChoices {
            flex-direction: row;
            align-items: center; // nb: messes up the img size unless the image container has a explicit height
            justify-content: space-around; // the screen is actually too wide... so move everything in towards the center
            .word-to-match {
                margin-right: 10px;
                // width: 50%;
            }
            .choices {
                max-width: 30%;
                height: 100%;
                justify-content: space-between;
                .player-button {
                    height: 26%;
                }
            }
        }
    }

    &[class*="Portrait"] {
        .marginBox .wordThenChoices {
            flex-direction: column;
            .word-to-match {
                // height: 40% !important;
                margin-bottom: 10px;
            }
            .choices {
                flex-grow: 1;
                .player-button {
                    height: 27%;
                }
            }
        }
    }
    // image on top, with a row of buttons below it
    &.Cm13Landscape {
        .marginBox .wordThenChoices {
            flex-direction: column;
            .word-to-match {
                //   height: 70% !important;
                margin-bottom: 30px;
            }
            .choices {
                flex-direction: row;
                justify-content: space-between;
                min-width: 100%;
                .player-button {
                    height: 30%;
                    width: 30%;
                }
            }
        }
    }

    // ----------------------------------------------------------------------------------------------
    // For the rest of this stylesheet, we separate out all colors and such that could be overridden to get a different look

    // page

    & {
        background-color: #539eff;

        // page number
        &::after {
            color: white;
        }
    }
    .player-button {
        //box-shadow: 0px 4px 0px rgba(0, 0, 0, 0.32);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19),
            0 6px 6px rgba(0, 0, 0, 0.09);
        border-radius: 10px;
        background-color: white;
        color: #0069f0;
        &.chosen-correct {
            color: white;
            background-color: #6cd05a;
        }
        &.chosen-wrong {
            color: white;
            background-color: #848484;
        }
        // when the button is depressed
        &:active {
            //text-shadow: -1px -1px 0px #777, -1px -1px 0px #777;
            //box-shadow: inset 1px 1px 4px #222;
            box-shadow: none;
            transform: translateY(1px);
        }
    }

    .imageThenChoices {
        .bloom-imageContainer {
            background-color: white;
            border-radius: 8px;
        }
    }

    .wordThenChoices {
        .TextToMatch-style {
            color: white;
        }
        .bloom-imageContainer {
            background-color: white;
        }
    }
}
