mixin choice
	//- JS intercepts clicks on this (in the player) and its input (in the editor) and sets classes on it which produce
	//- the right appearance in both modes.
	//- Notice that this works over a whole Bloom Field, not just the box itself, which is why it is a bit more complicated
	//- than checkbox-styling solutions which don't require JS. Also, there are different behaviors in edit mode and in the reader.
	.checkbox-and-textbox-choice
		//- The choice is made up of an input, which provides some of the click behavior and also some accessibility.
		//- It also takes up an appropriate amount of space on the screen.
		//- However, we can't make it look the way we want, so styles give it an opacity of zero, which hides it
		//- but does not interfere with clicks.
		//- Three different things are then overlayed on top of the input to produce the various appearances we want.
		//- the :before of the bloom-translationGroup (produced by the +field) is used to draw the checkbox.
		//- the :after of the bloom-translationGroup is used to draw the check mark (transparent unless the input is checked).
		//- the following .placeToPutVariableCircle is there to support drawing an animated circle around
		//- the checkbox while it is active (mouse down) to conform to material design guidelines.
		//- It seems as if it should be possible to do without .placeToPutVariableCircle, but I haven't found
		//- a way so far.
		input.styled-check-box(type="checkbox", name="Correct")
		+field("auto").QuizAnswer-style(data-hint="Put a possible answer here. Check it if it is correct.")
		.placeToPutVariableCircle

mixin quizPage
	+page("Quiz Page", "An interactive page with a question and some answers. Works on the web and Bloom Reader. When used with Bloom Reader, your project's dashboard can show aggregated comprehension scores.").simple-comprehension-quiz.bloom-ignoreForReaderStats.bloom-interactive-page.numberedPage.game-theme-blue-on-white#F125A8B6-EA15-4FB7-9F8D-271D7B3C8D4D(data-page='extra'  data-feature='game'  data-analyticsCategories="comprehension"  data-activity="simple-checkbox-quiz" data-reader-version="2" data-tool-id="game")
		.quiz
			.bloom-translationGroup.QuizHeader-style.bloom-ignoreChildrenForBookLanguageList(data-default-languages="auto")&attributes(attributes)
				//- data-collection doesn't actually work across the collection currently,
				//- but we wish it did in this case. And it does work across the book.
				+editable("en")(data-generate-translations="true", data-i18n="Quiz.CheckYourUnderstanding", data-collection='simpleComprehensionQuizHeading') Check Your Understanding
			+field("auto").QuizQuestion-style(data-hint="Put a comprehension question here")
			each count in new Array(6)
				+choice()
			script(src="simpleComprehensionQuiz.js")
