/* Common Bloom UI styling */

@ui-fonts: "Segoe UI", "Sans";
// Working towards making this the source of truth for the font size we use in our UI.
// Currently all the toolbox panes have default font 11px based on a rule in jqueryui that applies
// to everything in accordion panels.
// the epub publish control uses 10pt set on the body element by a rule in sectionScreen.less
// the android publish control uses 10pt set on the body element by a rule in androidPublishUi.less
// there are probably other sources of ui font size.
@ui-font-size: 10pt;

@imageContainerZIndex: 1000;
@textOverPictureZIndex: @imageContainerZIndex + 1;
@formatButtonZIndex: @textOverPictureZIndex + 1;
@dragHandleZIndex: @textOverPictureZIndex + 1;

// Bloom's web palette
@bloom-blue: #1d94a4; // used in decodable reader and various text backgrounds and Paste Image button
@bloom-lightblue: #b0dee4; // used in a few highlight and hover situations
@bloom-yellow : #FEBF00;
@bloom-gray: #575757; // used for disabled controls and EPub preview controls
@bloom-lightgray: lightgray;
@bloom-red: #d65649;
@bloom-darkestgray: #363333; // used for borders and backgrounds... this is the darker main panel background
@bloom-buff: #d2d2d2; // used for various unrelated things like hovered/disabled controls, text on dark background, borders, etc.
@bloom-toolboxWhite: @bloom-buff;
@bloom-purple: #96668f;
@DisabledButtonColor: @bloom-gray;
@ControlColor: @bloom-purple;
@DarkBackgroundColor: #404040; // side panels; toolbox and page thumbs
@WarningColor: #d65649;
@OrigamiActiveColor: #e48c84;
@PreviewCoverColor: #d8adad;
@LeveledReaderViolationColor: orange;
@DecodableReaderViolationColor: @bloom-blue;
// This is the color which jquery-ui-1.8.16.custom.css applies for ui-state-active, that is,
// the color of the background of the selected item in the toolbox accordion.
// Naming it here allows us to make various things match it.
@accordion-active-element: #59b4d4;
@form-background: #f0f0f0;

.react-tabs {
    margin: 20px;
}
.react-tabs__tab-list {
    margin-bottom: 0;
}
.react-tabs__tab {
    background-color: @bloom-lightgray;
    margin-right: 5px; // separate the tabs
}
.react-tabs__tab--selected {
    background-color: white;
    font-weight: bold;
}
.react-tabs__tab-panel--selected > div {
    padding-right: 20px;
    padding-bottom: 20px;
    padding-left: 20px;
    background-color: white;
}
.invisible {
    display: none !important;
}

// The following is enabled for development builds and alpha builds.
// Red on yellow background means the string has not been translated.
body.developer .untranslated,
body.alpha .untranslated {
    color: darkred;
    background-color: yellow;
}

// In l10n.tsx, the developer can flip a const (highlightTranslatedStrings) to true to highlight all translated strings
// (for the purpose of seeing if anything was missed)
body.highlightTranslatedStrings.developer .translated {
    color: green;
}
body.highlightTranslatedStrings.developer .assumedTranslated {
    color: lightgreen;
}

/* all of this worked in the latest firefox, but not Bloom.
    We may want it someday, as it sure seems clearer to put
    in a ? than the black box that FF normally uses, to mean
    indeterminate.

input[type="checkbox"]:indeterminate {
    background: white;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    height: 14px;
    width: 14px;
    border: 1px solid black;
}
input[type="checkbox"]:indeterminate::after {
    content: "?";
    position: absolute;
    top: -2px;
    left: 2px;
    font-family: sans;
    font-weight: bold;
    //color: gray;
}
*/
.fullWidthRow {
    display: flex;
    width: 100%;
    justify-content: space-between;
}
textarea.fullWidth {
    width: 100%;
}
.invalidInput {
    background-color: rgba(236, 88, 64, 0.1);
    border-color: #ec5840;
}
