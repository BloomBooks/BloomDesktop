// Styles common to more than one publish tool
// Currently mainly ePUB and Android (much not yet used in EPUB)

@import "../bloomUI.less";

@LightGrey: @bloom-gray;
@preview-border: gray;
// It's important that we use actual dimensions (not something variable like
// px or em) for all the pieces of the preview, because we're using the
// final dimensions of the preview-height to figure how much to shrink
// the page to fit, and the page size we use (in edit mode and the main preview)
// for device page size is fixed in mm.
@space-for-speaker: 5mm;
@small-device-size: 106mm; // about 400px, or 4in; using mm because page size does
@preview-button-size: 10mm;
@preview-button-phone-height: 8mm;
@preview-button-phone-width: @preview-button-phone-height / 2;
@preview-button-border-width: 0.5mm;
@preview-button-extra-top-border: 0.3mm;
@preview-button-small-pad: (@preview-button-size - @preview-button-phone-height) /
    2;
@preview-button-large-pad: (@preview-button-size - @preview-button-phone-width) /
    2;
@preview-height: @small-device-size - @preview-margin * 2 - @space-for-speaker;
@preview-width: @preview-height * 9 / 16;
@small-device-width: @preview-width + @preview-margin * 2;
@small-preview-margin: (@small-device-size - @small-device-width)/2;
// @preview-height divided by standard edit-mode device16x9 height, but I'm not sure less can divide distances.
@preview-scale-factor: (106 - 2.6 * 2 - 5)/177.77;
// the wrapper around the preview that looks like a phone's shell.
// The first group of settings (not inside .device-square) are retained for the
// old ePUB preview, but will probably be retired when redo that panel
// to be more like the Android one.
#device {
    height: 800px;
    width: 400px;
    padding-left: 30px;
    padding-top: 72px;
    padding-bottom: 18px;
    //border: 5px solid white;
    border-radius: 38px;
    background-color: @preview-border;
    box-shadow: 0px 0px 50px 10px rgba(0, 0, 0, 0.1);
    .device-square & {
        height: @small-device-size;
        width: @small-device-width;
        margin-left: @small-device-size - @small-device-width - 20px; // almost right-aligned
        padding-left: 0;
        padding-top: @space-for-speaker;
        padding-bottom: 0;
        border-radius: 4.7mm;
        .landscape & {
            height: @small-device-width;
            width: @small-device-size;
            margin-top: @small-preview-margin;
            margin-left: 0;
            padding-top: 0;
            padding-left: @space-for-speaker;
        }
    }
}

// we scale the div that contains the bloom page to make it the actual height
// of the preview.
.actual-page-preview {
    transform: scale(@preview-scale-factor);
    transform-origin: left top 0;
}

// This rotates a portrait page sideways to give the required effect for
// the lanscape device orientation in non-motion books.
// The best way to understand it is that the book is scaled to the
// usual size (which requires the transform origin to be the top left).
// then we rotate it anti-clockwise 90deg around that point, which puts it
// above where we want it by its own width. Then we translate it down.
// However, the rotate changes the effect of the translate, so it works
// better to do that first.
.preview-section.landscape.rotated .actual-page-preview {
    transform: translateY(@preview-width) scale(@preview-scale-factor)
        rotate(-90deg);
}

// Similar rotation for landscape book in portrait mode. After scaling,
// we rotate it clockwise around the top left, which puts it to the
// left of what we want, so we move it right.
.preview-section.rotated:not(.landscape) .actual-page-preview {
    transform: translateX(@preview-width) scale(@preview-scale-factor)
        rotate(90deg);
}

// This is the normal appearance of the slick next and previous buttons,
// but we need to make the rule
// more specific to beat another rule in this control.
html.publishTabScreen button {
    &.slick-next,
    &.slick-prev {
        background-color: transparent;
    }
}

// The slide element div for each page needs to be forced down to this height to match its content.
// I don't know why it is otherwise bigger, but it defaults to some larger size,
// possibly the unscaled page height, and this makes the slider higher, which messes
// up its positioning of buttons.
.page-preview-slide {
    height: @preview-height;
    .landscape & {
        height: @preview-width;
    }
}

// a square space in which the device can switch orientations without
// disturbing the rest of the page.
.device-square {
    height: @small-device-size;
    width: @small-device-size;
}
.preview-row {
    margin-bottom: 1em;
}
@small-speaker-color: #eee;

//The 'speaker' (grey bar at top that looks like a phone speaker) is a "before" rule
// again we have legacy version for ePUB and the new versions below in .device-square.
@speakerlength : 80px;
@speakerwidth: 10px;
#device:before {
    width: @speakerlength;
    height: @speakerwidth;
    top: 35px;
    left: calc(~"50% - " @speakerlength / 2);
    border-radius: @speakerwidth;
    background-color: @LightGrey;
}
.device-square {
    #device:before {
        width: @speakerlength / 2;
        height: @speakerwidth / 2;
        top: 7px;
        left: calc(~"50% - " @speakerlength / 4);
        border-radius: @speakerwidth / 2;
        background-color: @small-speaker-color;
    }
    .landscape & #device:before {
        height: @speakerlength / 2;
        width: @speakerwidth / 2;
        left: 7px;
        bottom: calc(~"50% - " @speakerlength / 4);
        top: initial;
    }
    // in the new preview 'after' is used for a small dot at the top.
    #device:after {
        width: @speakerwidth / 2;
        height: @speakerwidth / 2;
        color: @small-speaker-color;
        left: @dot-left;
        top: @dot-top;
        bottom: initial;
        border: solid 1px @small-speaker-color;
        background-color: @small-speaker-color;
    }
    .landscape & #device:after {
        left: @dot-top;
        bottom: @dot-left;
        top: initial;
    }
}

.preview-row {
    display: flex;
}

// First two conditions added for specificity
html.publishTabScreen .preview-section .orientation-button {
    height: @preview-button-size;
    width: @preview-button-size;
    border: 1px solid transparent;
    background-color: transparent;
    &.active {
        border: 1px solid lightblue;
        border-radius: 2px;
    }
    &:after {
        border: @preview-button-border-width solid @preview-border;
    }
    &.landscape-button:after {
        padding-top: @preview-button-phone-width - @preview-button-border-width *
            2;
        padding-left: @preview-button-phone-height -
            @preview-button-border-width * 2 - @preview-button-extra-top-border -
            1;
        border-left-width: @preview-button-border-width +
            @preview-button-extra-top-border;
        left: @preview-button-small-pad;
        top: @preview-button-large-pad;
    }
    &.portrait-button:after {
        padding-left: @preview-button-phone-width - @preview-button-border-width *
            2;
        padding-top: @preview-button-phone-height - @preview-button-border-width *
            2 - @preview-button-extra-top-border - 1;
        border-top-width: @preview-button-border-width +
            @preview-button-extra-top-border;
        top: @preview-button-small-pad;
        left: @preview-button-large-pad;
    }
}

.image-text-row {
    display: flex;
}
.inline-text-icon {
    width: 1.5em;
    height: 1.5em;
}

.publishControlsColumn {
    margin-left: 1em;
}

.top-row {
    justify-content: space-between;
}
.preview-refresh {
    margin-left: @preview-button-large-pad;
    padding-bottom: 5px;
    .landscape & {
        padding-bottom: @small-preview-margin + 2px;
    }
}
.preview-orientation-row {
    padding-top: 80px;
}

@preview-margin: 2.6mm;

.preview-content {
    background-color: white;
    margin: auto;
    height: @preview-height;
    width: @preview-width;
    border: none;
    .landscape & {
        margin: 0;
        top: @preview-margin;
        height: @small-device-width - @preview-margin * 2;
        width: @small-device-size - @preview-margin * 2- @space-for-speaker;
    }
}

.preview-button-column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.preview-button-row {
    display: flex;
}

@CircleDiameter: 40px;
@dot-left: 20px;
@dot-top: 7px;

//the bottom 'button' (looks like phone home button) is the "after" rule
// This is only for the legacy ePUB version.
#device:after {
    width: @CircleDiameter;
    height: @CircleDiameter;
    border-radius: 50%;
    border: solid 5px @LightGrey;
    left: calc(~"50% - " @CircleDiameter / 2);
    bottom: 10px;
}
#device:before,
#device:after,
.orientation-button:after {
    content: "";
    position: absolute;
}

#androidPublishReactRoot {
    .right-column {
        width: 180px;
    }
}
