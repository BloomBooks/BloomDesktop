// This stylesheet is a minimal set designed to make our epubs look as much as possible like the printed books,
// while not locking down things that depend on a specific page size.
// The remaining rules are things that wound up slightly different from the printed book rules
// for reasons which I mostly don't remember; unfortunately, the experiments leading to the
// final epub PR were spread out over a long period.

// IMPORTANT: do not set anything here to display:none.
// Some/many eReaders do not properly handle display:none which means the content
// will be displayed in error. To hide content for epubs only, use epubVisibility.less
// which is used at epub creation time to remove content from the dom completely.

// This section must be placed before importing basePage-sharedRules.less because it contains
// rules that might be overridden by the shared rules.
.frontCover {
    .bloom-translationGroup.bookTitle {
        .bloom-editable {
            // This group is tricky. Because it's in xmatter, and we don't have distinct xmatter rules for legacy, it needs
            // to produce the expected behavior for both legacy and modern themes (where cover title visibility is controlled by
            // the appearance system). The first three rules are the legacy behavior, the second three are the modern behavior.
            // When a modern theme applies and the field is controlled by it, we still get the old classes, but also, any visible bloom-editable
            // whose visibility is controlled by the appearance system (like cover title here) gets bloom-contentFirst/Second/Third.
            // Rules in basePage-sharedRules.less for bloom-contentFirst/Second/Third will override these legacy rules if they apply
            // since they come later and have the same specificity and in most cases the same properties. Unfortunately, some of the
            // legacy rules set bottom-margin, but the bloom-contentNational2 rule and its modern replacement for bloom-contentThird
            // do not. So for example a cover title bloom-editable that has both bloom-contentThird (because it is the third collection
            // language and all titles are turned on) and bloom-content1 (because it is the only language turned on for content pages)
            // is in danger of getting unwanted margin. So the two legacy rules that set bottom-margin have a where clause to prevent
            // them from applying if the element also has bloom-contentThird. (The where clause prevents them from being more specific
            // than the bloom-contentFirst/Second rules that come after them and need to override them.)
            // This complication is still needed because ePUB can't tell whether or not the book is legacy or not.
            &.bloom-contentNational1:where(:not(.bloom-contentThird)) {
                //NB: we show the national language even if this is a monolingual book
                font-size: var(--DefaultCoverTitle2FontSize, 12pt);
                margin-bottom: var(--MarginBetweenXMatterMinorItems, 5px);
            }
            &.bloom-contentNational2 {
                font-size: var(--DefaultCoverTitle3FontSize, 10pt);
            }
            &.bloom-content1:where(:not(.bloom-contentThird)) {
                //main title
                font-size: var(--DefaultCoverTitle1FontSize, 25pt);
                margin-bottom: var(--MarginBetweenXMatterMinorItems, 5px);
            }
        }
    }
}

@import "../../../content/bookLayout/basePage-sharedRules.less";

.frontCover {
    .bloom-translationGroup.bookTitle {
        .bloom-editable {
            // Main book stylesheet has justify-content: center, because it is using flexbox
            text-align: center;
        }
    }
}

// When bloom-showImageDescriptions is set (typically only when the relevant toolbox is showing, currently,
// but we'd like to be able to turn it on in the end result, too), we make the picture shrink to fit
// in the left half and show the translation group in the right half.
// This rule would like to live in basePage-sharedRules, but we need display:flex in Bloom and display:block
// in epubs.
.bloom-showImageDescriptions .bloom-imageContainer .bloom-imageDescription {
    // We really just want to turn off the display:none that usually applies to translation groups
    // inside image containers, but we have to set something.
    display: block;
}

.credits {
    .licenseAndCopyrightBlock {
        img {
            // creative commons license image. Book stylesheet has width:94px.
            // Don't know why epub should be different.
            width: 94px;
        }
    }
}

div.bloom-editable {
    margin-bottom: 0.6em;
    display: block;
}

.pictureAndWordPage {
    .bloom-content1 {
        font-size: 400%;
    }
    .bloom-content2,
    .bloom-content3 {
        font-size: 200%;
    }
    .bloom-translationGroup {
        text-align: center;
        padding-top: 10px; //don't express in em's!
    }
}

.bloom-backgroundImage {
    height: 300px; // REVIEW What should this be?
}

// We want videos to stretch across the width of the display, and adjust
// their heights to match properly.
video {
    width: 100%;
    height: auto;
}

// Format the End Page properly, as close as we can come to the Edit view
// without flex display, which readers haven't implemented.  (BL-5495)
.theEndPage {
    /* see note in Device-XMatter.less about why this is commented out for now

    [data-book="end-of-book-label"]{
        width: 100%;
        font-size: 3em;
        line-height: 100%;
        text-align: center;
        margin-bottom: auto;
        margin-top: auto;
    }
    img.branding {
        // allow for more than one image
        display: inline-block;
        // place the image(s) at the bottom of the page
        position: fixed;
        bottom: 10px;
    }*/
    /* the marginBox in epub land has no height, presumably on purpose? So I (jh) give up getting this to the bottom of the screen*/
    .marginBox {
        img {
            margin-left: auto;
            margin-right: auto;
            display: block;
        }
    }
}

.-epub-media-overlay-active {
    background-color: #ffb;
}

// These rules deal with changes due to including xmatter css in epubs.
// The .epub class will be on the body tag when publishing to epub.
.epub {
    .credits,
    .titlePage,
    .theEndPage {
        .marginBox {
            // In non-epub situations, branding elements are more easily set with position: absolute.
            // Unfortunately, the epub concept of page length being somewhat fluid, makes absolute
            // positioning not work so well. So we make all branding positioning relative.
            [data-book*="branding"] {
                position: relative;
                // We don't want left or right set, to avoid centering issues.
                left: unset;
                right: unset;
            }
            // If this branding block isn't the first div on the page, add some space.
            div + [data-book*="branding"] {
                margin-top: 20px;
            }
        }
    }
}
