/* These rules mostly tweak fixed print layouts, currently enforcing 16x9 layout,
like Bloom Reader, and overriding rules, mainly from previewMode.css, that we don't
want in this control.
Much of it could go away if we exclude previewMode.css, or if we end up with a server
process which produces an htm file in the Bloom Reader state, or if we re-architect so
there is some simple way like a root class to toggle a book's appearance to BR mode.*/

/* The rules in the book reset this counter at the body level, but since we scope our
rules to apply at a lower level, that rule doesn't work. We need to reset at a level
above the page so that page numbers will increment.*/
.pageSlider {
    counter-reset: pageNumber;
}

/* makes context pages smaller and dimmer than regular ones */
.bloomPlayer.bloomPlayer1 .pageSlider .contextPage .bloom-page {
    margin-left: 10%;
    width: 80%;
    margin-top: 10%;
    padding-top: calc(80% * 16 / 9); /* of width! */
    opacity: 0.6;
    background-color: darkgray;
}

.ui-audioCurrent {
    background-color: yellow;
}

/* the default positioning of these dots is inside the page area, but our pages overlap them.
Also, if there are more than will fit on a line, some drop outside the control altogether.
We just make them follow the main content normally. */
.bloomPlayer .slick-dots {
    position: relative;
    bottom: initial;
}

@button-radius: 2mm;

// We need these outer conditions for specificity
.bloomPlayer.bloomPlayer1 {
    // these buttons are positioned relative to the slider, our preview.
    // Usually the buttons are outside the slider, just touching it; but this
    // takes them outside our phone's display. This puts them just inside it.
    .slick-next {
        right: 0;
        border-radius: @button-radius 0 0 @button-radius;
        // produced from artwork/page right icon.svg by
        // - saving in inkscape as plain svg,
        // - open in text editor
        // - copy svg to https://yoksel.github.io/url-encoder/
        // - copy 'ready for CSS' output here
        // That icon file was in turn produced by tracing over the one Readium
        // produces, which comes from a special font called glyphicons-halflings.
        // Embedding the SVG like this bypasses all the complications of making
        // the build system put the svg file where we can find it, for all the
        // clients of bloom-player, and saves a server round trip to boot.
        background-image: url("data:image/svg+xml,%3Csvg xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:cc='http://creativecommons.org/ns%23' xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23' xmlns:svg='http://www.w3.org/2000/svg' xmlns='http://www.w3.org/2000/svg' id='svg8' version='1.1' viewBox='0 0 27.970858 38.994908' height='38.994907mm' width='27.970858mm'%3E%3Cdefs id='defs2' /%3E%3Cmetadata id='metadata5'%3E%3Crdf:RDF%3E%3Ccc:Work rdf:about=''%3E%3Cdc:format%3Eimage/svg+xml%3C/dc:format%3E%3Cdc:type rdf:resource='http://purl.org/dc/dcmitype/StillImage' /%3E%3Cdc:title%3E%3C/dc:title%3E%3C/cc:Work%3E%3C/rdf:RDF%3E%3C/metadata%3E%3Cg transform='translate(-141.18819,-97.448151)' id='layer1'%3E%3Cpath id='path828' d='m 149.59443,97.63443 -7.81763,7.81763 11.02487,11.42578 -11.42577,11.09168 8.15171,8.28536 19.44386,-19.5775 z' style='fill:%23ffffff;stroke:%23ffffff;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1' /%3E%3C/g%3E%3C/svg%3E");
    }
    .slick-prev {
        left: 0;
        // curved on right, flush on left.
        border-radius: 0 @button-radius @button-radius 0;
        // Not quite sure why this is needed on the left button and not the right;
        // possibly the scroller has it before the actual page where the right button
        // is after it, and by default this puts it behind. Anyway, this allows all
        // of it to be seen, even when over the preview.
        z-index: 1;
        // See comment on slick-next
        background-image: url("data:image/svg+xml,%3Csvg xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:cc='http://creativecommons.org/ns%23' xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23' xmlns:svg='http://www.w3.org/2000/svg' xmlns='http://www.w3.org/2000/svg' id='svg8' version='1.1' viewBox='0 0 27.970858 38.994908' height='38.994907mm' width='27.970858mm'%3E%3Cdefs id='defs2' /%3E%3Cmetadata id='metadata5'%3E%3Crdf:RDF%3E%3Ccc:Work rdf:about=''%3E%3Cdc:format%3Eimage/svg+xml%3C/dc:format%3E%3Cdc:type rdf:resource='http://purl.org/dc/dcmitype/StillImage' /%3E%3Cdc:title%3E%3C/dc:title%3E%3C/cc:Work%3E%3C/rdf:RDF%3E%3C/metadata%3E%3Cg transform='translate(-141.18819,-97.448151)' id='layer1'%3E%3Cpath id='path828' d='m 160.75281,97.63443 7.81763,7.81763 -11.02487,11.42578 11.42577,11.09168 -8.15171,8.28536 -19.44386,-19.5775 z' style='fill:%23ffffff;fill-opacity:1;stroke:%23ffffff;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1' /%3E%3C/g%3E%3C/svg%3E");
    }
    .slick-next,
    .slick-prev {
        height: 67%;
        background-color: rgb(203, 203, 203);
        // This makes them quite faint, allowing all the page content to be seen,
        // when not hovered over; yet there is some hint of something to click.
        opacity: 0.4;
        // the actual background-url is set in blocks not shared by next/prev
        background-repeat: no-repeat;
        background-size: 4mm;
        background-position: center;
        &:hover {
            opacity: 0.9;
        }
        &:before {
            // we're using background images, override special font chars slick uses
            content: "";
        }
        &.slick-disabled {
            // I would use display:none, but slick puts an explicit display:block on the element itself
            // that nothing in css can override. Since nothing else depends on its size,
            // this works.
            visibility: hidden;
        }
    }
}

.bloomPlayer.bloomPlayer1.hideNextPrevButtons {
    .slick-next,
    .slick-prev {
        // display:none won't work, see comment on slick-disabled
        visibility: hidden;
    }
}

/* override the rule in bloom-preview that puts a border at the bottom of each page
to separate the pages in a continuous scrolling view. Unfortunately that rule is
!important so the only way to beat it is to be !important too. */
.bloomPlayer.bloomPlayer1 div.bloom-page {
    border-bottom: initial !important;
}

/* we're giving pages in this control less margin than in regular previews,
so we need the page number further down to reduce the chance of overlap. */
.bloomPlayer.bloomPlayer1 .numberedPage::after {
    bottom: 2px;
}

/* the reduced margin means we need to adjust the horizontal position to
align the page number with the margin, too. */
.bloomPlayer.bloomPlayer1 .numberedPage:nth-of-type(2n + 1)::after {
    left: 5%;
}

/* logically we would need this to override the rule for right pages,
but actually in this control the pages don't have a common direct parent,
so nth-of-type doesn't do what we want and all the pages come out as left.
Not trying to solve this for now as we want an architectural solution
that makes available to the control files more like Bloom Reader uses */
.bloomPlayer.bloomPlayer1 .numberedPage:nth-of-type(2n)::after {
    right: 5%;
}
