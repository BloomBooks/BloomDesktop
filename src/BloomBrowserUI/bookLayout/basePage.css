/*+init {*/
* {
  position: relative;
  margin: 0;
  padding: 0;
  font-size: 1em;
}
H1,
H2,
H3,
H4,
H5,
H6,
TH {
  font-weight: inherit;
}
ADDRESS,
CITE,
DFN,
VAR {
  font-style: inherit;
}
CAPTION,
CODE,
KBD,
PRE,
SAMP,
TT,
INPUT,
TEXTAREA,
SELECT,
BUTTON {
  font-family: inherit;
}
TABLE {
  border-spacing: 0;
}
TH {
  text-align: left;
}
HTML,
BODY,
THEAD,
TBODY,
TFOOT,
TR,
TH,
TD,
BR {
  position: static;
}
INPUT[type=hidden] {
  display: none !important;
}
FIELDSET,
A IMG {
  border: 0;
}
BODY {
  line-height: 1.5;
  font-family: "Andika New Basic", Andika, "Andika Basic", "Gentium Basic", "Gentium Book Basic", "Doulous SIL", Sans-Serif;
  /*Most text in the document should be % changes from this value. Collection.css can then change it to make all the text  bigger.
Note: the webkit browsers (wkhtml which bloom uses for pdf, and google chrome)
Need about 2% more space to draw the same text on a ine (can't tell if the font is bigger or the box is smaller)
Therefore, in the editMode.css, we repeat this, but with a 2% larger size.
So if you change this, change it there. Note, this might not be the best long-term solution
To handling the mis-match.*/
  font-size: 10pt;
}
/* gridItem means this is a page thumbnail */
.gridItem .pageOverflows {
  background-image: url("/bloom/BloomBrowserUI/images/Attention.svg");
  /* red triangle with exclamation point */
  background-position: bottom;
  background-repeat: no-repeat;
  background-size: 70%;
}
DIV.ui-tooltip-content {
  overflow: visible !important;
  font-size: 10pt;
  padding: 0px 9px;
}
.uibloomSourceTextsBubble .ui-tooltip-content {
  /*This minimum height is for picture dictionary where the height of the target box is just one line high, not enough to show the language tabs at the top and then the content below*/
  min-height: 60px !important;
}
.bloom-imageContainer {
  min-height: 50px;
  z-index: 100;
}
p {
  min-height: 1em;
}
TEXTAREA,
.bloom-editable {
  resize: none;
  /*don't show those cute little resize controls in Firefox 4 and greater*/
  overflow: visible;
  font-size: 143%;
  line-height: 1.5em;
  min-height: 1.8em;
  width: 100%;
}
/* The following has been split out from the above rule because it should probably be removed,
	but at this point we are about to go release candidate with 3.1 so it will have to wait.
	When we do remove it, the main things it could effect are the Story Primer template and the dozen or so SIL LEAD Uganda SHRP templates.
*/
TD {
  resize: none;
  /*don't show those cute little resize controls in Firefox 4 and greater*/
  overflow: visible;
  font-size: 143%;
  line-height: 1.5em;
  min-height: 1.8em;
  width: 100%;
}
p {
  min-height: 1em;
}
span.bloom-linebreak {
  display: block;
  text-indent: 0;
}
DIV.bloom-page {
  display: block;
  page-break-after: auto;
  background-color: #FFFFFF;
  /*This is a big help with htmltopdf, both for our errors and a legitimate problem, with the "just text" page in which
the margin-top is calculated to center the text vertically, but htmltopdf then doesn't shrink the box as it should
so it just heads down off the page, messing things up.*/
  overflow: hidden;
}
DIV#bloomDataDiv {
  display: none;
}
@media screen {
  DIV.bloom-page {
    /*[disabled]border:1px solid #000000;*/
  }
}
.centered {
  text-align: center;
}
.centerJustify {
  text-align: center;
}
/*Unless otherwise positioned and made visible, hide all the language elements in there*/
.bloom-editable {
  display: none;
  height: 100%;
}
/*Outside of frontmatter, we assume that if bloom gives it a content tag, then it should be visible*/
.bloom-page:not(.bloom-frontMatter) .bloom-content1,
.bloom-page:not(.bloom-frontMatter) .bloom-content2,
.bloom-page:not(.bloom-frontMatter) .bloom-content3 {
  display: inherit;
}
.bloom-page:not(.bloom-frontMatter) .bloom-content2 {
  display: inherit;
}
/*Notes on wkhtmltopdf and page sizes: Set the border color of Div.Page in preview.css so you can see what the pdf is doing
these should be 14.8, but wkhtmltopdf shinks it
The folowing are the values which work with a 1px border.  With 0px border, I could not get the pages to come out
properly at all with wkhtmltopdf 0.10.0. It's as if the borders actually help by making the used part of each
page be the full page, regardless of the contents.

To compensate, the code asks wkthmlpdf to zoom the page by 9.1%, which an invisble 1px border added by
preview.css.
*/
.bloom-page.A5Portrait {
  min-width: 148mm;
  max-width: 148mm;
  min-height: 210mm;
  max-height: 210mm;
}
.bloom-page.A5Landscape {
  min-width: 210mm;
  max-width: 210mm;
  min-height: 148mm;
  max-height: 148mm;
}
.bloom-page.B5Portrait {
  min-width: 176mm;
  max-width: 176mm;
  min-height: 250mm;
  max-height: 250mm;
}
.bloom-page.A4Landscape,
.bloom-page.A4LandscapeSideBySide {
  min-width: 297mm;
  max-width: 297mm;
  min-height: 210mm;
  max-height: 210mm;
}
.bloom-page.A4Portrait {
  min-width: 210mm;
  max-width: 210mm;
  min-height: 297mm;
  max-height: 297mm;
}
.bloom-page.A6Portrait {
  min-width: 105mm;
  max-width: 105mm;
  min-height: 148mm;
  max-height: 148mm;
}
.bloom-page.A6Landscape {
  min-width: 148mm;
  max-width: 148mm;
  min-height: 105mm;
  max-height: 105mm;
}
/*Margins*/
.textWholePage .marginBox {
  position: absolute;
  /* see https://jira.sil.org/browse/BL-390; Without this, the "Just text" page causes the marginBox to drop down to the start of the vertically centered text, and then on PDF, you get an extra page. */
}
.marginBox {
  position: absolute;
  top: 15mm;
}
.A4Portrait .marginBox {
  height: 267mm;
  width: 170mm;
}
.A4Portrait .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 170mm;
}
.A4Landscape .marginBox {
  height: 180mm;
  width: 257mm;
}
.A4Landscape .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 257mm;
}
.A5Portrait .marginBox {
  height: 180mm;
  width: 108mm;
}
.A5Portrait .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 108mm;
}
.A5Landscape .marginBox {
  height: 118mm;
  width: 170mm;
}
.A5Landscape .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 170mm;
}
.A6Portrait .marginBox {
  height: 118mm;
  width: 65mm;
}
.A6Portrait .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 65mm;
}
.A6Landscape .marginBox {
  height: 75mm;
  width: 108mm;
}
.A6Landscape .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 108mm;
}
.B5Portrait .marginBox {
  height: 220mm;
  width: 136mm;
}
.B5Portrait .marginBox IMG {
  /* BL-1022, BL-2353 Keeps regular thumb images from going too wide */
  max-width: 136mm;
}
.publishMode:not(.calendarFold) :not(.outsideFrontCover):not(.outsideBackCover).bloom-page:nth-of-type(odd) .marginBox {
  /* shifted margin */
  left: 15mm;
}
.publishMode:not(.calendarFold) :not(.outsideFrontCover):not(.outsideBackCover).bloom-page:nth-of-type(even) .marginBox {
  /* shifted margin */
  left: 25mm;
}
.calendarFold .marginBox {
  /* balanced margin*/
  left: 20mm;
}
.rightToLeft.publishMode:not(.calendarFold) :not(.outsideFrontCover):not(.outsideBackCover).bloom-page:nth-of-type(odd) .marginBox {
  /* swap margins on right to left */
  left: 25mm;
}
.rightToLeft.publishMode:not(.calendarFold) :not(.outsideFrontCover):not(.outsideBackCover).bloom-page:nth-of-type(even) .marginBox {
  /* swap margins on right to left */
  left: 15mm;
}
body:not(.publishMode) .marginBox {
  left: 20mm;
}
/*Our javascript (bloomediting.js) uses <label> elements to get help bubbles and placeholders on editable divs.*/
LABEL.bubble,
LABEL.placeholder {
  display: none;
}
.superscript {
  vertical-align: super;
  font-size: 80%;
}
H1 {
  font-size: 1.5em;
}
H2 {
  font-size: 1.2em;
}
/* we will have UI that switches this .box-header-on if th user wants it*/
.box-header-off {
  display: none;
}
.bloom-translationGroup .bloom-editable.bloom-content2,
.bloom-translationGroup .bloom-editable.bloom-content3 {
  margin-top: 10px;
}
.customPage .bloom-imageContainer {
  width: 99%;
  height: 98%;
  z-index: 1000;
  overflow: hidden;
}
.customPage .bloom-editable {
  overflow-y: hidden;
}
.customPage .split-pane-component {
  min-height: 1.5em;
}
.customPage.A5Portrait.bloom-monolingual .bloom-translationGroup {
  height: 99%;
  width: 99%;
}
