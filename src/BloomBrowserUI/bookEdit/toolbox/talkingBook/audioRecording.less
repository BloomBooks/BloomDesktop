@import "../../../bloomUI.less";

@textColor: @bloom-buff;
@hoverBackgroundColor: @bloom-buff;
@highlightColor: @bloom-yellow;
@toolboxBackgroundColor: @bloom-panelBackground;
@sectionVerticalGap: 25px;
@buttonColumnWidth: 40px;
@splitAnimationTime: 300ms;

//highlight of the text on the page
span.ui-audioCurrent:not(.disableHighlight),
div.ui-audioCurrent:not(.disableHighlight) p {
    background: @highlightColor;

    &:before {
        background-image: url(currentTextIndicator.svg);
        background-repeat: no-repeat;
        background-size: 10px 13px;
        background-position: 2px 5px;
        left: -15px;
        top: 0; // should have no effect, but prevents a FF bug causing BL-6796
        width: 15px;
        height: 19px;
        position: absolute;
        content: " ";
    }
}
.ui-audioBody {
    padding-left: 15px;
    padding-right: 15px;
    *,
    a {
        color: @textColor;
    }
    background-color: @toolboxBackgroundColor;

    background-position: center;

    .ui-audioTitle {
        font-size: larger;
        margin-top: 5px;
        font-size: large;
    }
    .ui-audio-button {
        height: @buttonColumnWidth;
        width: @buttonColumnWidth;
        border: none;
        background-size: contain;
        background-color: transparent;
        background-repeat: no-repeat;
        display: inline-block;
        margin-bottom: 5px;
    }
    #audio-prev,
    #audio-clear {
        height: 20px;
        //width:20px;
        //margin-left: 10px;
        background-position: center;
    }
    .disabled {
        opacity: 0.4;
    }
    #audio-record {
        background-image: url("record_enabled.svg");
        &.expected {
            background-image: url("record_expected.svg");
        }
        &.active {
            background-image: url("record_active.svg");
        }
    }
    #audio-play {
        background-image: url(audio/play_enabled.svg);
        height: 45px;
        width: 45px; // visually same width as record button

        &.expected {
            background-image: url(audio/play_expected.svg);
        }
        &.active {
            background-image: url(audio/play_active.svg);
        }
    }
    #audio-split {
        background-image: url(audio/split_enabled.svg);
        height: 45px;
        width: 45px; // visually same width as record button

        &.expected {
            background-image: url(audio/split_expected.svg);
        }
    }

    .audio-about {
        margin-top: @sectionVerticalGap;
    }
    #audio-look-at,
    #audio-check {
        max-width: none;
    }
    #audio-listen-label {
        position: relative;
        width: 80px;
    }
    a {
        display: block; //start on a new line
        margin-top: 10px;
        text-decoration: underline;
        cursor: pointer;
    }
    .ui-audioFooter {
        margin-top: 30px;
        margin-bottom: 5px;
    }
    .ui-audioInput,
    .ui-audioMeter {
        display: inline-block;
        background-color: @bloom-panelBackground;
    }
    .ui-audioInputGroup {
        margin-top: 5px;
        margin-bottom: 12px;
    }
    img#audio-input-dev {
        height: 30px;
        width: 30px;
    }
    // hidden unless we need to choose between three or more input devices.
    #audio-devlist {
        display: none;
        position: absolute;
        background-color: white;
        width: 180px;
        padding-left: 0;
        list-style: none;
        cursor: pointer;
        z-index: 1000;
        overflow-x: hidden;
        li {
            min-height: 20px;
            font-size: 12px;
            color: black;
            padding-left: 5px;
            white-space: nowrap;
            &:hover {
                background-color: @hoverBackgroundColor;
            }
        }
        #audio-input-dev {
            margin-top: 2px;
            width: 15px;
        }
    }
    #audio-next {
        background-image: url(audio/next_enabled.svg);
        &.expected {
            background-image: url(audio/next_expected.svg);
        }
    }
    #audio-prev {
        background-image: url(audio/prev_enabled.svg);
    }
    #audio-listen {
        margin-left: 2px; // visually centered
        background-image: url(audio/listen_enabled.svg);
        &.active {
            background-image: url(audio/listen_active.svg);
        }
    }
    #audio-clear {
        background-image: url(audio/clear_enabled.svg);
    }
    .button-label-wrapper {
        margin-top: 10px;
    }
    .button-wrapper {
        display: inline-block;
        min-width: 60px;
        vertical-align: top; // Align the button with the label in case the label is really long.
    }
    .audio-label {
        display: inline-block;
        max-width: 100px;
        vertical-align: top;

        &.expected {
            color: @highlightColor;
            //font-weight: bold;
            //font-size: 11pt;
        }
    }
    .audio-advanced {
        padding-top: 35px;
    }
}

// Automatic numbering of the elements
// Uses CSS counter instead of an ordered list (which is more awkward structurally and doesn't offer formatting flexibility)
// You could use display: none instead of the not() pseudo-selector, but display: none is not compatible with CSS transitions.
.ui-audioBody {
    counter-reset: talkingBookListCounter;
}
*:not(.hide-countable) > .audio-label.talking-book-counter {
    counter-increment: talkingBookListCounter;
}
*:not(.hide-countable) > .audio-label.talking-book-counter:before {
    content: counter(talkingBookListCounter) ") ";
}
// Customized number styles for UI languages which need it:
*:not(.hide-countable) > .audio-label.talking-book-counter[lang="bn"]:before {
    // bn = Bangla also known as Bengali

    // Note: If some of the items are in lang="bn", but some fallback to lang="en", we want the "en" ones to use the default numbering (for now)
    //       (If in the future, you want all of them to use bengali numbers, you can include lang="bn" on the fallback ones too if they have class talking-book-counter)
    content: counter(talkingBookListCounter, bengali) ") ";
}

// Animation of hiding/showing a button
// Active Case
.button-label-wrapper {
    height: 50px;
    transition: height @splitAnimationTime;

    overflow: hidden; // hiding the overflow causes the subsequent element to smoothly move up
}
.button-label-wrapper button {
    height: 45px;
    transition: height @splitAnimationTime;
}
.button-label-wrapper .audio-label {
    transition: height @splitAnimationTime;
}

// Hidden Case
.ui-audioBody .button-label-wrapper.hide-countable {
    height: 0px;

    &.initial-state {
        transition: height 0ms; // On start-up, no need to animate, just do it ASAP
    }
}

.cursor-progress {
    cursor: progress;
}
body .cursor-progress {
    // A rule with higher specificity to beat out some ckeditor rules that set it to cursor: text
    cursor: progress;
}
.cursor-progress button {
    // Deal with buttons on the image container, which will appear grabbable by default. Especially the on-hover buttons for the bloom-imageContainer, those are hard to modify in the JS layer.
    cursor: progress;
}

#toast-container {
    z-index: 999999 !important;
    font-family: "Segoe UI", "sans-serif";
    font-size: 9pt;
}
#toast-container > .toast {
    opacity: 1 !important;
    box-shadow: none !important;
    background-image: none !important;
    padding-left: 8px; //don't leave room for the icon
}
.toast-toolbox-bottom {
    left: 32px;
    bottom: 46px;
}
