//importing this (less) here makes it actually start this file off with the contents of the toastr.css,
//which we're doing for convenience so that we don't have to get it in the installer and then import it explictly
@import (less) "../../node_modules/toastr/toastr.less";
@import "../../bloomUI.less";

@toolboxBackgroundColor: @DarkBackgroundColor;
@helpLinkTopMargin: 45px;

div.toolboxRoot {
    display: inline-block;
    background-color: @toolboxBackgroundColor;
    color: white;
    font-size: x-small;
    position: fixed;
    top: 25px; // leaves room for pure-drawer control for showing and hiding toolbox
    bottom: 1px;
    right: 0;
    width: 200px;
    z-index: 18000; /* Just over help bubbles, but under topic dialog */

    .ui-widget-content {
        background: none; // clear out the backgroudn image jquery-ui adds
        background-color: @toolboxBackgroundColor;
        border: none;
    }

    // multiple tools add a Help link after the rest of the tool content
    .helpLinkWrapper {
        margin-top: @helpLinkTopMargin; // put some space before the Help link
    }
}

.ui-accordion-header {
    -moz-user-select: none;
}
span.scroll-button {
    color: white;
    float: left;
}
div.ui-accordion {
    padding-left: 0;
    padding-right: 0;
}
div.ui-accordion-content {
    padding-left: 3px !important;
    padding-right: 0 !important;
}

.h1 {
    padding-top: 20px;
}
.section {
    padding-top: 20px;
    color: @bloom-lightblue;
}
.tableTitle {
    padding-top: 20px;
}
.thisPageSection {
    padding-top: 0;
}

div.clear,
table.clear {
    clear: both;
}
.hidden {
    display: none !important;
}
.align-top {
    vertical-align: top;
}

input[type="checkbox"] {
    color: white;
    background-color: transparent;
    border-color: white;
}

div.checkbox-group {
    display: flex;
    flex-direction: row;
}

div.checkbox {
    width: 11px !important;
    height: 11px !important;
    border: 1px solid white;
    display: block;
    position: relative;
    float: left;
    margin: 2px 6px 6px;
    font-size: 17px;
    overflow: visible;
    line-height: 4px;
    cursor: pointer;
    -moz-user-select: none;
}

div.checkbox-label {
    -moz-user-select: none;
    cursor: default;
    margin: 2px 0px 0px 0px;
}

// This makes label that aren't marked appear about the same vertically in
// relation to the checkbox as those that are marked with enterprise-only-flag.
div.checkbox-label:not(.enterprise-only-flag) {
    margin-top: 2px;
}

.enterprise-only-flag::after {
    content: "BE";
    cursor: default;
    color: @bloom-purple;
    margin-left: 4px;
    vertical-align: super;
    font-style: italic;
    font-weight: bold;
    font-size: smaller;
}

.ui-accordion h3 {
    padding-left: 28px;
}

// We are fighting here to get our icons displayed instead of the ones the
// accordion wants to display (typical expand/contract icons). The data-toolId
// helps make this rule more specific so it beats the accordion rule.
// The size makes our arbitrarily sized svg images fit. (Some panels have a
// slightly different size icon and override.)
// The background position defeats an accordion rule that is aimed at selecting
// an icon from a collection-of-icons image by position.
// The background-image:none prevents displaying one of the icons from the
// accordion collection if one of our tools does not provide an icon.
// It is usually overridden by a more specific rule with a particular data-toolId.
// The display:inline-block defeats an accordion rule that sometimes tries to
// hide the icon altogether (display:none).
// Note that this doesn't seem to work in the latest Firefox; may need rework
// when we next update GeckoFx.
.ui-accordion h3[data-toolId] span.ui-accordion-header-icon {
    background-size: 16px 16px;
    background-position: 0 0;
    display: inline-block;
    background-image: none;
}

.ui-accordion h3[data-toolId="talkingBookTool"] span.ui-accordion-header-icon {
    background-size: 12px 16px;
    background-position: 2px 0;
    display: inline-block;
}

// There should be one of these rules for each tool. Newer ones are being placed
// in the tool's own less file. If your tool shouldn't have an icon you need a similar
// rule to force it not to have a background image, since otherwise the one at
// position 0,0 in the accordion image collection is used.
.ui-accordion
    h3[data-toolId="decodableReaderTool"]
    span.ui-accordion-header-icon {
    background-image: url("/bloom/images/keys-white.png") !important;
}

.ui-accordion
    h3[data-toolId="leveledReaderTool"]
    span.ui-accordion-header-icon {
    background-image: url("/bloom/images/steps-white.png") !important;
}

.ui-accordion h3[data-toolId="talkingBookTool"] span.ui-accordion-header-icon {
    background-image: url("/bloom/images/microphone-white.svg") !important;
}

// Dialogs launched from the toolbox need to be in front of everything,
// and so does the backdrop used to dim and disable the stuff behind the dialog.
// In particular they need to be in front of the pure-drawer stuff (1-99).
.ui-dialog,
.ui-widget-overlay {
    z-index: 20000;
}

.hideExperimental .experimental {
    display: none;
}
