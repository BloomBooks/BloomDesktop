//importing this (less) here makes it actually start this file off with the contents of the toastr.css,
//which we're doing for convenience so that we don't have to get it in the installer and then import it explictly
@import (less) "../../node_modules/toastr/toastr.less";
@import "../../bloomUI.less";

@toolboxBackgroundColor: @bloom-panelBackground;
@helpLinkTopMargin: 45px;
@bloomEnterpriseBadgeSize: 24px;

// The drag activity tool wants a white bar at the very top, so defeat the usual padding
.ui-accordion .ui-accordion-content[data-toolid="dragActivityTool"] {
    padding-top: 0;
    padding-left: 1px !important;
}

div.toolboxRoot {
    display: inline-block;
    background-color: @toolboxBackgroundColor;
    color: white;
    font-size: x-small;
    position: fixed;
    top: 25px; // leaves room for pure-drawer control for showing and hiding toolbox
    bottom: 1px;
    right: 0;
    width: @toolboxWidth;
    z-index: 18000; /* Just over help bubbles, but under topic dialog */

    .ui-widget-content {
        background: none; // clear out the backgroudn image jquery-ui adds
        background-color: @toolboxBackgroundColor;
        border: none;
    }

    // multiple tools add a Help link after the rest of the tool content
    .helpLinkWrapper {
        margin-top: @helpLinkTopMargin; // put some space before the Help link
    }
}
.MuiPopover-root.MuiMenu-root.MuiModal-root {
    z-index: 18001 !important; // Beat mui rule that wants it to be 1300, but it must be above the toolbox
    // Make the popover for mui Select look right for the toolbox context.
    // It ought to be possible to do this in React; the doc indicates that menu colors can be controlled
    // with the sx prop, but I couldn't get it to work.
    // Usually, the next best option would be to put additional emotion css on the container. That won't
    // work here because the list and items are not children of the Select; they get added at the body level.
    // For the same reason, we can't even limit this to div.toolboxRoot; the list is not inside that.
    ul {
        background-color: @toolboxBackgroundColor !important;
        color: white !important;
    }
    li {
        background-color: @toolboxBackgroundColor !important;
        // Messing with these to make a tighter list and to try to make the divider lines look good.
        padding: 2px 0 !important;
        margin: 0 16px !important;
        min-height: 28px !important;
        &:hover {
            background-color: #505050 !important;
        }
        &.Mui-selected {
            background-color: @bloom-blue !important;
        }
        &.MuiMenuItem-divider {
            border-bottom: 1px solid rgba(255, 255, 255, 0.4);
        }
    }
}

.ui-accordion-header {
    -moz-user-select: none;
}
span.scroll-button {
    color: white;
    float: left;
}
div.ui-accordion {
    padding-left: 0;
    padding-right: 0;
}
div.ui-accordion-content {
    padding-left: 3px !important;
    padding-right: 0 !important;
}

.h1 {
    padding-top: 20px;
}
.section {
    padding-top: 20px;
    color: @bloom-lightblue;
}
.tableTitle {
    padding-top: 20px;
}
.thisPageSection {
    padding-top: 0;
}

div.clear,
table.clear {
    clear: both;
}
.hidden {
    display: none !important;
}
.align-top {
    vertical-align: top;
}

input[type="checkbox"] {
    color: white;
    background-color: transparent;
    border-color: white;
}

div.checkbox {
    width: 11px !important;
    height: 11px !important;
    border: 1px solid white;
    display: block;
    position: relative;
    float: left;
    margin: 2px 6px 6px;
    font-size: 17px;
    overflow: visible;
    line-height: 4px;
    cursor: pointer;
    -moz-user-select: none;
}

div.checkbox-label {
    position: relative;
    -moz-user-select: none;
    cursor: default;
    margin: 2px 0px 0px 0px;
}

div.checkbox-and-label {
    display: flex;
}

.ui-accordion h3 {
    padding-left: 28px;
}

// We are fighting here to get our icons displayed instead of the ones the
// accordion wants to display (typical expand/contract icons). The data-toolId
// helps make this rule more specific so it beats the accordion rule.
// The size makes our arbitrarily sized svg images fit. (Some panels have a
// slightly different size icon and override.)
// The background position defeats an accordion rule that is aimed at selecting
// an icon from a collection-of-icons image by position.
// The background-image:none prevents displaying one of the icons from the
// accordion collection if one of our tools does not provide an icon.
// It is usually overridden by a more specific rule with a particular data-toolId.
// The display:inline-block defeats an accordion rule that sometimes tries to
// hide the icon altogether (display:none).
.ui-accordion h3[data-toolId] span.ui-accordion-header-icon {
    background-size: 16px 16px;
    background-position: 0 0;
    display: inline-block;
    background-image: none;
}

.ui-accordion h3[data-toolId="talkingBookTool"] span.ui-accordion-header-icon {
    background-size: 12px 16px;
    background-position: 2px 0;
    display: inline-block;
}

// There should be one of these rules for each tool. Newer ones are being placed
// in the tool's own less file. If your tool shouldn't have an icon you need a similar
// rule to force it not to have a background image, since otherwise the one at
// position 0,0 in the accordion image collection is used.
.ui-accordion
    h3[data-toolId="decodableReaderTool"]
    span.ui-accordion-header-icon {
    background-image: url("/bloom/images/keys-white.png") !important;
}

.ui-accordion
    h3[data-toolId="leveledReaderTool"]
    span.ui-accordion-header-icon {
    background-image: url("/bloom/images/steps-white.png") !important;
}

.ui-accordion h3[data-toolId="talkingBookTool"] span.ui-accordion-header-icon {
    background-image: url("/bloom/images/microphone-white.svg") !important;
}

// Add Bloom Enterprise badges to appropriate tools
.ui-accordion .requiresEnterprise {
    // Add Bloom Enterprise badge to tool header
    &:after {
        content: " ";
        background: no-repeat center/80%
            url("../../../images/bloom-enterprise-badge.svg") !important;
        position: absolute;
        right: 5px;
        height: @bloomEnterpriseBadgeSize;
        width: @bloomEnterpriseBadgeSize;
        bottom: 2px;
    }
}

// Dialogs launched from the toolbox need to be in front of everything,
// and so does the backdrop used to dim and disable the stuff behind the dialog.
// In particular they need to be in front of the pure-drawer stuff (1-99).
.ui-dialog,
.ui-widget-overlay {
    z-index: 20000;
}

.hideExperimental .experimental {
    display: none;
}

// override the color in this lib, which isn't under less control
.pure-drawer,
.pure-toggle-label {
    background-color: @bloom-darkestBackground !important;
    top: 0 !important; // this is just needed for the button (which is the "toggle-label")
}
#pusherContainer {
    background-color: @bloom-darkestBackground !important;
}
#toolbox h3 {
    background: none;
    background-color: @bloom-unselectedTabBackground;
    border-color: @bloom-unselectedTabBackground;
    &.ui-state-hover,
    &.ui-state-active {
        background-color: @bloom-blue !important;
    }
    z-index: 1005; // higher than disablingOverlay in Talking Book tool
}

*.disabled {
    opacity: 0.4;
    pointer-events: none;
}
