// C# used to replace this with the desired background color,
// but the switch to a separate less/css file defeated that mechanism.

@import (less) "../../node_modules/toastr/toastr.less";
@import "../../bloomUI.less";

@highlightColor: @bloom-yellow;
@gridWidth: 80px;
@gridHeight: 105px; // BL-336 small increase

body {
    background-color: @bloom-panelBackground;
}

/* this is handy for debugging page numbering in the thumbnail list
.bloom-page::after {
    content: attr(data-page-number);
    position: absolute;
    bottom: 7px;
    left: 10px;
    color: red;
    overflow: visible;
    font-size: 100pt;
}
*/

#panelFlexContainer {
    display: flex;
    flex-direction: column;
    height: 100%; // and not bigger!
}

// Do NOT try applying these properties to the #pageGrid itself.
// Dragging goes haywire when that div itself is scrolled.
// See BL-5618.
#pageGridWrapper {
    flex: 1 1 auto;
    overflow-y: auto; // so it will scroll, if it needs to, instead of growing
    cursor: default;
    .pageContainer {
        // BL-7074 Keep SL books from eating up memory by not displaying videos in page thumb images.
        .bloom-videoContainer {
            background: center no-repeat
                url("../../templates/template books/Sign Language/video-placeholder.svg");
            video {
                display: none;
            }
        }
    }
}

.pageContainer {
    padding: 3px;
    box-sizing: border-box;
    overflow: hidden;
    display: inline-block;
    height: 65px;
    width: 47px; /* default = A5Portrait */
    * {
        cursor: pointer !important;
    }
    &.A5Landscape {
        height: 51px;
        width: 69px;
        .bloom-page {
            transform: scale(0.08);
        }
    }
    &.A4Landscape {
        height: 54px;
        width: 74px;
        .bloom-page {
            transform: scale(0.061);
        }
    }
    &.A4Portrait {
        height: 62px;
        width: 46px;
        .bloom-page {
            transform: scale(0.05);
        }
    }
    &.A3Portrait {
        height: 62px;
        width: 46px;
        .bloom-page {
            transform: scale(0.035);
        }
    }
    &.A3Landscape {
        height: 57px;
        width: 79px;
        .bloom-page {
            transform: scale(0.042);
        }
    }
    &.B5Portrait {
        height: 63px;
        width: 46px;
        .bloom-page {
            transform: scale(0.06);
        }
    }
    &.LetterLandscape {
        height: 47px;
        width: 61px;
        .bloom-page {
            transform: scale(0.058);
        }
    }
    &.LetterPortrait {
        height: 61px;
        width: 47px;
        .bloom-page {
            transform: scale(0.058);
        }
    }
    &.HalfLetterPortrait {
        height: 61px;
        width: 47px;
        .bloom-page {
            transform: scale(0.075);
        }
    }
    &.QuarterLetterLandscape {
        height: 47px;
        width: 61px;
        .bloom-page {
            transform: scale(0.115);
        }
    }
    &.QuarterLetterPortrait {
        height: 61px;
        width: 47px;
        .bloom-page {
            transform: scale(0.115);
        }
    }
    &.Device16x9Portrait {
        height: 67px;
        width: 40px;
        .bloom-page {
            transform: scale(0.092);
        }
    }
    &.Device16x9Landscape {
        height: 43px;
        width: 70px;
        .bloom-page {
            transform: scale(0.095);
        }
    }
    &.A6Portrait {
        .bloom-page {
            transform: scale(0.11);
        }
    }
    &.A6Landscape {
        height: 51px;
        width: 69px;
        .bloom-page {
            transform: scale(0.12);
        }
    }

    //http://stackoverflow.com/questions/17824060/ios-safari-runs-out-of-memory-with-webkit-transform
    transform-style: preserve-3d;
    .bloom-page {
        backface-visibility: hidden;
        transform: scale(0.074); // default = A5Portrait
        transform-origin: left top;
    }
}

.gridSelected .pageContainer {
    padding: 1px;
    border: 2px solid @highlightColor;
}

.gridItem {
    width: @gridWidth;
    height: @gridHeight;
    opacity: 1;
    //overflow:hidden;
    &:nth-child(even) {
        .thumbnailCaption {
            text-align: left;
        }
    }
    &:nth-child(odd) {
        .pageContainer {
            float: right;
        }
        .thumbnailCaption {
            right: 4px; // position is absolute, so float:right won't work
        }
    }
}

.invisibleThumbnailCover {
    z-index: 50; // just needs to be above the .bloom-page and its contents
    position: absolute;
    display: inline-block;
    opacity: 0; // transparent
    width: calc(100% - 2px);
    height: calc(100% - 2px);
    top: 1px; // top and left are 'absolute', but somehow still relative to their container
    left: 1px;
}

/* div.gridItem.dragging { opacity: .8; } */
.thumbnailCaption {
    position: absolute;
    top: 63px;
    color: white;
    overflow: hidden;
    text-align: right;
    width: 80px;
    // BL336 leave space for 3 lines of caption
    font-size: 9pt;
    line-height: 1.3em;
}

html,
body {
    height: 100%; // need this to get page browser to fill available space on the screen
}

#menuIconHolder {
    position: absolute;
    bottom: 6px;
    right: 0;
}

//for "Saved" toast
.toast-info {
    background-color: @bloom-darkestBackground;
    width: 100% !important;
    padding: 0px 0px 0px 0px;
}

#toast-container {
    font-family: @UIFontStack;
    font-size: 9pt;
}

#toast-container > .toast {
    //opacity: 1.0 !important;
    box-shadow: none !important;
    background-image: none !important;
    padding-left: 5px; //don't leave room for the icon
}

// other properties of this are set in basePage.less
// these additional ones give the effect we want in the
// thumbnail view for the special overlay div we make
// in pageThumbnail.tsx
.pageOverflowsIcon {
    position: absolute;
    bottom: 0;
    width: 100%;
}
