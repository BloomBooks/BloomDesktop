@import "../../bloomWebFonts.less";
@import (reference) "../../bloomUI.less"; // for various bloom colors
// Common styles to be applied to htm-js-css dialogs in Bloom
@backgroundColorWhite: rgb(255, 255, 255);
@backgroundColorLight: rgb(240, 240, 240);
@backgroundColorDark: rgb(230, 230, 230);
@backgroundColorTitleBar: @bloom-blue;
@backgroundColorHoverLight: rgb(236, 244, 252);
@backgroundColorHoverDark: @bloom-bluetransparent;
@buttonBorder: @bloom-lightblue;
@buttonShadow: rgb(136, 136, 136);
@disabledText: rgb(211, 211, 211);
@preferredBackgroundGray: hsl(0, 0%, 86%);
// Used to be 16,010. The reason for that value has been lost.
// Was changed to 60,000 to fix BL-4342. I (JohnT) did not fully
// figure out what caused that, but my observation was that click events
// were being raised on boxes with high z-indexes BEHIND the dialog when
// a user clicked on the dialog. See the discussion in the issue.
// The high-z-index items didn't show through the dialog, presumably because
// they are in a different 'stacking context', though I haven't figured out
// what it is. But they did get the clicks. As far as I can tell, this
// is a bug in gecko, but I can't reproduce it in any simple case.
// (See https://jsfiddle.net/john7540/d4orcuh1/1/ for one attempt).
// It somehow prevents this if the dialogZindex is higher than any of the
// hidden elements behind the dialog. (Well, strictly, I didn't try any values
// between 16,010 and 50,010.) One user of this setting is the text
// properties dialog in origami mode, and that currently has page elements
// with z-index as high as 50,000; so I made this a round number higher
// than that.
@dialogZindex: 60000;
// Note that  the z-index for the select2 dropdowns used in both ../StyleEditor/StyleEditor.less
// and ../TextBoxProperties/TextBoxProperties.less must be at least as large as or larger than the
// dialog's z-index.  (See http://issues.bloomlibrary.org/youtrack/issue/BL-4386.)
@dialogZindexPlusOne: 60001;

.bdRounded {
    border-radius: 4px;
}

.bloomDialogContainer {
    background-color: @backgroundColorWhite;
    opacity: 1;
    z-index: @dialogZindex;
    position: absolute;
    line-height: 1.8;
    font-family: @UIFontStack;

    h2.tab {
        font-size: 10pt;
    }

    .mainBlock {
        display: inline-block;
        vertical-align: top;
        line-height: normal;
    }

    .leftBlock {
        width: 150px;
    }

    .indentBlock {
        width: 100px;

        img {
            margin-left: 3px;
            margin-top: 1px;
        }
    }

    .selectedIcon {
        background-color: @bloom-blue;
        border: 1px solid @bloom-bluetransparent;
        .bdRounded;
    }

    .iconLetter {
        width: 19px;
        height: 19px;
        display: inline-block;
        padding: 2px 2px 2px 2px;
        text-align: center;
    }

    .icon16x16 {
        width: 19px;
        height: 19px;
        display: inline-block;
        padding: 2px;

        img {
            margin-top: 1px;
            margin-left: 1px;
            vertical-align: 5px;
        }
    }

    a {
        color: @bloom-blue;
    }
}

.bloomDialogContainer .iconHtml {
    width: 22px;
    height: 22px;
    display: inline-block;
    padding: 1px 0 0 1px;
    position: relative;

    &.wide {
        width: 66px;
    }

    &.tall {
        height: 66px;
    }
}

.bloomDialogContainer .iconBox {
    width: 14px;
    height: 14px;
    margin: 2px;
    border: 1px solid;
    display: block;
}

.bloomDialogContainer .iconBack {
    width: 16px;
    height: 16px;
    margin: 2px;
    display: block;

    &.grayBackground {
        background-color: @preferredBackgroundGray; //from basePage.less
    }
}

.bloomDialogContainer .iconHorizontalLine {
    width: 56px;
    margin: 0px -50% 0px 1px;
    border: 1px solid;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: block;
}

.bloomDialogContainer .iconVerticalLine {
    height: 56px;
    margin: 1px -50% 0px 0px;
    border: 1px solid;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: block;
}

.bloomDialogContainer .control-section {
    margin: 0 0 12px 0;
}

// Interferes with Material UI background-color
// .bloomDialogContainer button,
// .bloomDialogContainer input {
//     background: linear-gradient(@backgroundColorLight, @backgroundColorDark);
// }
.bloomDialogContainer button {
    .bdRounded;
    border: 1px solid @buttonBorder;
    box-shadow: 1px 2px 7px @buttonShadow;
}

// Interferes with Material UI background-color
// .bloomDialogContainer button:hover,
// .bloomDialogContainer input:hover,
// .bloomDialogContainer select:hover,
// .bloomDialogContainer .select2-container--default:hover,
// .bloomDialogContainer .select2-container--focus {
//     background: linear-gradient(
//         @backgroundColorHoverLight,
//         @backgroundColorHoverDark
//     );
// }
.bloomDialogContainer button[disabled] {
    border: 1px solid @disabledText;
    background: @backgroundColorLight;
    color: @disabledText;
}

.bloomDialogContainer .propButton:not(.selectedIcon) {
    border: 1px solid @disabledText;
    .bdRounded;
}

.bloomDialogContainer .propButton:hover {
    background: linear-gradient(@backgroundColorHoverLight,
            @backgroundColorHoverDark );
}

.bloomDialogContainer .bloomDialogTitleBar {
    background-color: @backgroundColorTitleBar;
    opacity: 1;
    position: relative;
    top: 0;
    left: 0;
    right: 0;
    height: 2em;
    text-align: center;
}

.bloomDialogContainer .bloomDialogMainPage {
    background: @backgroundColorWhite;
    margin-left: 1em;
    font-size: 10pt;
}

.bloomDialogContainer .select2-container--default .select2-selection--single {
    border-radius: 0;
    border-color: grey;
}

//the actual dropdown part of select2 controls is appended to the body, rather than our format dialog .iconBox
.select2-dropdown {
    border-radius: 0 !important;
    border-color: black !important;
}

.select2-container--default .select2-selection--single .select2-selection__rendered {
    color: black !important;
}

.bloomDialogTitleBar {
    cursor: move;
    color: white;
}
