// Aspects of origami we only need in the edit view.
// Note that this is not limited to when the origami layout switch is turned on;
// some of these rules apply when editing the page even with the switch off.
// For example, you can hover over a splitter and drag it and see the percent.
// But these rules are not included in static views of the book, including all
// publishing view and the preview.
@import "../../bloomUI.less";

@DisabledColor: @bloom-gray;
@DarkSwitch: @bloom-panelBackground;
@ActiveSwitchColor: @ControlColor;

@ToggleVerticalOffset: -30px;
@TogglePartsRadius: 8px;
@ToggleInnerOffset: -2px;
@ToggleWidth: 60px;
@ToggleBorderThickness: 2px;

.origami-ui {
    visibility: hidden;
    font-family: @UIFontStack;
}

.origami-layout-mode .origami-ui {
    visibility: visible;
}

.split-pane-divider {
    visibility: visible !important; // should be enough to include this after origami, but make sure
}

.split-pane.vertical-percent > .vertical-divider {
    &:hover:after,
    &.dragged:after {
        content: attr(data-splitter-label);
        position: absolute;
        left: 5px;
        z-index: 1000000;
        color: black;
        padding: 5px 5px 5px 2px;
        background-color: #b0b0b0bf;
        // I'm surprised we don't need something to make it display in as narrow a column
        // as possible, or "white-space: pre" to make newlines work. But it's coming
        // out the way we want without anything I know of to make that happen.
    }
    &.snapped.dragged:after {
        font-weight: bold;
    }
}

.split-pane.vertical-percent > .vertical-divider:hover,
.origami-layout-mode .split-pane.vertical-percent > .vertical-divider,
.vertical-divider.dragged {
    border-right-color: @OrigamiActiveColor !important;

    &.snapped {
        border-right-style: solid;
    }
}

.split-pane.vertical-percent > .vertical-divider {
    cursor: col-resize;
}

.split-pane.horizontal-percent > .horizontal-divider {
    cursor: row-resize;
}

.origami-drag {
    .imageOverlayButton,
    .editMetadataButton {
        display: none;
    }
    &.origami-drag-horizontal {
        cursor: row-resize;
    }
    &.origami-drag-vertical {
        cursor: col-resize;
    }
}

.split-pane.horizontal-percent > .horizontal-divider {
    &:hover:after,
    &.dragged:after {
        content: attr(data-splitter-label);
        position: absolute;
        bottom: 0;
        right: 0;
        z-index: 1000000;
        color: black;
        padding: 5px 10px;
        // This came from the StackOverflow article where I discovered that content can
        // have newlines. Apparently it is necessary for them to work as we want.
        white-space: pre;
        text-align: right;
        background-color: #b0b0b0bf;
    }

    &.snapped.dragged:after {
        font-weight: bold;
    }
}

.split-pane.horizontal-percent > .horizontal-divider:hover,
.origami-layout-mode .split-pane.horizontal-percent > .horizontal-divider,
.horizontal-divider.dragged {
    border-bottom-color: @OrigamiActiveColor !important;

    &.snapped {
        border-bottom-style: solid;
    }
}

.selector-links,
.selector-links a {
    color: @OrigamiActiveColor;
}

.origami-controls {
    .button,
    .origami-controls .button:visited {
        cursor: pointer;
    }
    .button:hover,
    .button:focus {
        color: white;
        background-color: @OrigamiActiveColor;
    }
}

//only show the plus signs that add new blocks for the block that has the mouse
.origami-layout-mode .origami-ui {
    &:hover .adders {
        display: block;
    }
}

/*
 * Layout Mode (origami) switch (from proto.io)
 *
 */
.above-page-control-container {
    position: absolute;
    left: 0;
    top: @ToggleVerticalOffset;
    width: 100%;
    display: flex;
    justify-content: end;
    box-sizing: border-box;
}
.origami-toggle {
    cursor: pointer;
    margin-right: 19px;
    line-height: 1em;
    color: @DisabledColor;
    div {
        color: @ActiveSwitchColor;
    }
    > :first-of-type {
        display: inline;
    }
}

// here follows the inner workings of the toggle
.onoffswitch {
    display: inline-block;
    vertical-align: middle; /* This is the only thing I added custom */
    position: relative;
    width: @ToggleWidth;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}
.onoffswitch-checkbox {
    display: none;
}
.onoffswitch-label {
    display: block;
    overflow: hidden;
    cursor: pointer;
    height: 17px;
    border: @ToggleBorderThickness solid @ActiveSwitchColor;
    border-radius: 10px;
}
.onoffswitch-inner {
    display: block;
    width: 200%;
    margin-left: -100%;
    -moz-transition: margin 0.3s ease-in-out 0s;
    -webkit-transition: margin 0.3s ease-in-out 0s;
    -o-transition: margin 0.3s ease-in-out 0s;
    transition: margin 0.3s ease-in-out 0s;
}
.onoffswitch-inner::before,
.onoffswitch-inner::after {
    display: block;
    float: left;
    width: 50%;
    height: 22px;
    padding: 0;
    line-height: 10px;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border: @ToggleBorderThickness solid transparent;
    background-clip: padding-box;
}
.onoffswitch-inner::before {
    content: "";
    background-color: @ActiveSwitchColor;
    margin: @ToggleInnerOffset;
}
.onoffswitch-inner::after {
    content: "";
    margin: @ToggleInnerOffset;
}
// The inner ball of the toggle that moves
.onoffswitch-switch {
    display: block;
    width: 14px;
    margin: 1px;
    background-color: @ActiveSwitchColor;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 39px;
    -moz-transition: all 0.3s ease-in-out 0s;
    -webkit-transition: all 0.3s ease-in-out 0s;
    -o-transition: all 0.3s ease-in-out 0s;
    transition: all 0.3s ease-in-out 0s;
    border-radius: @TogglePartsRadius;
}
// the checkbox is not visible, but we use its checked state here
.onoffswitch-checkbox:checked + .onoffswitch-label {
    background-color: @ActiveSwitchColor; // make sure the active color is solid
    -moz-transition: background-color 0.4s ease-in-out 0s;
    -webkit-transition: background-color 0.4s ease-in-out 0s;
    -o-transition: background-color 0.4s ease-in-out 0s;
    transition: background-color 0.4s ease-in-out 0s;
    .onoffswitch-inner {
        margin-left: 0;
    }
    .onoffswitch-switch {
        right: 1px;
        background-color: @DarkSwitch; // switched-on switch turns dark gray
    }
}
