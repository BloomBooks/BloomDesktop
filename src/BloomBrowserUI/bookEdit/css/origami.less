// These rules control the layout of pages which include origami markup.
// Rules here should not include those that are only needed while editing,
// such as rules affecting the cursor or making controls visible while hovering.
// Put all the edit-mode-only origami rules in origamiEditing.less.
// Note: there may well be more rules here which could be moved to
// origamiEditing.less. The initial goal of splitting them up was to avoid
// getting the origami editing behaviors while reading in BloomReader.
@import (inline) "../../lib/split-pane/split-pane.css";
@import "../../bloomUI.less";

@flowerPetalGrey: #7e7e7e; // shouldn't this just be @bloom-gray?
@inactiveColor: @bloom-buff;
@font: "Segoe UI", "Open Sans", Arial, sans-serif;

.origami-ui {
    visibility: hidden;
    font-family: @font;
}
.origami-layout-mode .origami-ui {
    visibility: visible;
}

.split-pane > .split-pane-component {
    overflow: hidden !important; // override split-pane.css rules that call for overflow: auto
}

.split-pane.vertical-percent > .split-pane-component.position-left {
    right: 50%;
    margin-right: 3px;
}

.split-pane.vertical-percent > .split-pane-component.position-right {
    width: 50%;
}

.split-pane.horizontal-percent > .split-pane-component.position-top {
    bottom: 50%;
    margin-bottom: 3px;
}

.split-pane.horizontal-percent > .split-pane-component.position-bottom {
    height: 50%;
}

// overridden in origamiEditing.less. Unless we're editing, we don't
// need to see these elements, and there are rules inherited from split-pane.css
// which do annoying things if they are visible in epubs.
.split-pane-divider {
    visibility: hidden;
}

.split-pane.vertical-percent > .vertical-divider {
    right: 50%;
    border-right: 3px dashed transparent;
}

.split-pane.horizontal-percent > .horizontal-divider {
    bottom: 50%;
    border-bottom: 3px dashed transparent;
}

.origami-layout-mode .bloom-editable {
    // We want to see some text in the background, but it can't interfer with the forground.
    // If you change this color, be sure to see how it looks when grey background is enabled.
    color: #ececec !important;
}

@firstButtonOffset: 10px;
@secondButtonOffset: 10px;
@distanceOfButtonToEdge: 10px;
.origami-controls {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 20000;
    height: 99%;
    width: 99%;
    .close {
        font-weight: bold;
    }
    .button,
    .origami-controls .button:visited {
        display: inline-block;
        text-decoration: none;
        position: relative;
        height: 20px;
        width: 20px;
        text-align: center;
        color: @inactiveColor;
        background-color: transparent;
        line-height: 1em;
        font-size: 18px;
    }
    .close-button-wrapper {
        float: left;
        padding: 5px;
        position: absolute;
        right: 0;
        top: 0;
    }
    .vertical-adders {
        left: 0;
        position: absolute;
        top: 10%;
        .button {
            //padding: 10px;
            position: absolute;
            left: @distanceOfButtonToEdge;
        }
        .button.add-top {
            top: @firstButtonOffset;
        }
        .button.add-bottom {
            bottom: @secondButtonOffset;
        }
        .separator {
            border-bottom: 3px @inactiveColor dashed;
            width: 100%;
            position: absolute;
            top: 50%;
        }
    }
    .horizontal-adders {
        bottom: 0;
        right: 10%;
        position: absolute;
        .button {
            position: absolute;
            bottom: @distanceOfButtonToEdge;
        }
        .button.add-left {
            left: @firstButtonOffset;
        }
        .button.add-right {
            right: @secondButtonOffset;
        }
        .separator {
            border-right: 3px @inactiveColor dashed;
            height: 100%;
            position: absolute;
            left: 50%;
        }
    }
    .horizontal-adders > div {
        float: left;
    }
}

@smallSplitterLength: 30px;
@smallClusterThickness: 30px;

@mediumSplitterLength: 50px;
@mediumClusterThickness: 70px;

@largeSplitterLength: 100px;
@largeClusterThickness: 100px;

/* I wasn't convinced this was helpful... may return to it
.adders{
        transition-property: width, height;
        transition-duration: 0.5s;
}*/

.origami-controls .vertical-adders,
.origami-controls .horizontal-adders {
    /*   -background-color: lightgrey;rgba(0,0,0,.1) ;*/
}

.split-pane-component-inner {
    position: relative;
    width: 100%;
    height: 100%;
    //3.0 to 3.2 had padding: 2px;, probably to make resizing easier or something? But then we can never reach the page margins
    padding: 0px;
    box-sizing: border-box;

    transition-property: font-size;
    transition-duration: 0.5s;
    font-size: 12pt;
}

/*the commented line below would also add it to an empty bloom-content1 for re-entry to layout mode*/
/*but that would be problematic/confusing in a multilingual context*/
/*.origami-layout-mode .split-pane-component-inner .bloom-editable.bloom-content1:empty:before,*/
.origami-layout-mode .split-pane-component-inner .textBox-identifier {
    /*content: "Text Box";*/
    color: @flowerPetalGrey;
    white-space: normal;
    transition-property: font-size;
    transition-duration: 0.5s;
    text-align: center;
    width: 100%;
    position: absolute;
    top: 45%;
    z-index: 50000;
    .formatButton {
        z-index: 60000;
        padding-left: 10px;
        display: inline-flex;
    }
}
.container-selector-links {
    display: none;
}
.container-textBox-id {
    display: none;
}
.selector-links {
    top: 45%;
    text-align: center;
    z-index: 50000;
}

.selector-links div {
    display: inline;
}

//Assume too small to show
.split-pane-component-inner {
    .vertical-adders {
        display: none;
    }
    .horizontal-adders {
        display: none;
    }
}

//If wide enough, show the horizontal adders with medium size
.split-pane-component-inner[min-width~="60px"] {
    .horizontal-adders {
        width: @mediumClusterThickness;
        height: @mediumSplitterLength;
    }
}

//If tall enough, show the vertical adders with medium size
.split-pane-component-inner[min-height~="60px"] {
    .vertical-adders {
        width: @mediumSplitterLength;
        height: @mediumClusterThickness;
    }
}

.split-pane-component-inner[min-width~="150px"][min-height~="150px"]
    .textBox-identifier {
    transition-property: font-size;
    transition-duration: 0.5s;
    font-size: 24pt;
}

//If really tall, show the vertical adders with large size
.split-pane-component-inner[min-height~="250px"] {
    .vertical-adders {
        height: @largeClusterThickness;
    }
    .horizontal-adders {
        height: @largeSplitterLength;
    }
}

//If really wide, show the horizontal adders with large size
.split-pane-component-inner[min-width~="250px"] {
    .vertical-adders {
        width: @largeSplitterLength;
    }
    .horizontal-adders {
        width: @largeClusterThickness;
    }
}

//only show the plus signs that add new blocks for the block that has the mouse
.origami-layout-mode .origami-ui {
    .adders {
        display: none;
    }
}
