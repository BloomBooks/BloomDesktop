@import "../common-mixins.less";
@import "bloom-xmatter-sharedRules.less";

@XMatterPackName: "unknown";

//This hack is used to localize the xMatter label. data-after-content is set in bloomEditing.ts
.bloom-frontMatter, .bloom-backMatter {
    .pageLabel:before {
        content: "@{XMatterPackName}";
        display: none;
    }
    .pageLabel:after {
        content: ": " attr(data-after-content);
    }
}

@BottomMargin-SmallerForCover: 10mm;
//normally the marginBox sizing is done by the basePage, but for the front and back cover, we want to cheat to have
//a smaller bottom margin, since there is no page number
.outsideFrontCover .marginBox, .outsideBackCover .marginBox {
    .SetMarginBoxCover(@PageHeight, @PageWidth) {
        /*There's no page number on the cover, so we might as well have the bottom stuff closer to the bottom*/
        height: @PageHeight - (@MarginTop + @BottomMargin-SmallerForCover);
        //Just center the margin box, (for now, we're ignoring the binding)
        left: @MarginOuter;
        width: @PageWidth - (2 * @MarginOuter);
        IMG {
            /* BL-2353 Keeps XMatter thumb images from going too wide (or too small) */
            max-width: @PageWidth - (2 * @MarginOuter);
        }
    }
    .A3Landscape& {
        .SetMarginBoxCover(@A3Landscape-Height, @A3Landscape-Width);
    }
    .A4Portrait& {
        .SetMarginBoxCover(@A4Portrait-Height, @A4Portrait-Width);
    }
    .A4Landscape& {
        .SetMarginBoxCover(@A4Landscape-Height, @A4Landscape-Width);
    }
    .A5Portrait& {
        .SetMarginBoxCover(@A5Portrait-Height, @A5Portrait-Width);
    }
    .A5Landscape& {
        .SetMarginBoxCover(@A5Landscape-Height, @A5Landscape-Width);
    }
    .A6Portrait& {
        .SetMarginBoxCover(@A6Portrait-Height, @A6Portrait-Width);
    }
    .A6Landscape& {
        .SetMarginBoxCover(@A6Landscape-Height, @A6Landscape-Width);
    }
    .B5Portrait& {
        .SetMarginBoxCover(@B5Portrait-Height, @B5Portrait-Width);
    }
    .LetterPortrait& {
        .SetMarginBoxCover(@LetterPortrait-Height, @LetterPortrait-Width);
    }
    .LetterLandscape& {
        .SetMarginBoxCover(@LetterLandscape-Height, @LetterLandscape-Width);
    }
    .HalfLetterPortrait& {
        .SetMarginBoxCover(@HalfLetterPortrait-Height, @HalfLetterPortrait-Width);
    }
    .HalfLetterLandscape& {
        .SetMarginBoxCover(@HalfLetterLandscape-Height, @HalfLetterLandscape-Width);
    }
    .QuarterLetterPortrait& {
        .SetMarginBoxCover(@QuarterLetterPortrait-Height, @QuarterLetterPortrait-Width);
    }
    .QuarterLetterLandscape& {
        .SetMarginBoxCover(@QuarterLetterLandscape-Height, @QuarterLetterLandscape-Width);
    }
}

.insideFrontCover {
    .bloom-translationGroup {
        height: 100%;
    }
}

.iso693Code * {
    display: inline;
}

.frontCover {
    @BottomRowHeight: 20px;
    @MarginBetweenMajorItems: 15px;

    .marginBox {
        display: flex;
        flex-direction: column;
    }
    // This gives AuthorIllustrator, LanguageName and Topic all the same styling
    .Cover-Default-style {
        font-size: 12pt;
    }
    .bloom-translationGroup.bookTitle {
        flex: 0 0 auto; // how this behaves for the marginBox flex layout
        order: 0; // top of the page

        //within this, we also need flex, so we can set the order the child edit boxes
        //independently of their appearance order in the html
        display: flex;
        flex-direction: column;

        .bloom-editable {
            order: 0;
            height: auto;
            //a bit confusingly (for me), text-align:center stops working because of the flex layout, so we need this:
            justify-content: center;

            &.bloom-contentNational1 {
                //NB: we show the national language even if this is a monolingual book
                order: 1;
            }

            // //NB: THe order here is important. bloom-content1 should be last so that if a box is *both* bloom-contentNational1 and bloom-content1 (as is the default case for source collections), we want the  bloom-content1 rule to win.
            // &.bloom-contentNational1 {
            //     //NB: we show the national language even if this is a monolingual book
            //     order: 1;
            //     display: block; // don't want to inherit flex (BL-2681), but need to override display:none for inactive languages
            // }
            // //...but we show the regional language only if the book is tri-lingual,
            // //   which we can tell because Bloom will stick a "bloom-content3" on the appropriate element
            // //NOPE: .bloom-contentNational2 {
            // &.bloom-content3 {
            //     display: block; // don't want to inherit flex (BL-2681), but need to override display:none for inactive languages
            //     order: 2;
            // }
            // &.bloom-content1 {
            //     //main title
            //     order: 0;
            //     display: block; // don't want to inherit flex (BL-2681), but need to override display:none for inactive languages
            // }
        }
    }
    .placeholder, .bloom-imageContainer {
        order: 1; //second part of the page, after the title
        flex: 1 1 auto;
        margin-top: @MarginBetweenMajorItems;
        margin-bottom: @MarginBetweenMajorItems;
    }

    .bottomBlock {
        flex: 0 0 auto;
        order: 2; // third part of the page, after title and main picture

        // we want two columns: the first is for the optional branding logo, the second is for everything else
        display: flex;
        flex-direction: row;

        //branding will often be empty, if there is no front cover logo
        .branding {
            order: 0; // first (left) in the flex list
            margin: 0; //unlike a long of logo placements, we're not trying to center this one with left/right auto margins
            margin-right: 10px; // this only has an effect if the image is there, beecause in the html, we set display:none if the image isn't found
        }

        // this contains the smallCoverCredits text box row, followed by the row that has the language names and topic
        .bottomTextContent{
            flex: 1 0 auto; // this element is happy to take up space relative to its parent, bottomBlock
            order: 1; // after the optional branding logo

            //this block is flex box of 2 rows
            display: flex;
            flex-direction: column;

            .creditsRow {
                .bloom-editable.smallCoverCredits {
                    display: inherit;
                    text-align: center;
                    line-height: 1.7em;
                    min-height: 1.7em;
                    height: auto;
                }
            }
            .bottomRow {
                display: flex;
                flex-direction: row;
                justify-content: space-between;

                &[data-have-topic="false"] {
                    .coverBottomLangName {
                        //since there is no topic, center the language name.
                        margin-left: auto;
                        margin-right: auto;
                    }
                }
                .coverBottomLangName {
                    line-height: 1.6em !important;
                }

                .coverBottomBookTopic {
                    height: @BottomRowHeight;
                    min-width: 1px; //without this, we don't get the qtip that lets you choose a topic
                    text-align: right;
                    .bloom-editable { //.bloom-contentNational1 {
                        display: inline !important;
                        bottom: -4px;
                        padding-right: 1px;
                        text-align: right;
                    }
                }

                .coverBottomBookTopic {
                    .bloom-editable {
                        margin-top: 0;
                    }
                    // .bloom-contentNational2 {
                    //     color: gray;
                    // }
                    // .bloom-content1 {
                    //     &:not(.bloom-contentNational1) {
                    //         color: gray;
                    //     }
                    // }
                }

                .publishMode {
                    .coverBottomBookTopic {
                        // .bloom-contentNational2 {
                        //     display: none;
                        // }
                        // .bloom-content1 {
                        //     &:not(.bloom-contentNational1) {
                        //         display: none;
                        //     }
                        // }
                    }
                }
            }
        }
    }
}


//note that we allow ".verso" for historical reasons (verso means something like "backside of title page") but we can
//put the credits page anywhere.
.credits {
    .Credits-Page-style {
        font-size: 10pt;
        //min-height: 5em;
        line-height: 1.4em; // supports ไปทั่วพื้ ที่นั่ ชื่ ปู ช้ต่างป
    }
    .originalAcknowledgments .bloom-editable {
        margin-bottom: @MarginBetweenBlocks;
    }
    .versionAcknowledgments .bloom-editable{
        height: auto;
        margin-bottom: 1em;
    }
    .licenseUrl {
        display: none;
    }
    @MarginBetweenBlocks_SmallPaper: .5em;
    &.A6Landscape, &.A6Portrait, &.QuarterLetterLandscape, &.QuarterLetterPortrait {
        .licenseImage {width: 65px};

//        .copyright, .ISBNContainer, .licenseBlock, .originalAcknowledgments .bloom-contentNational1{
        .copyright, .ISBNContainer, .licenseBlock, .originalAcknowledgments .bloom-editable{
            margin-bottom: @MarginBetweenBlocks_SmallPaper;
        }
        //.licenseAndCopyrightBlock {
        //    .licenseBlock{margin-bottom: 1em;}
        //}
    }
   .branding{
        position: absolute;
        bottom: 0;
        left: 0; // allows centering even though position absolute
        right: 0; // allows centering even though position absolute
        height: 1in;
    }
}

BODY[bookcreationtype="original"] {
    .titlePage {
        #originalContributions {
           .bloom-editable {
                min-height: 3em; // two lines
            }
        }
        #funding {
            .bloom-editable {
                min-height: 3em; // two lines
            }
        }
    }
}

BODY[bookcreationtype="translation"] {
    .titlePage {
        #originalContributions {
            .bloom-editable  {
                min-height: 3em; // two lines
            }
        }
        #funding {
            .bloom-editable {
                min-height: 3em; // two lines
            }
        }
    }
}

.titlePage {
    @MarginBetweenMinorItems: .5em;
    @MarginBetweenTitleAndFunding: 3em;

    .Title-On-Title-Page-style {
        font-size: 14pt;
    }
//    .Title-On-Title-Page-style.bloom-content1 {
    .Title-On-Title-Page-style[data-order='1'] {
        font-size: 20pt;
    }
    text-align: center;

    //enhance: this is necessary because we're showing langs that aren't chosen for the content of the book
    #titlePageTitleBlock {
        .bloom-editable {
            //min-height: 1.4em; messes up BL-1200
            line-height: 1.4em; // supports ไปทั่วพื้ ที่นั่ ชื่ ปู ช้ต่างป
        }
        margin-bottom: @MarginBetweenTitleAndFunding;
    }

    #originalContributions {
        margin-bottom: @MarginBetweenMinorItems;
    }
    #funding {
        margin-bottom: @MarginBetweenTitleAndFunding;
    }

    #languageInformation {
        width: 100%;

        //NB: order would be important here, since in source collections, a block can be both content1 and contentNational1
        // .langName.bloom-content1 {
        //     display: none;
        // }
        // .langName.bloom-contentNational2 {
        //     display: none;
        // }
        // .langName.bloom-contentNational1 {
        //     display: inherit;
        // }
    }

    .bottomImageWrapper{
        width: 100%; // this allows the branding to center.
        position: absolute;
        bottom: 0;
        .branding{
            height: 1in;
        }
    }
}

.insideBackCover .bloom-translationGroup {
    height: 100%;
}

// we might end up with some branding that isn't supposed to be anchored at the bottom, but at the momement, this is all we have
.branding {
    // horizonatally center
    margin-left: auto;
    margin-right: auto;

    // height: auto; might work in 3.8 when SVGs are possible, but in 3.7 we have to use PNGs so we need to declare a height.

    // Note, we don't yet have a perfect solution for the problem of sizing.
    // Some logos will be narrow and short ( e.g. .5 x 1 inch).
    // For these, a fixed height and auto-width work best:  height: .5in;  width: auto;

    // However other branding packs will be a big list of participating organizations,
    // needing to be full width and a couple inches high.
    // For these, full width and auto-height work best: height: auto; width: 100%;

    // At the cost of not scaling to the full width of the particular page size/orientation,
    // we could put the onus on the image file itself to have a fixed size, which we can center but otherwise can't
    // scale at all. This is probably feasible on back covers, but maybe would be problem on title pages and covers of differnt sizes?

    // Ideally, we might allow a little css to come with each icon.

    // For now, the compromise is this: by default, we assume it's just one logo and that the height is some amount we set here:
    height: .5in;
    width: auto;

    // However if the branding pack requires a big max-width logo, then it should name the logo with a "-wide" suffix, and the
    // pug template will use that instead, along with this "branding-wide" class, triggering these rules to override the defaults:
    &.branding-wide{
        height: auto;
        width: 100%;
    }
}

.outsideBackCover{
    .marginBox {
        display: flex;
        flex-direction: column;

        .bloom-translationGroup{
            height: 100%;

            .bloom-editable {
                text-align: center;
            }
        }

        .branding {
            margin-top: 10px;
        }
    }
}

//don't put this under any particular page, you don't know where some xmatter pack will want it
.ISBNContainer {
    .bloom-translationGroup {
        display: inline-block;
    }
    .bloom-editable {
        text-align: left !important; //even if everything else is centered (including the ISBN Block) this needs to be tight against the label
        width: 4.3cm !important;
        //vertical-align: text-top; without this the number and label align perfectly
        max-height: 1.8em;
        min-height: 1.8em;

        &[lang='*'] {
            display: inline-block;
        }
    }
    .ISBNContainer SPAN {
        vertical-align: top;
    }
    margin-bottom: @MarginBetweenBlocks;
}
