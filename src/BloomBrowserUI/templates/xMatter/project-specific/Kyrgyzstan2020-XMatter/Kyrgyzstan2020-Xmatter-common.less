@import (reference) "../../bloom-xmatter-common.less";
@import (reference) "../../../../bookLayout/basePage.less";

// These rule are common to regular Kyrgyztan2020-Xmatter and the epub version.
// Some of these rules, especially for the front cover, may not work on all readers,
// but by experiment they seem to produce reasonable results. They were originally
// part of the main Kyrgyztan2020-Xmatter, developed to produce exactly the result
// we want in Bloom Player.

// we need a lot of classes here to overcome the unfortunately "!important" class put in by Bloom at runtime
div.bloom-page.outsideFrontCover.coverColor,
div.bloom-page.outsideBackCover.coverColor {
    color: white;
    // this will get overwritten if they choose a background color
    background-color: gray !important;
}

//NB: these can't be only on <body> because they are also used in page thumbnails and in epubs
*[data-bookshelfurlkey*="grade1"] {
    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #ba0c2f !important;
    }
}
*[data-bookshelfurlkey*="grade2"] {
    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #002f6c !important;
    }
}
*[data-bookshelfurlkey*="grade3"] {
    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #35851f !important;
    }
}
*[data-bookshelfurlkey*="grade4"] {
    div.bloom-page.outsideFrontCover.coverColor,
    div.bloom-page.outsideBackCover.coverColor {
        background-color: #6f2c91 !important;
    }
}

.outsideFrontCover .marginBox {
    top: 0;
    left: 0 !important;
    height: 100% !important;
    width: 100% !important;
}

.frontCover .placeholder,
.frontCover .bloom-imageContainer {
    margin-left: 1cm;

    margin-right: 1cm;
    display: flex;
}

.frontCover .bottomBlock {
    margin-left: 1cm;
    margin-right: 1cm;
    margin-bottom: 1.5cm; // leave room for divider
}
.frontCover .bottomRow {
    display: grid !important;
    overflow: hidden;
}

// don't show second language on cover
.frontCover
    .bloom-translationGroup.bookTitle
    .bloom-editable.bloom-contentNational1:not(.bloom-content1) {
    display: none;
}

.frontCover .bloom-translationGroup.bookTitle {
    color: black;
    background-color: white;
    box-sizing: border-box; // padding doesn't affect height.
    /*flex-basis: content;*/
    flex-direction: column;
    justify-content: center;
    padding-left: 1cm;
    padding-right: 1cm;

    // repeat to make more specific than other rules
    .bloom-editable.bloom-editable.bloom-content1 {
        margin-bottom: 0; // don't want this to mess with vertical centering
        flex-grow: 0; // center it, don't grow it
    }
}

// This much of the translation group will be trimmed off if the printer
// achieves the ideal trim cut: the bleed area plus the amount of the original
// A5 page that is cut off when we scale the width to RA4 which makes the height
// a bit more than RA5. And similarly for other sizes.
.frontCover.A5Portrait .bloom-translationGroup.bookTitle {
    padding-top: @bleed + @A5Portrait-Height-Excess / 2;
}
.frontCover.USComicPortrait .bloom-translationGroup.bookTitle {
    padding-top: @bleed + @USComicPortrait-Height-Excess / 2;
}

.outsideBackCover {
    .Outside-Back-Cover-style {
        margin-top: 8mm; // 15mm wasn't enough room for text 15mm;  In Landscape mode, we remove this
        font-size: var(--OutsideBackCoverCreditsFontSize);
    }
}

.frontCover {
    .coverBottomLangName,
    .coverBottomBookTopic {
        display: none;
    }
}

/* Element | http://localhost:8089/bloom/C%3A/Users/hatto/Documents/Bloom/Kyrgyz%20Branding%20Test/Book/8444a5b9-4b6a-476a-90da-cc003fbc1fea-memsim-Preview.html */

//.frontCover div.bloom-imageContainer:nth-child(2) > img:nth-child(1) {
.frontCover div.bloom-imageContainer > img {
    // We use "contain" instead of "unset" so that when previewing a book
    // that has not been edited yet, we don't get a distorted picture. Instead,
    // we get a white border that doesn't tightly fit the image. Then in
    // bloomImage.SetImageDisplaySizeIfCalledFor(), we overwrite this to become object-fit:cover.
    object-fit: contain;
    margin-left: auto;
    margin-right: auto;
    margin-top: auto;
    margin-bottom: auto;
    border: solid white 3px;
    box-sizing: border-box; // keep it within the image-container, not 6px beyond it because of the border
}

/* only white makes sense, e.g. for the inside cover colors */
div.bloom-page {
    &.insideFrontCover,
    &.insideBackCover {
        background-color: white !important;
    }
}

.Device16x9Portrait,
.Device16x9Landscape {
    &.frontCover {
        .bloom-translationGroup.bookTitle {
            padding-top: 0;
            padding-bottom: 0;
        }
    }
}
