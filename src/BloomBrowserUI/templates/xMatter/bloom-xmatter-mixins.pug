include ../bloom-foundation-mixins

//- -------------------------------------------------------------------------------
//-	This first group of mixins should be used to construct the factory as well
//- as custom xmatter templates.
//- -------------------------------------------------------------------------------

mixin image-common(key)
	+image(data-book=key)&attributes(attributes)
		block
//- in xmatter, everything must be keyed

mixin image-xmatter(key)
	+image-common(key)&attributes(attributes)

mixin page-xmatter(label)
	+page(label)(data-page="required singleton")&attributes(attributes)
		block

mixin page-cover(label)
	- requireOneArgument('page-cover',arguments)
	+page-xmatter(label).cover.coverColor.bloom-frontMatter&attributes(attributes)
		block

mixin chooser-topic
	//- TODO: Somehow the data-functionOnHintClick doesn't interact well with the new label.bubble method.
	.coverBottomBookTopic.bloom-userCannotModifyStyles.bloom-alwaysShowBubble.Cover-Default-style(data-derived="topic", data-functionOnHintClick="ShowTopicChooser()", data-hint = "Click to choose topic")

mixin field-ISBN
	.ISBNContainer(data-hint="International Standard Book Number. Leave blank if you don't have one of these.")
		span.bloom-doNotPublishIfParentOtherwiseEmpty.Credits-Page-style
			| ISBN
		div.bloom-translationGroup(data-default-languages="*")
			div.bloom-editable(data-book="ISBN", lang="*").Credits-Page-style

mixin field-acknowledgments-localizedVersion
	// readOnlyInAuthorMode: we want to leave this blank for if/when someone takes this doc and is translating it.
	//- Why both versionAcknowledgments && inside-cover-version-Credits-Page-style?
	//-   versionAcknowledgments governs placement on the page, inside-cover-version-Credits-Page-style is a
	//-   holding place for user style adjustments (like font-size)
	// removed .bloom-readOnlyInAuthorMode because when you're putting together a shell book, you often have to put in the name of the translator
	+field-prototypeDeclaredExplicity("N1").versionAcknowledgments
		//- TODO: I want to change this to "Credit people involved in this translation, in {lang}", but many localizations
		//- will then not be used at all, even their old versions which are better than nothing. How to upgrade the English
		//- without losing all the rest?
		block versionAcknowledgmentsLabel
			label.bubble
				| Name of the translator, in {lang}
		+editable("N1").versionAcknowledgments.Credits-Page-style(data-book="versionAcknowledgments")

mixin field-acknowledgments-originalVersion
	+field-prototypeDeclaredExplicity("N1").originalAcknowledgments
		label.bubble Original (or Shell) Acknowledgments in {lang}
		+editable(kLanguageForPrototypeOnly).bloom-copyFromOtherLanguageIfNecessary.Credits-Page-style(data-book='originalAcknowledgments')
			| {Original Acknowledgments}


//use Bloom's "branding" api (see BrandingApi.cs) to get an image if it exists in the current Branding folder, selected in Settings
mixin optional-branding-image(key)
	img(src="/bloom/api/branding/image?id="+key+".svg" type='image/svg' onerror="this.style.display='none'")&attributes(attributes)

mixin field-bottom-left-branding
	+optional-branding-image('cover-bottom-left').branding

mixin field-credits-branding
	+optional-branding-image('credits-page').branding

mixin field-title-page-branding
	.bottomImageWrapper
		+optional-branding-image('title-page').branding

mixin field-back-cover-branding
	//- only one of these should succeed. That is, the pack should only supply one or the other
	+optional-branding-image('back-cover-outside-wide').branding.branding-wide
	+optional-branding-image('back-cover-outside').branding

//- -------------------------------------------------------------------------------
//-	Unless every page of your xmatter pack needs to be different than the "factory"
//-	one that comes with Bloom, use the following mixins to reuse the pages that
//-	don't have to be customized.
//-	HOWEVER: at this point you'd still have to copy the CSS from factory-xmatter.css
//-	for them to be useful. In the future, Bloom may make it easier to just borrow
//-	pages along with the stylesheets that are needed.
//- -------------------------------------------------------------------------------

//- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//- If you copy any of these and paste them into your own custom xmatter template,
//- be sure to change the ids to your own unique ones!
//- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

mixin standard-cover-contents
	//- enhance: could we 1) adjust stylesheet and 2) preserve bookTitle value to simplify this to
	//- 	+field-matter('bookTitle').Title-On-Cover-style
	//- 		label.bubble Book title in {lang}
	//- This current pattern is born of pre-jade days when it didn't matter much, but now in the
	//- light of jade it is overly complicated.

	+field-prototypeDeclaredExplicity("V,N1").bookTitle
		label.bubble Book title in {lang}
		+editable(kLanguageForPrototypeOnly).bloom-nodefaultstylerule.Title-On-Cover-style(data-book='bookTitle')

	.bloom-imageContainer.bloom-backgroundImage(data-book='coverImage', style="background-image:url('placeHolder.png')")

	// 2 columns: first for an optional logo, then text content
	.bottomBlock
		+field-bottom-left-branding.bottom-left-branding

		// 2 rows
		.bottomTextContent
			//NB: don't convert this to an inline label; that interferes with the bloom-copyFromOtherLanguageIfNecessary,
			// because it is never empty
			.creditsRow(data-hint='You may use this space for author/illustrator, or anything else.')
				+field-prototypeDeclaredExplicity("V")
					+editable(kLanguageForPrototypeOnly).smallCoverCredits.Cover-Default-style(data-book='smallCoverCredits')
			.bottomRow
				.coverBottomLangName.Cover-Default-style(data-book='languagesOfBook')
				+chooser-topic.coverBottomBookTopic

mixin factoryStandard-outsideFrontCover
	// FRONT COVER
	+page-cover('Front Cover')(data-export='front-matter-cover')&attributes(attributes).frontCover.outsideFrontCover#74731b2d-18b0-420f-ac96-6de20f659810(data-xmatter-page='frontCover')
		+ standard-cover-contents

mixin factoryStandard-creditsInsideFrontCover
	// Inside Front Cover CREDITS PAGE
	+page-cover("Credits Page").credits(data-export='front-matter-credits')&attributes(attributes)#B7DB9AC7-5DCC-4D55-86B5-6DD2A5303AA9
		+credits-contents

mixin factoryStandard-credits-interiorPage
	// CREDITS PAGE
	+page-xmatter("Credits Page").bloom-frontMatter.credits(data-export='front-matter-credits')&attributes(attributes)#2CCC8F26-A797-4A5B-9BA7-E29823D2CB24
		+credits-contents

mixin block-licenseAndCopyright
	.bloom-metaData.licenseAndCopyrightBlock(data-functiononhintclick="bookMetadataEditor",data-hint="Click to Edit Copyright & License",lang="V")
		.copyright(data-derived="copyright", lang="*").Credits-Page-style
			| {copyright}
		block copyrightHolderAddress
			// no default content
		.licenseBlock
			img.licenseImage(src="license.png" data-derived="licenseImage")
			.licenseUrl(data-derived="licenseUrl", lang="en") http://creativecommons.org/licenses/by/4.0/
			.licenseDescription(data-derived="licenseDescription",lang="en").Credits-Page-style You are free to make commercial use of this work. You may adapt and add to this work. You must keep the copyright and credits for authors, illustrators, etc.
			.licenseNotes(data-derived="licenseNotes", lang="en").Credits-Page-style
				| {License Notes}

mixin credits-contents(includeIsbn = true)
	block creditsContent
		+block-licenseAndCopyright
		+field-acknowledgments-localizedVersion
		//- Here code puts in something like "From the original Copyright Pratham Books 2016. CC-BY. Any license notes here."
		.copyright(data-derived="originalCopyrightAndLicense").Credits-Page-style
		+field-acknowledgments-originalVersion

		if(includeIsbn)
			+field-ISBN
		+field-credits-branding

mixin factoryStandard-titlePage
	+page-xmatter('Title Page').titlePage.bloom-frontMatter(data-export='front-matter-title-page')&attributes(attributes)#5dcd48df-e9ab-4a07-afd4-6a24d0398381
		+title-page-contents

mixin standard-titlePage-inside-front-cover
	+page-xmatter('Inside Front Cover').cover.coverColor.titlePage.bloom-frontMatter(data-export='front-matter-title-page')&attributes(attributes)#aacd48aa-aaab-4a07-afd4-6a24d03983aa
		+title-page-contents

mixin standard-creditsPage-back-cover
	//re data-export: if we export this, we still want to export it as front matter
	+page-xmatter('Inside Back Cover').cover.coverColor.credits.bloom-backMatter(data-export='front-matter-credits-page')&attributes(attributes)#bbcd48aa-bbab-4a07-afd4-6a24d03983bb
		+credits-contents

mixin title-page-contents
	// TITLE PAGE
	+field-prototypeDeclaredExplicity("V,N1")#titlePageTitleBlock
		label.bubble Book title in {lang}
		+editable(kLanguageForPrototypeOnly).bloom-nodefaultstylerule.Title-On-Title-Page-style(data-book='bookTitle')
	block originalContributions
		+field-prototypeDeclaredExplicity("N1")#originalContributions
			block originalContributionsLabel
				//- if you modify this next line, modify it also in the SIL PNG custom xmatter
				label.bubble(data-link-text='Paste Image Credits' data-link-target='PasteImageCredits()')
					| The contributions made by writers, illustrators, editors, etc., in {lang}
			+editable(kLanguageForPrototypeOnly).credits.bloom-copyFromOtherLanguageIfNecessary.Content-On-Title-Page-style(data-book='originalContributions')
	+field-prototypeDeclaredExplicity("N1")#funding
		label.bubble Use this to acknowledge any funding agencies.
		+editable(kLanguageForPrototypeOnly).funding.Content-On-Title-Page-style.bloom-copyFromOtherLanguageIfNecessary(data-book='funding')
	#languageInformation.Content-On-Title-Page-style
	.languagesOfBook(data-book='languagesOfBook')
	//- review: can we get rid of these "langName" classes?
	.langName('data-library'='dialect')
	.langName(data-library='languageLocation').bloom-writeOnly
	+field-title-page-branding

mixin standard-blankInsideFrontCover
	+page-cover('Inside Front Cover').cover.coverColor.insideFrontCover.bloom-frontMatter(data-export='front-matter-inside-front-cover')#BA00DE13-734C-4036-9901-7040275B9000
		+field-mono-meta("N1","insideFontCover").Inside-Front-Cover-style
			label.bubble If you need somewhere to put more information about the book, you can use this page, which is the inside of the front cover.

mixin factoryStandard-insideBackCover
	// Inside Back Cover
	+page-xmatter('Inside Back Cover').cover.coverColor.insideBackCover.bloom-backMatter(data-export='back-matter-inside-back-cover')&attributes(attributes)#502BE62F-A4D0-4225-A598-1A203FA73239
		+field-mono-meta("N1","insideBackCover").Inside-Back-Cover-style
			label.bubble If you need somewhere to put more information about the book, you can use this page, which is the inside of the back cover.

mixin factoryStandard-outsideBackCover
	// Outside Back Cover
	+page-xmatter('Outside Back Cover').cover.coverColor.outsideBackCover.bloom-backMatter(data-export='back-matter-back-cover')&attributes(attributes)#6AB1D898-9E35-498E-99D4-132B46FAFDA4
		//- +field-mono-version1("N1","If you need somewhere to put more information about the book, you can use this page, which is the outside of the back cover.").outside-back-cover-style(data-book='outsideBackCover')
		+field-mono-meta("N1","outsideBackCover").Outside-Back-Cover-style
			label.bubble If you need somewhere to put more information about the book, you can use this page, which is the outside of the back cover.
		+field-back-cover-branding

mixin standard-ISOLanguageCode
	.iso693Code
		// TODO we need this to be localizable, so we can have "ISO 639-3 Language Code" or "Code langue ISO 639-3"
		| ISO 639 Language Code:
		DIV(data-collection='iso639Code')
