<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_thumbnailImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="_thumbnailImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        GQAAAk1TRnQBSQFMAwEBAAGwAQABsAEAATwBAAE8AQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwAB8AMA
        ATwDAAEBAQABGAUAAcABqCQAA/sD9ITzBvQD+/8A/wAzAAP/A/0G/Ab2A/wD+wP6bPgG+QP6BvwD/QP1
        A/cD/QP//wD/AC0AA/0D9QP0A/ID8QPyA/MD8QPuBuxj6wPsBu0D7gPwA/ID9gP1A/MD9AP8/wD/AC0A
        A/wD9AP9A/kD9APtA+QD2QPSA9ADz2POA9AD0gPRA9QD3QPmA+4D9AP5A/MD9gP8A///AP8AJwAD/AP0
        A/wD+APvA94DwgOcA4oDhWaEA4UDhgOJA5UDuAPUA+cD8gb3BvUD/f8A/wAnAAP9A/QG9gPpA8UDpQOJ
        A3wJdwZ2XXcDeAN7A4UDnQO6A94D8wP3BvgD9AP9/wD/ACcAA/4D+QP0A/MD4QOfA5MDvgPOCcwDywPJ
        A8wDzVfMA80DzgPEA5YDkwPVA/gD+wb1A/kD/v8A/wAtAAP7A/MD3AOPA4YD2AP2CfID8QPvA/ID9RL0
        EvUb9hL3CfYD9wPiA48DgAPRA/MD9gP0A/v/AP8AMwAD/gP6A+gDlQN/A9cD8wPrA+oD6wPpA+cD7APw
        A+4D7QbuBu8G8AnxA/ID8wb0EvUS9gn1A/YD4QOIA4ID4Ab4A/oD/v8A/wA5AAPxA5kDfQPWA/ID6APn
        A+gD5gPkA+kD7gPsA+sG7AbtBu4G7wPwA/ED8gbzBvQM9RL2A/UG9AP2A+AGhQPp/wD/AEUAA/EDmwN/
        A9YD8gPoA+cD6APmA+QD6QPuA+wD6wbsBu0D7gPvBvAG8QPyBvMG9Ab1BvYM9wb2A/UG9AP2A+AGhQPp
        /wD/AEUAA/EDmwOAA9YD8gPoA+cD6APmA+QD6QPuA+wD6QPhCdsG3AbdBt4D3wngA+ED4gPnA/ED9gz3
        BvYD9Qb0A/YD4AaFA+n/AP8ARQAD8QOdA4ED1wPyA+kD5wPoA+YD5APpA+4D7APmA9IDxQPEA8MMxAnF
        CcYDxwPJA9MD6wP3DPgG9wP2BvUD9gPgBoUD6f8A/wBFAAPxA50DggPYA/ID6QPnA+gD5gPkA+kD7gPs
        A+gD3QnWDNcG2APZCdoD2wPcA+ID8AP3DPgG9wP2BvUD9gPgBoUD6f8A/wBFAAPxA54DhAPZA/MD6QPn
        A+gD5gPkA+kD7gPsA+sG7APtA+4G7wbwBvED8gbzBvQG9Qb2BvcG+Ab3A/YG9QP2A+AGhQPp/wD/AEUA
        A/IDnwOFA9kD8wPpA+cD6APmA+QD6QPuA+wD6APdA9YG1QbWBtcJ2AbZDNoG2wncA90D3gPpA/UG9AP2
        A+AGhQPp/wD/AEUAA/IDoAOGA9kD8wPpA+cD6APmA+QD6QPuA+wD5gPSA8UDxAnDBsQJxRLGD8cDyQPL
        A98D9Qb0A/YD4AaFA+n/AP8ARQAD8gOhA4gD2gPzA+kD5gPnA+YD5APpA+4D7APpA+EJ2wbcBt0J3gbf
        DOAG4QniBuMD6wP1BvQD9gPgBoUD6f8A/wBFAAPyA6EDiQPaA/MD6QPmA+cD5gPkA+kD7gPsA+oD6APm
        BucG6AbpBuoJ6wbsBu0G7g/vA/ID9Qb0A/YD4AaFA+n/AP8ARQAD8gOiA4oD2wPzA+kD5wPpA+cD4wPo
        A+0D7APoA9kG0AnPBtAG0QnSDNMP1APVA9YD5AP0BvMD9QPgBoUD6f8A/wBFAAPyA6QDiwPbA/MD6QPj
        A98D4QPjA+gD7QPsA+cD1QbKCckMygPLBswbzQPPA9AD4QP0BvMD9QPgBoUD6f8A/wBFAAPyA6UDjAPc
        A/MD6QPXA8MD0QPkA+kD7QPrA+kD5APgA+ED4AbhBuIG4wPkBuUS5gnnA+gD5wPtA/MG8gP1A+AGhQPp
        /wD/AEUAA/IDpgOOA9wD8wPpA9cDwgPRA+QD6QPtA+sD6APiA90G3gzfBuAD4QbiBuMb5APrA/MG8gP1
        A+AGhQPp/wD/AEUAA/IDpwOPA90D8wPpA+ID3QPfA+MD6APtA+sD5APPA8EGwgzDFcQMxQzGA8UD2gPy
        BvED9QPgBoUD6f8A/wBFAAPyA6cDkQPdA/MD6QPmA+cD5QPjA+gD7QPrA+MDyAG1ArMBsQGrAagBrgGn
        AaMBrwGnAaMBrwGnAaMBrwGnAaMBrwGnAaMBrwGoAaQBrwGoAaQBsAGoAaQBsAGoAaQBsAGoAaQBsAGo
        AaQBsAGoAaQBsAGpAaUBsAGpAaUBsAGpAaUBsAGpAaUBrwGoAaQBrwGnAaQBrgGnAaMBsgGuAawBuQK4
        A9QD8gbxA/UD4AaFA+n/AP8ARQAD8gOpA5MD3gP0A+gD5QPmA+QD4gPoA+0D6wPiAcgCxwGyAa0BrAGm
        AZcBjwGfAYwBgQGgAY0BggGgAY0BggGgAY0BggGgAY0BggGgAY0BggGgAY0BggGhAY4BgwGhAY4BgwGh
        AY4BgwGhAY4BgwGhAY4BgwGhAY4BgwGhAY4BgwGhAY4BgwGgAY0BgwGeAYsBggGdAYkBgQGbAYkBgAGm
        AZwBlgG3ArYD0wPxBvAD9APgBoUD6f8A/wBFAAPyA6oDlAPeA/QD6APlA+YD5APiA+gD7QPrA+IByALH
        AbMBrQGrAacBlgGMAaEBigF9AaIBiwF+AaIBiwF+AaIBiwF+AaIBiwF+AaIBiwF+AaIBiwF+AaIBiwF/
        AaMBjAF/AaMBjAF/AaMBjAF/AaIBiwF/AaEBiwF/AaABiQF9AZwBhwF8AZoBhgF7AZoBhQF7AZkBhAF6
        AZcBgwF5AaQBmAGSAbcCtQPTA/EG8AP0A+ADhgOFA+n/AP8ARQAD8gOqA5UD3wP0A+gD5QPmA+QD4gPo
        A+0D6wPiAsgBxwG1Aa8CrAGaAZABqAGQAYMBqQGRAYQBqQGRAYQBqQGRAYQBqQGRAYQBqQGRAYQBqQGR
        AYQBqQGRAYQBqgGSAYUBqgGSAYUBqgGSAYUBqQGRAYUBpwGPAYMBpAGNAYEBmwGHAX0BmAGFAXwBmgGG
        AX0BmgGGAXwBmAGFAXsBpQGaAZQBtwG2AbUD0wnwA/QD4QOHA4YD6f8A/wBFAAPyA6oDlgPfA/QD6APl
        A+YD5APiA+gD7QPrA+ICyAHHAbYBsAGtAbMBoAGXAbEBmAGMAbEBmAGMAbEBmAGMAbIBmQGNAbIBmQGN
        AbIBmQGNAbIBmQGNAbIBmQGNAbIBmQGNAbIBmQGNAa0BlwGLAaoBlAGKAaYBkQGIAaIBjgGFAZwBiwGD
        AZsBigGDAZwBiwGDAaEBjgGEAaYBkQGGAa4BogGbAbgCtgPTCfAD9APhA4cDhgPp/wD/AEUAA/IDrAOX
        A98D8wPnA+QD5QPjA+ED5wPsA+oB4gLhAcgCxwG4AbIBrwG5AaUBnQG5AZ8BlAG5AZ8BlAG5AZ8BlAG6
        AaABlQG6AaABlQG6AaABlQG6AaABlQG6AaABlQG6AaABlQG5AZ8BlQGwAZsBkQGpAZcBjgGjAZMBjAGf
        AZABigGeAY8BigGeAZABigGfAZEBiQGoAZYBjQG1AZ8BkwG5AasBowG5ArcD0gbvA/AD9APiBogD6v8A
        /wBFAAPzA60DmQPgA/MD5wPkA+UD4wPhA+cD7APqAuIB4QHJAcgBxwG8AbYBsgHGAbMBpwHLAbIBogHL
        AbIBogHLAbIBogHMAbMBowHMAbMBowHMAbMBowHMAbMBowHMAbMBowHMAbMBowHLAbIBowHCAa0BnwG3
        AaUBmgGiAZYBkAGYAY8BiwGiAZYBkAGjAZcBkQGdAZMBjQGrAZ0BlAHFAbABoAHEAbYBrAG6ArgD0Qbu
        A+8D9APiBokD6v8A/wBFAAPzA64DmgPgA/MD5wPkA+UD4wPhA+cD7APqAuIB4QHJAcgBxwHAAboBtQHR
        Ab8BrwHaAcEBrQHbAcIBrgHbAcIBrgHaAcMBrgHaAcIBrgHcAcMBrgHcAcMBrgHcAcMBrwHcAcMBrwHb
        AcIBrwHSAb0BqwHEAbIBpAGjAZoClAGQAYwBpQGcAZUBqAGeAZYBmgGUAY8BrQGiAZkB0gG9AasBzgG/
        AbMBugG5AbgD0QbuA+8D9APiA4oDiQPq/wD/AEUAA/MDrwOcA+ED9APmA+MD5APjA+ED5gPrA+kD4QLI
        AccBvwG5AbMB0AG7AagB2AG9AaMB2AG+AaQB1wG+AaUB1gG/AaYB1gG+AaUB2QG8AaMB2gG9AaMB2gG9
        AaMB2gG9AaMB2gG9AaMB1gG7AaIBzAG0AZ4BrwGgAZMBoAGWAY0BqQGcAZEBpAGaAZABkwGOAYsBpQGb
        AZIBzQG1AZ8BywG7AawBugG4AbcD0QbtA+4D9APiA4sDiQPq/wD/AEUAA/MDrwOdA+ID9APmA+MD5APj
        A+ED5gPrA+kD4QLIAccBvwG4AbEBzwG4AaIB1gG7AZ4B1AG/AaMB0gHCAacB0gHDAaoB0gG/AaYB1QG6
        AZ4B1wG5AZwB2QG5AZsB2QG5AZsB2QG5AZsB2QG5AZsB0wG1AZkBvAGnAZMBrgGeAY8BrAGdAY8BowGX
        AYwBkAGMAYgBogGXAY0BygGwAZcByQG3AaYBugG4AbYD0QbtA+4D9APiA4sDiQPq/wD/AEUAA/MDsAOe
        A+ID9APmA+MD5APjA+ED5gPqA+gD4AHIAscBvgG4AbIBzQG5AaMB0gHCAagBzQHTAb8BzQHcAcwB0QHf
        AdEBzwHUAcMBzAHFAa0B0QG+AaMB2AG4AZoB2AG4AZoB2AG4AZoB2AG4AZoB1QG3AZoBywGxAZcBwAGq
        AZUBsQGgAZABpQGZAY0BmwGTAYoBrAGeAY8BzgGyAZgBywG4AacBugG4AbYD0AbsA+0D8wPiA4wDiwPq
        /wD/AEUAA/MDsgOfA+ID9APmA+MD5APjA+ED5gPqA+gD4AHIAscBvgG4AbIBygG6AaUBzwHIAbEBzQHh
        AdUB0AHuAeYB1wHxAewB0AHjAdgBxQHQAbwBzQHDAaoB2AG4AZoB2AG4AZoB2AG4AZoB2AG4AZoB1wG4
        AZoB1gG3AZoBzQGyAZgBuQGlAZIBrQGeAY8BrAGdAY4BugGmAZMB0gG1AZkBzAG5AacBugG4AbYD0Abs
        A+0D8wPiA4wDiwPq/wD/AEUAA/MDsgOgA+MD8wPmA+QD5QPjA+AD5QPqA+gD4ALHAcYBvQG5AbMBxwG9
        AakB0AHMAbgB2QHnAd8B4QHzAe8B6AH1AfMB2QHpAeEBwgHZAssByAGyAdgBuAGaAdgBuAGaAdgBuAGa
        AdgBuAGaAdgBuAGaAdcBuAGaAdIBtQGZAcUBrAGVAcABqQGUAcUBrAGVAcwBsQGXAdUBtwGaAcsBuAGm
        AbkBtwG1A88G6wPsA/MD4wONA4wD6v8A/wBFAAPzA7QDogPjA/MD5gPeA9gD2wPgA+UD6gPoA+ACxwHG
        AbwBuAGyAccBvAGpAdABywG3AdcB5QHdAd4B8QHtAeUB8wHxAdcB6AHfAcMB2AHIAcsBxwGxAdgBuAGa
        AdgBuAGaAdgBuAGaAdgBuAGaAdgBuAGaAdgBuAGaAdUBtwGZAc8BsgGXAc4BsQGXAdMBtQGZAdYBtwGZ
        AdcBuAGaAcsBuAGmAbkBtwG1A88G6wPsA/MD4waNA+r/AP8ARQAD8wO1A6MD5AP0A+UD0gO9A80D4QPm
        A+oD5wPfAccCxgG9AbcBsQHLAbkBpQHOAcUBrgHIAdsBzgHJAecB3wHPAe0B5wHMAd8B0gHGAcwBtQHO
        AcEBpwHYAbgBmgHYAbgBmgHYAbgBmgHYAbgBmgHYAbgBmgHYAbgBmgHXAbgBmgHVAbYBmQHVAbYBmQHX
        AbcBmgHXAbgBmgHYAbgBmgHLAbgBpgG5AbcBtQPPBuoD6wPyA+MDjgONA+r/AP8ARQAD8wO1A6QD5AP0
        A+UD1APDA88D4APlA+oD5wPfA8YBugG2AbIBxAG3AakBxQG+Aa4BvgHMAcMBvQHUAc4BwQHZAdQBwgHP
        AcUCwQGxAccBuwGpAc0BtwGjAc0BtwGjAc0BtwGjAc0BtwGjAc0BtwGjAc0BuAGkAc0BuAGkAc0BuAGk
        Ac0BuAGkAc0BuAGkAc0BuAGkAc0BuAGkAcQBuAGsAbgBtwG2A88G6gPrA/ID4wOOA40D6v8A/wBFAAPz
        A7YDpgPlA/QD5QPeA9wD3QPeA+QD6QPmA94DxQG2AbUBtAG4AbUBswG4AbcBtAG4AboBuQG3AbwBuwG4
        Ab0BvAG4AbsBuQK4AbUBuQG3AbMBuwG2AbIBuwG2AbIBuwG2AbIBuwG2AbIBuwG2AbIBuwG3AbMBuwG3
        AbMBuwG3AbMBuwG3AbMBuwG3AbMBuwG3AbMBuwG3AbMBugG3AbUDtwPOBukD6gPyA+MDjgONA+r/AP8A
        RQAD8wO2A6cD5QP0A+UD4QPiA+AD3gPkA+kD5gPgA9EJyBLJD8obywPYBukD6gPyA+MDjgONA+r/AP8A
        RQAD8wO4A6gD5QPzA+QD4APhA+AD3gPjA+gD5QPjA+ID4QziDOMP5BvlA+YG6APpA/ID4wOPA44D6v8A
        /wBFAAPzA7gDqAPlA/MD5APgA+ED4APeA+MD6APlA+AD2BvSD9MD1QPZA+IY6APnA+gD8gPjA48DjgPq
        /wD/AEUAA/MDuAOpA+YD8wPjA98D4APfA90D4wPoA+QD3QPKA74DvRW8D70DvwPIA9wY5wPmA+cD8QPj
        A5ADjwPq/wD/AEUAA/MDugOqA+YD8wPjBt8D3gPcA+ID5wPkA+AD1xvRD9ID1APYA+EY5gPlA+YD8APj
        BpAD6v8A/wBFAAPzA7oDqwPmA/MD4wbfA94D3APiA+cD5APiA+AD3wzgDOEP4hvjA+UD5gPlA+YD8APj
        BpAD6v8A/wBFAAP0A7oDrAPnA/MD4gPeA98D3QPbA+ED5gPjA94D0wbMFcsPzBjNA88D2QPlA+QD5QPw
        A+MGkAPq/wD/AEUAA/QDugOtA+gD8wPiA94D3wPdA9sD4QPmA+MD3QPMA8IDwRXAJMEDwgPEA9QD5QPk
        A+UD8APjBpAD6v8A/wBFAAP0A7wDrgPoA/MD4gPdA94D3APaA+AD5gPiA98D2APUA9UJ1AzVD9YY1wPY
        A94D5APjA+QD8APjA5EDkAPq/wD/AEUAA/QDvAOvA+gD8wPiA90D3gPcA9oD4APmA+IJ4AzhDOIP4yHk
        A+MD5APwA+MDkQOQA+r/AP8ARQAD9AO8A68D5wPyA+ED3APdA9wD2gPgA+UD4QnfBuAS4Q/iIeMD4gPj
        A+8D4wORA5AD6v8A/wBFAAP0A74DsgPoA/UD6QPlA+YD5QPjA+gD7APpCecG6AbpDOgw6QPoA+kD8QPk
        A5UDkwPr/wD/AEUAA/QDwgO3A+kD+wP3A/YD9wP2A/QD9gP5J/cS9hv1A/QD9QP2A+UDnQObA+z/AP8A
        RQAD9QPRA8MD1wPdBtwD3QPcA9sD3APdA9wG2wbaA9kG2AbWA9UG1AbSBtED0APPA84GzQPMBssGyQbI
        A8cDyQPEA6oDtgPv/wD/AEUAA/cD5QPTA7gDqwanA6kJqgOpA6cDpgOlA6MDogOgA54DnQObA5kDlwOW
        A5QDkgORA48DjgOMA4oDiAOHA4UDgwOBA4ADfgN9A3sDegN5A38DjgO6A90D8/8A/wBFAAP6A/AD5gPY
        A9IJ0QnSBtED0AbPA84GzQPMBssJyQbIA8cGxgPFA8QGwwPCA8EGwAa/A74DvQPAA8gD3gPuA/j/AP8A
        RQAD/gP9gfwD/QP+/wD/AP8A/wD/AP8A/wDYAAFCAU0BPgcAAT4DAAEoAwAB8AMAATwDAAEBAQABAQUA
        AYABBxYAA/8BAAH8BQABAQHwGAABwAYAAXAYAAHABgABcBgAAcAGAAEQGAABwAYAARAYAAHABgABEBgA
        AcAGAAEQGAAB8AYAAXAYAAHwBgABcBgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEH
        AfAYAAH8BQABBwHwGAAB/AUAAQcB8BgAAfwFAAEHAfAYAAf/AfAYAAf/AfAYAAs=
</value>
  </data>
</root>