<html>
<head>
<title>File Format xxx</title>
	<link  rel="stylesheet" href="style.css" type="text/css" />

	<style type="text/css">
		.style1
		{
			background-color: #FFFFCC;
		}
		.style2
		{
			background-color: #C0C0C0;
		}
	</style>

</head>
<body style="direction: ltr">
<h1>Bloom Format</h1>
<div class="note">The following information is for advanced primer or shell developers.  If you're just making shells for other people to use, you probably don't need to know any of the following.</div>
<br />
<div class="note">
	Bloom is in experimental mode, and the Bloom format is still evolving in
	response to needs we discover. Take that into account before converting hundreds
	of books. The wise thing at this point it to convert one book of each type, so that we can find any missing file-format elements that you will need. The plan is to cease any breaking changes by early 2012.</div>
	<p>
Bloom documents are HTML 5
		(saved as well-formed XML) with certain conventions and pre-defined class
		names and data-* attributes, as
	described below. Of course, you&#39;ll want to open up a bloom html file and see for
		yourself how it is structured.&nbsp; Two simple examples are the
		A5Portrait/templatePages.htm, and the Vaccinations.htm, which comes in the Sample Shells project. You can look at the originals or create a book using them,
		and look at what Bloom does.</p>
<h2>Structure</h2>
<p>Each page is indicated by &lt;div class="-bloom-page"&gt;. The only things that
	the user can edit are images and &lt;textarea&gt;s.&nbsp; There can be multiple
	&lt;textarea&gt;s together inside a &lt;p&gt;, each marked with a distinct <em>lang</em>
	attribute. Bloom will take care of only showing the user the correct &lt;textarea&gt;
	which matches the language the user is currently working in.</p>
	<h2>Formatting</h2>
	<p>Formatting within these pages is typically done by adding a unique class to the
	div for a particular page layout. That class then triggers the CSS style rules
	you&#39;ve made for the page.&nbsp; Using <a href="http://www.skybound.ca">Stylizer</a>,
	this can be much less painful than it sounds.&nbsp; It bears repeating: all of
	this is only for making <strong>new page templates</strong>, or for jobs (like fancy literacy
	primer templates) that can&#39;t use the standard page templates found in the
		A5Portrait Template.&nbsp; </p>
<h2>StyleSheets</h2>
<h4>Built-in stylesheets</h4>
	<p>These are part of Bloom and are not available for customization under any circumstances. If you delete the links to any of them in the html, they will be added back to the html.</p>
<ul><li>basePage.css: always applied. Used for styles which always apply, regardless of mode or paper size.</li>
<li>editMode.css is applied during editing</li>
<li>previewMode.css is applied during viewing and printing</li>
</ul>
<h4>Paper &amp; orientation stylesheets</h4>
	<p>These should be named according to this pattern:&nbsp; &lt;papersize&gt;&lt;orientation&gt;&lt;customName&gt;.css. E.g. a5portrait.css,
		a4LandscapeIndonesia.css. Bloom actually looks at the name to figure some things
		out when making a PDF.</p>

	<div class="note">Note: when a new book is created, each of these pages is copied in to the folder
		with the book, so that if it is moved to a computer which doesn&#39;t have bloom, it
		will be still viewable.&nbsp; However, each time the book is opened, Bloom will
		replace the stylesheets in that folder with the versions in the Bloom program
		directory.&nbsp; So if you&#39;re working on one of the standard stylesheets, be
		careful to not let Bloom over-write your work.</div>
		<h4>Organization/Region-specific stylesheets and templates</h4>
		<p>TODO: document this</p>
		<h4>Template-specific Stylesheets</h4>
		<p>Some documents will need their own stylesheets. Examples include primers, calendars, and study guides.</p>
		<p>TODO: document this</p>
<h2>Document Data</h2>
	<h4>(TODO)</h4>
	<pre>
		&lt;meta id=&quot;bookLineage&quot;
		content=&quot;name=A5Portrait;id=056B6F11-4A6C-4942-B2BC-8861E62B03B3&quot;/&gt;
		<br />
		&lt;meta id=&quot;bloomBookId&quot; content=&quot;056B6F11-4A6C-4942-B2BC-8861E62B03B4&quot;/&gt;</pre>
<h2>Booklet Styles</h2>
	<p>Bloom's "Publish" tab has PdfDroplet built-in. It can (theoretically) make any booklet format that PdfDroplet can. While future versions of Bloom will let users chose the format, in
		at least one case we know already what the format needs to be. That case is Wall Calendar,
		which knows that it must be printed as a Calendar Booklet.</p>
		<p>REVIEW: it's not clear if we want to say:<ul><li>this is the default, but whatever</li><li>this is the only layout which makes sense (one, or multiple)</li></ul>
	<pre>
		&lt;meta id=&quot;defaultBookletLayout&quot; content=&quot;Calendar&quot;/&gt;</pre>
<h2>Built-in Classes</h2>
<p>While most classes are just there to link with the CSS stylesheet, Bloom has several classes which the c# code looks for and uses:</p>
<ul><li>-bloom-page: Each page is indicated by a &lt;div&gt; which has this class.</li>
	<li>-bloom-showNational: indicates that it shouldn&#39;t be translated. See the section
	&quot;other language-related things&quot; below.</li>
	<li>numberedPage: (not actually know to the code, therefore not a "-bloom" one). Pages that should be part of the page numbering; i.e. all pages
		except front matter</li>
</ul>

	<h2>
		Template Page Properties</h2>
	<p>
		Template pages can indicate various properties to the Bloom editor through the
		<em>data-page</em> attribute of the page div.</p>
	<ul>
		<li>singleton: Only a single copy of this page may be added to a book.</li>
		<li>required: Page with this tag are always added to a new book, and the user is not
			allowed to remove them. </li>
		<li>extra: When a book is created, any pages marked with this class will not be
			initially added to the new book. If the user wants one of these pages, he has to
			add it explicitly (by clicking on its icon in the list of template pages).</li>
	</ul>    <p>
		For example, the cover of a book would have a div like this:</p>
	<pre>&lt;div class=&quot;-bloom-page cover coverColor&quot; <strong>data-page=&quot;required singleton&quot;</strong>&gt;</pre>
	<h2>Lineage</h2>
<p>(This area is especially immature)</p>
<p>While Bloom doesn't yet provide it, we may someday need the ability to update all the pages stemming from a certain template page.  For example, an entity might change their standard title page format, and they might like to have a way of updating the existing books that were using the old format. To make that possible in the future, we need to store the lineage now.
	We&#39;re doing this by using HTML 5&#39;s new &quot;data-*&quot; attributes. Here's how it works at the moment:</p>

<pre>    &lt;div class="-bloom-page numberedPage imageOnTop"
	id="c320c12c-f81d-4071-86b1-70396d48048d" <span class="style1">
	data-pageLineage="5dcd48df-e9ab-4a07-afd4-6a24d0398382;</span><span
		class="style3">a3ddc7f4-eef5-453b-babf-76ec86d0eacb&quot;</span>&gt;
</pre>
	<p>Notice that the value has 2 guids (Globally Unique Identifiers), separated by a semicolon.  This tells us that this page came from a page with the id
		a3ddc7f4-eef5-453b-babf-76ec86d0eacb, which in turn came from a page with the id
		5dcd48df-e9ab-4a07-afd4-6a24d0398382.</p>
	<h2>
		Preventing Template pages from showing</h2>
	<p>
		In some documents (e.g. calendar),
		you may want to keep things simple by hiding the list of template pages during
		editing.&nbsp; To do that, add the following to the header of the shell:</p>
	 <pre>
	 &lt;meta id="normallyShowTemplatePages" content="false" /&gt;
	 </pre>
	<h2>
		"Variables&quot;</h2>
	<p>
		If an html element has a <em>
		data-book </em>attribute, Bloom will copy the text in that textarea into other
		elements which have the same <em>data-book</em> property. This allows the user
		to enter a piece of information once, and have it show up all over. For example,
		the following textarea is used in a study book, where many of the pages have a
		heading which, in English, just says &quot;Questions&quot;:</p>
	<pre>
		&lt;textarea lang=&quot;en&quot; data-book=&quot;questionsHeading&quot;&gt;Questions&lt;/textarea&gt;</pre>
	Now, what if
	you want a value to repeat throught <em>all </em>the books in the library? Do that by
	instead using a <em>data-library</em> attribute. Bloom saves such
	variables in the &quot;.bloomLibrary&quot; file that is at the root level of each
	library folder on disk. The values are then used in all future books in that
	library. For example,<pre>
		&lt;p&gt;This language is spoken in the Sub District of &lt;textarea lang=&quot;en&quot; data-library=&quot;subDistrict&quot;&gt;&lt;/textarea&gt; &lt;/p&gt;</A variable comes into use whenever the user edits a book which containing it.
	There is at present no &quot;registry&quot; of variables.</p><p>
	Some variables are known by Bloom itself. For example, when you create a new
	library, Bloom makes you identify the ISO-639 (Ethnologue) code for the
	language. It stores that value under the &quot;Iso639Code&quot; library variable. So if
	you wanted that code to show up on a title page, you could do it this way:<pre style="margin-left: 40px">&lt;p&gt;ISo Code=&lt;span data-library=&quot;Iso639Code&quot;&gt;&lt;/span&gt;&lt;/p&gt;</pre>

	<p>Here are the book variables built-in to Bloom</p>
	<ul>
	<li>vernacularBookTitle: This is shown on the cover, sets the title element of the html, sets the name of the book's folder, and finally, the book's html file.</li>
	<li>topicInNationalLanguage: e.g. "Health", "Math". Currently only used by stylesheets, but reserved for future c# code use.</li>
	</ul>
	<p>Here are the libary variables built-in to Bloom</p>
	<ul>
	<li>nameOfLanguage: this is automatically filled in, so it should only appear in uneditable elements.</li>
	</ul>
<h2>
		Shell Books and Languages</h2>
	<p>
		Shell books may come with source texts in multiple languages, so that users in different countries or with different language strengths can use the source language which works best for them.</p>
	<p>
		So, how do we get all those languages in the same document? This area is still maturing. Currently, the approach is to surround each textarea
	in a p, then have one &lt;textarea&gt; for each source language. Each textarea must have
	its lang attibute set to a proper ISO639 (Ethnologue) code:</p>
	<pre>
		&lt;p&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;textarea<span class="style2"> lang=&quot;tpi&quot;</span>&gt; &quot;Taim yu planim gaden yu save wokim
		banis.&lt;/textarea&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;textarea
		<span class="style2">lang=&quot;en&quot; </span>class=&quot;<span
			class="style2">hideMe</span>&quot;&gt; When you plant a garden,
		you always build a fence.&lt;/textarea&gt;<br />&lt;/p&gt;
	</pre>
	<p>
		Note: the &#39;hideMe&#39; is currently used by Bloom to hide all but one language.&nbsp;
		In the future, we may instead use a dynamically-created css to turn languages on
		and off.</p>
	<p>
		Now, if Bloom makes a book using the above paragraph, it will make a new
		&lt;textarea&gt; for the vernacular; the resulting book will then have 3 textareas in
		this paragraph, with all but the vernacular containing the class &#39;hideMe&#39;.</p>
	<p>
		That &#39;hideMe&#39; class is just to keep the source texts out of the page in the
		browser. In <em>edit mode</em> the Bloom application still reads these
		&lt;textarea&gt;s, and shows the contents source-text pane, to help the user do his
		translation.</p>
		<h2>Other language-related things</h2>
		<p>Books in minority languages normally have some text that is in a language of wider communication. For example, the title of the book is often printed in the national language, below the vernacular one.&nbsp;
			To tell Bloom that we don&#39;t want to translate a text, we use the
			-bloom-showNational tag (REVIEW: this currently just means &quot;don&#39;t mess with this
			element&quot;; it doesn&#39;t do something smart like set the language to the local
			national language. This is fine if the shell was designed for this country.)</p>
	<pre>&lt;textarea <span class="style1">lang=&quot;en&quot;</span> class=&quot;credits
		<span class="style1">-bloom-showNational</span>&quot;
		title=&quot;Enter the contributions made by writers, illustrators, editors, etc.&quot;
		id=&quot;df9d7385-8cfe-43d0-bfc2-6b3423a79954&quot;&gt; &lt;/textarea&gt;</pre>
	<h2>
		Mailing List</h2>
	<p>
		Have more questions? We have a special
		<a href="https://groups.google.com/group/bloom-file">mailing list</a> for discussing the Bloom format.</p>
</body>
</html>