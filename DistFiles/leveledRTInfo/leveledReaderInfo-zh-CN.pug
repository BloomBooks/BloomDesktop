// 介绍分级读物的离线文档
html
	head
		meta(charset='UTF-8')
	body
		h1(id='Vocabulary' i18n='leveled.reader.vocabulary') 词汇
		p(i18n='leveled.reader.start.simple') 最初的几个等级要用孩子熟悉的简单词。如果在你的语言中可行的话，尽量使用单音节单词。 随着孩子的等级逐渐升高，可以开始使用有更多音节的单词, 也可以开始使用孩子不太熟悉的单词。孩子应该已经能够从上下文语境和配图中猜到词意了。
		h1(id='Formatting' i18n='leveled.reader.formatting') 字体设置
		p(i18n='leveled.reader.start.large') 对初级读者来说较大的字号和字词间距更有好处。 把词句放在每页的同样位置也很有帮助。 当读者的水平越来越高时，字号和间距会逐渐减小，句子也可以出现在页面的不同位置。
		p(i18n='leveled.reader.increase.sizes') 在Bloom中需要改变字号、行间距和字词间距时，先点击文本框然后点击文本框左下角的灰色“锯齿”图案。 通过这样设置并做成的模板书，所有使用该模板制成的书都会自动采用这些字体设置。
		h1(id='Predictability' i18n='leveled.reader.predictability') 可预测性
		p(i18n='leveled.reader.repeat.patterns')
			| 文本的“可预测性”指的是读者能猜到下文会发生什么 可以通过重复来提高可预测性。下面列举了一些提高可预测性的做法：
		ul
			li(i18n='leveled.reader.repetition') 重复——重复文本中的部分内容，如每页都使用相同的句子，只改变句中的一个词。
			li(i18n='leveled.reader.sequencing') 顺序——故事含有人们熟知的顺序，如一周的七天或有规律的数字。
			li(i18n='leveled.reader.building.sequence') 建立顺序——故事里部分内容重复出现并在每一页都加入新内容
			li(i18n='leveled.reader.rhyme') 押韵——故事有规律或有顺序，而且还押韵。如：
				blockquote.poetry
					pre
						| 一二三四五，
						| 上山打老虎。
						| 老虎没打着，
						| 打了小松鼠。
						| 松鼠有几只？
						| 一二三四五。
		h1(id='IllustrationSupport' i18n='leveled.reader.illustrations') 配图
		p(i18n='leveled.reader.illustrations.help') 配图能对故事起辅助作用。不同等级、不同类型的读者（见下文）对配图的需要也不尽相同。 切记在没有很多出版物的文化里，人们很难理解复杂的配图。
		ul
			li(i18n='leveled.reader.illustrations.emergent.reader') 对**萌芽读者**来说，配图应该和故事内容紧密结合。 让读者看见配图就能猜到故事情节。 这个等级的配图力求简单。
			li(i18n='leveled.reader.illustrations.early.reader') 对**早期读者**来说，配图的作用是帮助读者理解故事情节。 随着文本长度的增加，读者对配图的依赖逐渐减少，更多从文本中理解意思。 这时的配图可以更复杂一些。
			li(i18n='leveled.reader.fluent.reader') 对**流利读者**来说，配图不用或极少支持故事内容。 读者更多从文本中理解意思，而不是从配图理解意思。 配图可以更加复杂。
		h1(id='ChoiceOfTopic' i18n='leveled.reader.topic.choice') 话题选择
		p(i18n='leveled.reader.topic.choice.discussion') 书的话题有很多。 为新读者编书时要选择他们熟悉的话题。 读者读到自己感兴趣且熟悉的内容时，会产生更大的热情和意愿去读更多的书。对于有经验的读者，可以使用他们不熟悉的话题。
		ul
			li(i18n='leveled.reader.topic.choice.emergent.reader') 对**萌芽读者**来说， 内容应该具体且集中于一个话题，而且该话题必须是读者熟悉且容易理解的。
			li(i18n='leveled.reader.topic.choice.early.reader') 对**早期读者**来说， 可以选择他们熟悉的话题，较深入地介绍。
			li(i18n='leveled.reader.topic.choice.fluent.reader') 对**流利读者**来说，话题可以超出他们熟悉的范围，更多样化、更抽象。
