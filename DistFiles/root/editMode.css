/*This styesheet applied when a book is being edited. It does things like show that images can be changed by click on them.*/
DIV.bloom-imageContainer
{
	border: 1px solid #C0B9B9;
}
/*There are 2 sub-modes of editing, each with their own stylesheets: originalEditMode and translationEditMode.*/
BODY
{
	background-color: #363333;
}
DIV.pageLabel
{
	text-align: left;
	color: #96A9B3;
	margin-left: 5px;
	/*+placement:float-left 0px 0px;*/
	float: left;
	position: relative;
	left: 0px;
	top: 0px;
}
DIV.ui-tooltip-title
{
	text-align: justify;
	margin-left: -9px;
	margin-bottom: -19px;
	margin-top: -8px;
}
DIV.page
{
	background-color: #F8F8F8;
	border: medium outset #000000;
}
DIV.page.coverColor
{
	background-color: #D5D5E4;
	border: medium outset #000000;
}
/*We want divs which are used for editing to look just like textareas (e.g. border). For now, this readOnlyInTranslationMode is an indicator that this is edtiable, but there could be divs which are always edtiable... unfortunately we can't access the contentEditable thing itself. Note that borders are made transpartent by the languagedisplay.css, and there is javascript which notices that transparnet border and makes the field read-only.*/
DIV.readOnlyInTranslationMode
{
	border: thin solid #C0B9B9;
}
DIV.hoverUp
{
	background-color: #D5D5E4;
}
BUTTON.smallImageButton
{
	width: 40px;
	height: 40%;
	/*+border-radius:0;*/
	-moz-border-radius: 0;
	-webkit-border-radius: 0;
	-khtml-border-radius: 0;
	border-radius: 0;
	border-radius: 0 0 0 0;
	z-index: 100;
	background-repeat: no-repeat;
}
BUTTON.largeImageButton
{
	width: 70px;
	height: 52px;
	/*+border-radius:3px;*/
	-moz-border-radius: 3px;
	-webkit-border-radius: 3px;
	-khtml-border-radius: 3px;
	border-radius: 3px;
	z-index: 100;
	background-repeat: no-repeat;
	background-position: 12px 4px;
	border: 2px outset #716666;
}
BUTTON.pasteImageButton.smallImageButton
{
	background-image: url("pasteImageButtonSmall.png") !important;
	background-position: 7px 0px;
}
BUTTON.pasteImageButton.largeImageButton
{
	background-image: url("pasteImageButtonLarge.png") !important;
}
BUTTON.changeImageButton.smallImageButton
{
	background-image: url("changeImageButtonSmall.png") !important;
	background-position: 7px 0px;
}
BUTTON.changeImageButton.largeImageButton
{
	background-image: url("changeImageButtonLarge.png") !important;
}
BUTTON.changeImageButton
{
	/*+placement:anchor-top-right 2px 2px;*/
	position: absolute;
	right: 2px;
	top: 2px;
	/*[disabled]background-position:13px 3px;*/
	background-color: #96668F;
}
BUTTON.pasteImageButton
{
	/*+placement:anchor-bottom-right 2px 2px;*/
	position: absolute;
	right: 2px;
	bottom: 2px;
	/*[disabled]background-position:13px 3px;*/
	background-color: #0C8597;
}
/*Originally, the move button was within the movable thing. Problem is, I couldn't get jquery draggable to actually use this button, using the 'handle' option, probably because it doesn't exist early enough (it pops up on mouseEnter) . But I had to have something in that option, else jquery actually prevents clicking on elements inside the drraggable thing. So I ended up setting the handle to "img", which won't be sufficient once we wan to drag things with no image.So it woud be good to get this working.*/
.moveButtonIcon
{
	background-image: url("moveDivButton.png") !important;
	width: 37px !important;
	height: 37px !important;
}
BUTTON.moveButton
{
	/*+placement:anchor-top-left -19px -17px;*/
	position: absolute;
	left: -19px;
	top: -17px;
	background-image: url("moveDivButton.png") !important;
	background-repeat: no-repeat;
	background-color: transparent;
	width: 16px;
	height: 16px;
	border: 0 hidden #000000;
	z-index: 1000;
	background-size: contain;
}
TEXTAREA, DIV.bloom-editable
{
	border: thin solid #C0B9B9;
	/*[disabled]min-height:34px;*/
}
IMG.hoverUp
{
	background-color: #DFDFDF;
	border: 1px outset #000000;
}
TEXTAREA:focus, DIV.bloom-editable:focus
{
	border: 1px solid rgba(82, 168, 236, 0.6);
	box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);
	outline: 0;
}
TEXTAREA.province
{
	width: 151px;
	height: 33px;
}
.overflow
{
	background-color: #C30606 !important;
}
/*for use with qtip, showing what language each textarea is in
.ui-tooltipbloomLang
{
}
.ui-tooltipbloomLang .ui-tooltip-titlebar
{
background-color: red;
color: #FFFFFF;
border: 0 dashed transparent;
}*/
.fieldInfo-qtip .ui-tooltip-content
{
	border: 0 solid #A03C50;
	padding: 0px;
	text-align: right;
	color: #363333;
	font-size: 8pt;
	margin-top: -8px;
	margin-right: 8px;
}
UL
{
	padding: 0;
	z-index: 1;
	background-color: transparent;
	text-align: right;
	width: 311px;
	/*+placement:shift -49px 1px;*/
	position: relative;
	left: -49px;
	top: 1px;
}
UL LI
{
	display: inline-block;
	padding-right: 11px;
	padding-left: 7px;
	font-size: 9pt;
	margin-right: 11px;
	height: 31px;
}
UL LI A
{
	display: block;
	padding: 5px;
	outline: none;
	/*[empty]font-style:;*/
	text-decoration: none;
	color: #000000;
}
UL LI A:hover
{
	text-decoration: underline;
}
UL LI.active
{
	padding-top: 1px;
	position: relative;
	top: 1px;
	font: bold 11pt sans-serif;
}
UL LI A.active
{
	font-weight: bold;
}
.panel-container
{
	border: 1px solid #000000;
	padding: 0 10px;
}
DIV.textWholePage UL
{
	/*+placement:displace 1px -37px;*/
	position: absolute;
	margin-left: 1px;
	margin-top: -37px;
}
/*suggested by http://jqueryui.com/docs/Upgrade_Guide_17*/
.ui-mouseOver .ui-resizable-handle
{
	width: 8px;
	height: 8px;
	border: 1px solid rgb(128, 128, 128);
	background: rgb(242, 242, 242);
}
.ui-resizable-n, .ui-resizable-s
{
	left: 45%;
}
.ui-resizable-e, .ui-resizable-w
{
	top: 45%;
}
.ui-resizable-se
{
	/*[disabled]bottom:-5px;*/
	/*[disabled]right:-5px;*/
}
