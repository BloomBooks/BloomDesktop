/*+init {*/
*
{
	position: relative;
	margin: 0;
	padding: 0;
	font-size: 1em;
}
H1, H2, H3, H4, H5, H6, TH
{
	font-weight: inherit;
}
ADDRESS, CITE, DFN, VAR
{
	font-style: inherit;
}
CAPTION, CODE, KBD, PRE, SAMP, TT, INPUT, TEXTAREA, SELECT, BUTTON
{
	font-family: inherit;
}
TABLE
{
	border-spacing: 0;
}
TH
{
	text-align: left;
}
HTML, BODY, THEAD, TBODY, TFOOT, TR, TH, TD, BR
{
	position: static;
}
INPUT[type=hidden]
{
	display: none !important;
}
FIELDSET, A IMG
{
	border: 0;
}
BODY
{
	font-size: 100%;
	font-family: sans-serif;
	line-height: 1.5;
}
/*+}*/
DIV.-bloom-page
{
/*before fiddling with these, set the border color of Div.Page in preview.css so you can see what the pdf is doing
these should be 14.8, but wkhtmltopdf shinks it
The folowing are the values which work with a 1px border.  With 0px border, I could not get the pages to come out
properly at all with wkhtmltopdf 0.10.0. It's as if the borders actually help by making the used part of each
page be the full page, regardless of the contents.

min-width: 15.3cm;
max-width: 15.3cm;
/*these should be 21, but wkhtmltopdf shinks it, and this makes each successive page more "off" until it's rediculous
min-height: 21.82cm;
max-height: 21.82cm;

The above is not needed now since the code asks wkthmlpdf to zoom the page by 9.1%, which an invisble 1px border added by
preview.css.

*/
	min-width: 14.8cm;
	max-width: 14.8cm;
	min-height: 21cm;
	max-height: 21cm;
}
.coverBottomRow
{
	margin-top: 0px;
	/*+placement:anchor-bottom-left 0px 21px;*/
	position: absolute;
	left: 0px;
	bottom: 21px;
}
TEXTAREA
{
/*specifying the font again, here, really is needed*/
	font-family: "Andika Basic", "Gentium Basic", "Doulous SIL", Sans-Serif;
	font-size: 12pt;
	width: 11.9cm;
}
.simpleBigVersoContents
{
	height: 18.1cm;
	/*+placement:shift 0px 61px;*/
	position: relative;
	left: 0px;
	top: 61px;
}
.imageOnTop TEXTAREA
{
	height: 7.7cm;
	margin-top: 26px;
}
.cover .-bloom-vernacularBookTitle
{
	height: 3.7cm;
	width: 423px;
	font-size: 30pt;
	text-align: center;
	margin-top: 29px;
}
.cover .picture
{
	max-height: 12cm;
	max-width: 13.2cm;
}
/*e.g. "Health" or "Math"*/
.cover .-bloom-topicInNationalLanguage
{
	width: 5.8cm;
	/*+placement:anchor-bottom-right -14.1cm 0px;*/
	position: absolute;
	right: -14.1cm;
	bottom: 0px;
	text-align: right;
	height: 23px;
}
.cover .-bloom-nameOfLanguage
{
	text-align: left;
	/*+placement:anchor-bottom-left 1cm 0px;*/
	position: absolute;
	left: 1cm;
	bottom: 0px;
	width: 8cm;
}
/*e.g. "Health" or "Math"*/
.titlePage .-bloom-vernacularBookTitle
{
	top: 1cm;
	height: 4.4cm;
	text-align: center;
	font-size: 25pt;
}
.titlePage .creditsHeading
{
	padding-top: 35px;
}
.titlePage .credits
{
	height: 5cm;
	margin-left: 1cm;
	text-align: center;
}
.titlePage .shellCredits
{
	top: 1.5cm;
	height: 5cm;
	width: 12cm;
	margin-left: 1cm;
	position: relative;
	text-align: center;
}
.titlePage .printingHistory
{
	height: 7.5cm;
	margin-left: 1cm;
	text-align: center;
}
.titlePage .-bloom-nameOfLanguage
{
	margin-top: 0.1cm;
	text-align: center;
}
/*the content is set in the preview.css. Here, we just position it*/
.titlePage:after
{
	/*+placement:anchor-bottom-left 33px 0.2cm;*/
	position: absolute;
	left: 33px;
	bottom: 0.2cm;
}
.imageOnTop .picture
{
	max-height: 9.7cm;
	max-width: 12.6cm;
}
.imageInMiddle .picture
{
	max-height: 6.3cm;
}
.imageInMiddle TEXTAREA
{
	height: 5.8cm;
	margin-top: 1cm;
}
.imageOnBottom .picture
{
	max-height: 9cm;
	max-width: 12cm;
	padding-top: 18px;
}
.imageOnBottom TEXTAREA
{
	height: 8.9cm;
	margin-top: 1cm;
}
.textWholePage TEXTAREA
{
	height: 18.9cm;
	margin-top: 1cm;
}
.translators
{
	text-align: center;
	height: 1.6cm;
	position: relative;
}
.imageWholePage P.imageHolder
{
	height: 18.6cm;
	width: 12cm;
	/*+placement:anchor-top-left 0px 0px;*/
	position: absolute;
	left: 0px;
	top: 0px;
	margin-top: 43px;
}
/*TODO: figure out how to center this image vertically*/
DIV.imageWholePage IMG
{
	display: table-cell;
/*doesn't work*/
	vertical-align: middle;
/*doesn't work*/
	max-height: 18.6cm;
	max-width: 12.2cm;
}
.imageOnBottom P.imageHolder
{
	height: 9cm;
}
.cover P.imageHolder
{
	height: 12cm;
	text-align: center;
}
/*in order to make images of different vertical/horizontal shapes come out
correctly, give them a max-width and max-height, then enclose them
in a <p> which has a fixed height.*/
.imageOnTop P.imageHolder
{
	height: 9.7cm;
	text-align: center;
	margin-top: 1cm;
}
DIV.-bloom-page:after
{
	position: static;
	/*+placement:anchor-top-left 7.5cm 20.3cm;*/
	position: absolute;
	left: 7.5cm;
	top: 20.3cm;
}
